{"version":3,"sources":["webpack:///./pages/admin/nurseAssignments/create.tsx","webpack:///./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?49e6","webpack:///./node_modules/@ant-design/icons-svg/es/asn/LeftCircleFilled.js","webpack:///./node_modules/@ant-design/icons/es/icons/LeftCircleFilled.js","webpack:///./node_modules/@ant-design/icons-svg/es/asn/DeleteFilled.js","webpack:///./node_modules/@ant-design/icons/es/icons/DeleteFilled.js","webpack:///./themes/services/api/NurseAssignmentService.ts"],"names":["Option","Select","formItemLayout","labelCol","xs","span","sm","wrapperCol","Create","patients","users","useBaseHook","t","notify","redirect","setStore","getAuth","getStore","useState","loading","setLoading","Form","useForm","form","nurseAssignService","NurseAssignService","onFinish","values","a","console","log","to","create","error","code","message","className","name","initialValues","nurseId","undefined","patientId","dateBegin","dateEnd","note","scrollToFirstError","Item","label","rules","required","showSearch","placeholder","filterOption","input","option","children","toLowerCase","indexOf","result","map","item","push","value","id","key","fullname","renderOptionUser","roomCode","bedCode","renderOptionPatient","format","showTime","style","textAlign","onClick","marginRight","type","htmlType","getInitialProps","ctx","patientService","PatientService","userService","UserService","index","pageSize","errorPatients","filters","JSON","stringify","field","operator","errorUsers","namespacesRequired","_","get","permissions","window","__NEXT_P","props","ref","AntdIcon","Object","assign","icon","displayName","NurseAssignment","context","BaseApi"],"mappings":"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","file":"static\\3bqcv_cRHHIBfHp_4lMA9\\pages\\admin\\nurseAssignments\\create.js","sourcesContent":["import React, { useState } from 'react'\r\nimport Layout from 'themes/layouts/Admin'\r\nimport { Button, Row, Col, Form, Input, Select, InputNumber, Radio, DatePicker } from 'antd';\r\nimport PatientService from 'themes/services/api/PatientService';\r\nimport UserService from 'themes/services/api/UserService';\r\nimport NurseAssignService from 'themes/services/api/NurseAssignmentService';\r\nimport _ from 'lodash';\r\nimport to from 'await-to-js'\r\nimport useBaseHook from 'themes/hooks/BaseHooks'\r\nimport { DeleteFilled, LeftCircleFilled } from '@ant-design/icons';\r\n\r\nconst { Option } = Select\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 4 },\r\n  },\r\n  wrapperCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 18 },\r\n  },\r\n};\r\n\r\nconst Create = ({ patients, users }: { patients: Patient[], users: User[] }) => {\r\n  const { t, notify, redirect, setStore, getAuth, getStore } = useBaseHook();\r\n  const [loading, setLoading] = useState(false);\r\n  const [form] = Form.useForm();\r\n  const nurseAssignService = new NurseAssignService()\r\n  //submit form\r\n  const onFinish = async (values: any): Promise<void> => {\r\n    console.log(values)\r\n    setLoading(true)\r\n    let [error, result]: any[] = await to(nurseAssignService.create(values));\r\n    setLoading(false)\r\n\r\n    if (error) {\r\n      return notify(t(`errors:${error.code}`), t(error.message), 'error')\r\n    }\r\n    notify(t(\"message.recordCreated\"))\r\n    redirect(\"frontend.admin.nurseAssignments.index\")\r\n  }\r\n\r\n  //render option\r\n  const renderOptionPatient = (): JSX.Element[] => {\r\n    let result: JSX.Element[] = [];\r\n    patients.map(item => {\r\n      result.push(\r\n      <Option value={item.id} key={item.id}>{item.code} - {item.fullname} - {item.roomCode} - {item.bedCode}</Option>\r\n      )\r\n    })\r\n    return result;\r\n  }\r\n\r\n  const renderOptionUser = (): JSX.Element[] => {\r\n    let result: JSX.Element[] = [];\r\n    users.map(item => {\r\n      result.push(\r\n      <Option value={item.id} key={item.id}>{item.code} - {item.fullname}</Option>\r\n      )\r\n    })\r\n    return result;\r\n  }\r\n  \r\n  return <Layout>\r\n    <div className=\"content\">\r\n      <Form\r\n        {...formItemLayout}\r\n        form={form}\r\n        name=\"createNurseAssign\"\r\n        initialValues={{\r\n          nurseId: undefined,\r\n          patientId: undefined,\r\n          dateBegin: \"\",\r\n          dateEnd: \"\",\r\n          note: \"\"\r\n        }}\r\n        onFinish={onFinish}\r\n        scrollToFirstError\r\n      >\r\n        <Form.Item\r\n          label={t(\"nurse\")}\r\n          name=\"nurseId\"\r\n          rules={[\r\n            { required: true, message: t('form.required') },\r\n          ]}\r\n        >\r\n          <Select \r\n            showSearch\r\n            placeholder = {t('placeholder.user')}\r\n            filterOption={ (input: any, option: any) => {\r\n              return option.children[2].toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n            } }\r\n          >\r\n            {renderOptionUser()}\r\n          </Select>\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={t(\"patient\")}\r\n          name=\"patientId\"\r\n          rules={[\r\n            { required: true, message: t('form.required') },\r\n          ]}\r\n        >\r\n          <Select\r\n            showSearch\r\n            placeholder = {t('placeholder.patient')}\r\n            filterOption={ (input: any, option: any) => {\r\n              return option.children[0].toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n            } }\r\n          >\r\n            {renderOptionPatient()}\r\n          </Select>\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={t(\"nurseAssignments.dateBegin\")}\r\n          name=\"dateBegin\"\r\n          rules={[\r\n            { required: true, message: t('form.required') },\r\n          ]}\r\n        >\r\n          <DatePicker format={'YYYY-MM-DD'} showTime={false} placeholder={t('placeholder.date')} />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={t(\"nurseAssignments.dateEnd\")}\r\n          name=\"dateEnd\"\r\n        >\r\n          <DatePicker format={'YYYY-MM-DD'} showTime={false} placeholder={t('placeholder.date')} />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={t(\"note\")}\r\n          name=\"note\"\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item wrapperCol={{ span: 24 }} style={{textAlign: \"center\"}}>\r\n          <Button onClick={() => redirect(\"frontend.admin.nurseAssignments.index\")} style={{ marginRight: 8}}>\r\n            <LeftCircleFilled /> {t('cancel')}\r\n          </Button>\r\n          <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\r\n            <DeleteFilled /> {t('submit')}\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  </Layout>\r\n}\r\n\r\nCreate.getInitialProps = async (ctx: any) => {\r\n  const patientService = new PatientService(ctx)\r\n  const userService = new UserService(ctx)\r\n  const [errorPatients, patients] = await to(patientService.index({ pageSize: -1 }));\r\n  const filters = JSON.stringify({field:\"position\",operator:\"contains\",value:\"Hộ lý\"})\r\n  const [errorUsers, users] = await to(userService.index({ pageSize: -1, filters: [filters] }));\r\n  return {\r\n    namespacesRequired: ['common', 'pages','menu','errors'],\r\n    errorPatients: errorPatients,\r\n    errorUsers: errorUsers,\r\n    patients: _.get(patients, \"data\", []),\r\n    users: _.get(users, \"data\", []),\r\n  }\r\n}\r\nCreate.permissions = {\r\n  \"admin.nurseAssignments\": \"C\"\r\n};\r\nexport default Create","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/admin/nurseAssignments/create\",\n      function () {\n        return require(\"private-next-pages/admin/nurseAssignments/create.tsx\");\n      }\n    ]);\n  ","// This icon file is generated automatically.\nvar LeftCircleFilled = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm104 316.9c0 10.2-4.9 19.9-13.2 25.9L457.4 512l145.4 105.2c8.3 6 13.2 15.6 13.2 25.9V690c0 6.5-7.4 10.3-12.7 6.5l-246-178a7.95 7.95 0 010-12.9l246-178a8 8 0 0112.7 6.5v46.8z\" } }] }, \"name\": \"left-circle\", \"theme\": \"filled\" };\nexport default LeftCircleFilled;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport LeftCircleFilledSvg from \"@ant-design/icons-svg/es/asn/LeftCircleFilled\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar LeftCircleFilled = function LeftCircleFilled(props, ref) {\n  return React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: LeftCircleFilledSvg\n  }));\n};\n\nLeftCircleFilled.displayName = 'LeftCircleFilled';\nexport default React.forwardRef(LeftCircleFilled);","// This icon file is generated automatically.\nvar DeleteFilled = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M864 256H736v-80c0-35.3-28.7-64-64-64H352c-35.3 0-64 28.7-64 64v80H160c-17.7 0-32 14.3-32 32v32c0 4.4 3.6 8 8 8h60.4l24.7 523c1.6 34.1 29.8 61 63.9 61h454c34.2 0 62.3-26.8 63.9-61l24.7-523H888c4.4 0 8-3.6 8-8v-32c0-17.7-14.3-32-32-32zm-200 0H360v-72h304v72z\" } }] }, \"name\": \"delete\", \"theme\": \"filled\" };\nexport default DeleteFilled;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport DeleteFilledSvg from \"@ant-design/icons-svg/es/asn/DeleteFilled\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar DeleteFilled = function DeleteFilled(props, ref) {\n  return React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: DeleteFilledSvg\n  }));\n};\n\nDeleteFilled.displayName = 'DeleteFilled';\nexport default React.forwardRef(DeleteFilled);","import BaseApi from './BaseService'\r\n\r\nclass NurseAssignment extends BaseApi {\r\n  constructor(context?: Context){\r\n    super(context)\r\n    this.name = 'nurseAssignments';\r\n  }\r\n}\r\n\r\nexport default NurseAssignment"],"sourceRoot":""}