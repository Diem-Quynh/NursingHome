{"version":3,"sources":["webpack:///./node_modules/@ant-design/icons-svg/es/asn/LeftCircleFilled.js","webpack:///./node_modules/@ant-design/icons/es/icons/LeftCircleFilled.js","webpack:///./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?df17","webpack:///./node_modules/@ant-design/icons-svg/es/asn/SaveFilled.js","webpack:///./node_modules/@ant-design/icons/es/icons/SaveFilled.js","webpack:///./node_modules/@ant-design/icons-svg/es/asn/DeleteFilled.js","webpack:///./node_modules/@ant-design/icons/es/icons/DeleteFilled.js","webpack:///./pages/admin/nurseAssignments/edit.tsx","webpack:///./themes/services/api/NurseAssignmentService.ts"],"names":["props","ref","AntdIcon","Object","assign","icon","displayName","window","__NEXT_P","push","Option","Select","formItemLayout","labelCol","xs","span","sm","wrapperCol","Edit","patients","users","nurseAssign","nurseAssignError","useBaseHook","t","notify","redirect","setStore","getAuth","getStore","useState","loading","setLoading","Form","useForm","form","nurseAssignService","NurseAssignService","confirmRef","React","createRef","deletePer","checkPermission","usePermissionHook","DisplayError","err","code","message","onFinish","values","a","to","edit","id","error","onDelete","ids","className","name","initialValues","nurseId","patientId","dateBegin","moment","subtract","dateEnd","note","scrollToFirstError","Item","label","rules","required","showSearch","placeholder","filterOption","input","option","children","toLowerCase","indexOf","result","map","item","value","key","fullname","renderOptionUser","roomCode","bedCode","renderOptionPatient","format","showTime","style","textAlign","onClick","marginRight","type","htmlType","hidden","danger","current","show","onSubmit","title","content","getInitialProps","ctx","patientService","PatientService","userService","UserService","query","detail","index","pageSize","filters","JSON","stringify","field","operator","namespacesRequired","_","get","permissions","NurseAssignment","context","BaseApi"],"mappings":"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","file":"static\\3bqcv_cRHHIBfHp_4lMA9\\pages\\admin\\nurseAssignments\\edit.js","sourcesContent":["// This icon file is generated automatically.\nvar LeftCircleFilled = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm104 316.9c0 10.2-4.9 19.9-13.2 25.9L457.4 512l145.4 105.2c8.3 6 13.2 15.6 13.2 25.9V690c0 6.5-7.4 10.3-12.7 6.5l-246-178a7.95 7.95 0 010-12.9l246-178a8 8 0 0112.7 6.5v46.8z\" } }] }, \"name\": \"left-circle\", \"theme\": \"filled\" };\nexport default LeftCircleFilled;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport LeftCircleFilledSvg from \"@ant-design/icons-svg/es/asn/LeftCircleFilled\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar LeftCircleFilled = function LeftCircleFilled(props, ref) {\n  return React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: LeftCircleFilledSvg\n  }));\n};\n\nLeftCircleFilled.displayName = 'LeftCircleFilled';\nexport default React.forwardRef(LeftCircleFilled);","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/admin/nurseAssignments/edit\",\n      function () {\n        return require(\"private-next-pages/admin/nurseAssignments/edit.tsx\");\n      }\n    ]);\n  ","// This icon file is generated automatically.\nvar SaveFilled = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M893.3 293.3L730.7 130.7c-12-12-28.3-18.7-45.3-18.7H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V338.5c0-17-6.7-33.2-18.7-45.2zM384 176h256v112H384V176zm128 554c-79.5 0-144-64.5-144-144s64.5-144 144-144 144 64.5 144 144-64.5 144-144 144zm0-224c-44.2 0-80 35.8-80 80s35.8 80 80 80 80-35.8 80-80-35.8-80-80-80z\" } }] }, \"name\": \"save\", \"theme\": \"filled\" };\nexport default SaveFilled;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport SaveFilledSvg from \"@ant-design/icons-svg/es/asn/SaveFilled\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar SaveFilled = function SaveFilled(props, ref) {\n  return React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: SaveFilledSvg\n  }));\n};\n\nSaveFilled.displayName = 'SaveFilled';\nexport default React.forwardRef(SaveFilled);","// This icon file is generated automatically.\nvar DeleteFilled = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M864 256H736v-80c0-35.3-28.7-64-64-64H352c-35.3 0-64 28.7-64 64v80H160c-17.7 0-32 14.3-32 32v32c0 4.4 3.6 8 8 8h60.4l24.7 523c1.6 34.1 29.8 61 63.9 61h454c34.2 0 62.3-26.8 63.9-61l24.7-523H888c4.4 0 8-3.6 8-8v-32c0-17.7-14.3-32-32-32zm-200 0H360v-72h304v72z\" } }] }, \"name\": \"delete\", \"theme\": \"filled\" };\nexport default DeleteFilled;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport DeleteFilledSvg from \"@ant-design/icons-svg/es/asn/DeleteFilled\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar DeleteFilled = function DeleteFilled(props, ref) {\n  return React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: DeleteFilledSvg\n  }));\n};\n\nDeleteFilled.displayName = 'DeleteFilled';\nexport default React.forwardRef(DeleteFilled);","import ConfirmDialog from 'themes/components/Dialogs/ConfirmDialog';\r\n\r\nimport React, { useState } from 'react'\r\nimport Layout from 'themes/layouts/Admin'\r\nimport { Button, Form, Input, Select, DatePicker } from 'antd';\r\nimport NurseAssignService from 'themes/services/api/NurseAssignmentService';\r\nimport PatientService from 'themes/services/api/PatientService';\r\nimport UserService from 'themes/services/api/UserService';\r\nimport _ from 'lodash';\r\nimport to from 'await-to-js'\r\nimport useBaseHook from 'themes/hooks/BaseHooks'\r\nimport { DeleteFilled, SaveFilled, LeftCircleFilled, CopyFilled } from '@ant-design/icons';\r\nimport usePermissionHook from \"themes/hooks/PermissionHook\";\r\nimport moment from 'moment'\r\n\r\nconst { Option } = Select\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 4 },\r\n  },\r\n  wrapperCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 18 },\r\n  },\r\n};\r\n\r\nconst Edit = ({ patients, users, nurseAssign, nurseAssignError }: \r\n  { patients: Patient[], users : User[], nurseAssign: NurseAssignment, nurseAssignError: any }) => {\r\n  const { t, notify, redirect, setStore, getAuth, getStore } = useBaseHook();\r\n  const [loading, setLoading] = useState(false);\r\n  const [form] = Form.useForm();\r\n  const nurseAssignService = new NurseAssignService()\r\n  const confirmRef = React.createRef<ConfirmDialog>()\r\n\r\n  const { checkPermission } = usePermissionHook();\r\n  const deletePer = checkPermission({\r\n    \"admin.nurseAssignments\": \"D\"\r\n  })\r\n  const DisplayError = (err: any) => {\r\n    return notify(t(`errors:${err.code}`), t(err.message), 'error')\r\n  }\r\n  //submit form\r\n  const onFinish = async (values: any): Promise<void> => {\r\n    if(nurseAssignError) return DisplayError(nurseAssignError)\r\n    setLoading(true)\r\n    let [error, result]: any[] = await to(nurseAssignService.edit({\r\n      id: nurseAssign.id,\r\n      values\r\n    }));\r\n    setLoading(false)\r\n    if(error) return DisplayError(error)\r\n    notify(t(\"message.recordUpdated\"))\r\n    redirect(\"frontend.admin.nurseAssignments.index\")\r\n  }\r\n\r\n  const onDelete = async (): Promise<void> => {\r\n    if(nurseAssignError) return DisplayError(nurseAssignError)\r\n    let [error, result]: any[] = await to(nurseAssignService.delete({ ids: [nurseAssign.id] }));\r\n    if(error) return DisplayError(error)\r\n    notify(t('message.recordDeleted'))\r\n    redirect(\"frontend.admin.nurseAssignments.index\")\r\n  }\r\n\r\n  //render option\r\n  const renderOptionPatient = (): JSX.Element[] => {\r\n    let result: JSX.Element[] = [];\r\n    patients.map(item => {\r\n      result.push(\r\n      <Option value={item.id} key={item.id}>{item.code} - {item.fullname} - {item.roomCode} - {item.bedCode}</Option>\r\n      )\r\n    })\r\n    return result;\r\n  }\r\n\r\n  const renderOptionUser = (): JSX.Element[] => {\r\n    let result: JSX.Element[] = [];\r\n    users.map(item => {\r\n      result.push(\r\n      <Option value={item.id} key={item.id}>{item.code} - {item.fullname}</Option>\r\n      )\r\n    })\r\n    return result;\r\n  }\r\n\r\n  const renderDeleteDialog = () => {\r\n    return (\r\n      <ConfirmDialog\r\n        ref={confirmRef}\r\n        onSubmit={onDelete}\r\n        title={t('deleteItem')}\r\n        content={t('message.deleteConfirm')}\r\n      />\r\n    )\r\n  }\r\n\r\n  return <Layout>\r\n    <div className=\"content\">\r\n      <Form\r\n        {...formItemLayout}\r\n        form={form}\r\n        name=\"createPatient\"\r\n        initialValues={{\r\n          nurseId: nurseAssign.nurseId,\r\n          patientId: nurseAssign.patientId,\r\n          dateBegin: nurseAssign.dateBegin ? moment(nurseAssign.dateBegin).subtract(7,'h') : \"\",\r\n          dateEnd: nurseAssign.dateEnd ? moment(nurseAssign.dateEnd).subtract(7,'h') : \"\",\r\n          note: nurseAssign.note\r\n        }}\r\n        onFinish={onFinish}\r\n        scrollToFirstError\r\n      >\r\n        <Form.Item\r\n          label={t(\"nurse\")}\r\n          name=\"nurseId\"\r\n          rules={[\r\n            { required: true, message: t('form.required') },\r\n          ]}\r\n        >\r\n          <Select \r\n            showSearch\r\n            placeholder = {t('placeholder.user')}\r\n            filterOption={ (input: any, option: any) => {\r\n              return option.children[2].toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n            } }\r\n          >\r\n            {renderOptionUser()}\r\n          </Select>\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={t(\"patient\")}\r\n          name=\"patientId\"\r\n          rules={[\r\n            { required: true, message: t('form.required') },\r\n          ]}\r\n        >\r\n          <Select\r\n            showSearch\r\n            placeholder = {t('placeholder.patient')}\r\n            filterOption={ (input: any, option: any) => {\r\n              return option.children[0].toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n            } }\r\n          >\r\n            {renderOptionPatient()}\r\n          </Select>\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={t(\"nurseAssignments.dateBegin\")}\r\n          name=\"dateBegin\"\r\n          rules={[\r\n            { required: true, message: t('form.required') },\r\n          ]}\r\n        >\r\n          <DatePicker format={'YYYY-MM-DD'} showTime={false} placeholder={t('placeholder.date')} />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={t(\"nurseAssignments.dateEnd\")}\r\n          name=\"dateEnd\"\r\n        >\r\n          <DatePicker format={'YYYY-MM-DD'} showTime={false} placeholder={t('placeholder.date')} />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={t(\"note\")}\r\n          name=\"note\"\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item wrapperCol={{ span: 24 }} style={{ textAlign: \"center\" }}>\r\n          <Button onClick={() => redirect(\"frontend.admin.nurseAssignments.index\")} style={{ marginRight: 8 }}>\r\n            <LeftCircleFilled /> {t('cancel')}\r\n          </Button>\r\n\r\n          <Button type=\"primary\" htmlType=\"submit\" loading={loading} style={{ marginRight: 8 }}>\r\n            <SaveFilled /> {t('submit')}\r\n          </Button>\r\n          \r\n          <Button hidden={!deletePer} danger onClick={() => { \r\n              if (confirmRef.current) confirmRef.current.show(nurseAssign.id) \r\n            }}>\r\n            <DeleteFilled /> {t('deleteItem')}\r\n          </Button>\r\n         \r\n        </Form.Item>\r\n      </Form>\r\n      {renderDeleteDialog()}\r\n    </div>\r\n  </Layout>\r\n}\r\n\r\nEdit.getInitialProps = async (ctx: any) => {\r\n  const nurseAssignService = new NurseAssignService(ctx)\r\n  const patientService = new PatientService(ctx)\r\n  const userService = new UserService(ctx)\r\n  const query = ctx.query;\r\n  let error: any;\r\n\r\n  if (!query.id) {\r\n    //error missing id\r\n    error = {\r\n      code: 9996,\r\n      message: 'missing ID'\r\n    }\r\n  }\r\n\r\n  let [nurseAssignError, nurseAssign] = await to(nurseAssignService.detail({ id: query.id }));\r\n  if(nurseAssignError) nurseAssign = {}\r\n  const [errorPatient, patients] = await to(patientService.index({ pageSize: -1 }));\r\n  const filters = JSON.stringify({field:\"position\",operator:\"contains\",value:\"Hộ lý\"})\r\n  const [errorUsers, users] = await to(userService.index({ pageSize: -1, filters: [filters] }));\r\n  return {\r\n    namespacesRequired: ['common', 'pages', 'menu','errors'],\r\n    error: error,\r\n    nurseAssign: nurseAssign,\r\n    nurseAssignError: nurseAssignError,\r\n    patients: _.get(patients, \"data\", []),\r\n    users: _.get(users, \"data\", [])\r\n  }\r\n}\r\nEdit.permissions = {\r\n  \"admin.nurseAssignments\": \"U\"\r\n};\r\nexport default Edit","import BaseApi from './BaseService'\r\n\r\nclass NurseAssignment extends BaseApi {\r\n  constructor(context?: Context){\r\n    super(context)\r\n    this.name = 'nurseAssignments';\r\n  }\r\n}\r\n\r\nexport default NurseAssignment"],"sourceRoot":""}