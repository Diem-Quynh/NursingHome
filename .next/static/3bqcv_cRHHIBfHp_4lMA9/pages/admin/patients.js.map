{"version":3,"sources":["webpack:///./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?89ea","webpack:///./pages/admin/patients/index.tsx"],"names":["window","__NEXT_P","push","formaterDate","value","String","substr","Index","patients","total","useBaseHook","t","notify","redirect","setStore","getAuth","getStore","useState","hiddenDeleteBtn","setHiddenDeleteBtn","selectedIds","setSelectedIds","patientService","PatientService","confirmRef","React","createRef","tableRef","checkPermission","usePermissionHook","createPer","deletePer","columns","title","dataIndex","key","filterable","fixed","sorter","render","text","record","onClick","id","fullname","roomCode","bedCode","filterDate","filterCheck","options","label","width","Math","round","Number","formaterGender","fetchData","values","a","to","index","error","code","message","onDelete","ids","current","reload","className","hidden","type","danger","show","ref","data","rowSelection","selectedRowKeys","onChange","length","onChangeSelection","scroll","x","onSubmit","content","getInitialProps","ctx","defaultOptions","filters","sorting","query","GridTableHelper","getOptions","namespacesRequired","getData","defaultQuery","makeQuery","permissions"],"mappings":"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","file":"static\\3bqcv_cRHHIBfHp_4lMA9\\pages\\admin\\patients.js","sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/admin/patients\",\n      function () {\n        return require(\"private-next-pages/admin/patients/index.tsx\");\n      }\n    ]);\n  ","import Layout from 'themes/layouts/Admin'\r\nimport { GridTable, GridTableHelper, FilterInput } from 'themes/components/Table';\r\nimport ConfirmDialog from 'themes/components/Dialogs/ConfirmDialog';\r\nimport { Button } from 'antd';\r\nimport PatientService from 'themes/services/api/PatientService';\r\nimport _ from 'lodash'\r\nimport to from 'await-to-js'\r\nimport React, { useState } from 'react';\r\nimport useBaseHook from 'themes/hooks/BaseHooks'\r\nimport usePermissionHook from \"themes/hooks/PermissionHook\";\r\nimport {PlusCircleOutlined, DeleteOutlined} from '@ant-design/icons';\r\n\r\nconst formaterGender = (value: any) => {\r\n  const { t } = useBaseHook();\r\n  value = Math.round(Number(value))\r\n  value = (value == 0 ? t('male') : t('female'))\r\n  return `${value}`\r\n}\r\n\r\nconst formaterDate = (value: any) => {\r\n  value = value? String(value) : \"\"\r\n  value = value.substr(0,10)\r\n  return `${value}`\r\n}\r\n\r\nconst Index = ({ patients, total }: { patients: Patient[], total: number }) => {\r\n  const { t, notify, redirect, setStore, getAuth, getStore } = useBaseHook();\r\n  const [hiddenDeleteBtn, setHiddenDeleteBtn] = useState(true)\r\n  const [selectedIds, setSelectedIds] = useState([])\r\n  const patientService = new PatientService()\r\n  const confirmRef = React.createRef<ConfirmDialog>()\r\n  const tableRef = React.createRef<GridTable>()\r\n  const { checkPermission } = usePermissionHook();\r\n  const createPer = checkPermission({\r\n    \"admin.patients\": \"C\",\r\n    \"receptionist.patients\": \"C\"\r\n  })\r\n  const deletePer = checkPermission({\r\n    \"admin.patients\": \"D\"\r\n  })\r\n  const columns = [\r\n    {\r\n      title: t(\"patient\"),\r\n      dataIndex: 'code',\r\n      key: 'code',\r\n      filterable: true,\r\n      fixed: 'left',\r\n    },\r\n    {\r\n      title: t(\"fullname\"),\r\n      dataIndex: 'fullname',\r\n      key: 'fullname',\r\n      sorter:true,\r\n      filterable: true,\r\n      fixed: 'left',\r\n      render: (text: string, record: any) =>\r\n        <a onClick={() => redirect('frontend.admin.patients.edit', { id: record.id })}>{record.fullname}</a>\r\n    },\r\n    {\r\n      title: t('room'),\r\n      dataIndex: 'roomCode',\r\n      sorter:true,\r\n      filterable: true,\r\n      key: 'beds.roomCode',\r\n      fixed:'left',\r\n      render: (text: string, record: any) => <div>{record.roomCode} - {record.bedCode}</div>\r\n    },\r\n    {\r\n      title: t('birthday'),\r\n      dataIndex: 'birthday',\r\n      key: 'birthday',\r\n      filterDate: true,\r\n      render: (text: string, record: any) => <div>{formaterDate(text)}</div>\r\n    },\r\n    {\r\n      title: t(\"gender\"),\r\n      dataIndex: 'gender',\r\n      key: 'gender',\r\n      filterCheck: true,\r\n      options: [{ label:t('male'), value:0 }, { label:t('female'), value:1 }],\r\n      width: '7%',\r\n      render: (text: string, record: any) => <div>{formaterGender(text)}</div>\r\n    },\r\n    {\r\n      title: t(\"address\"),\r\n      dataIndex: 'address',\r\n      key: 'address',\r\n      filterable: true,\r\n    },\r\n    {\r\n      title: t(\"cardId\"),\r\n      dataIndex: 'cardId',\r\n      key: 'cardId',\r\n      filterable: true,\r\n    },\r\n    {\r\n      title: t(\"phone\"),\r\n      dataIndex: 'phone',\r\n      key: 'phone',\r\n      filterable: true,\r\n    },\r\n    {\r\n      title: t(\"patients.medicalHistory\"),\r\n      dataIndex: 'medicalHistory',\r\n      key: 'medicalHistory',\r\n      filterable: true,\r\n    },\r\n    {\r\n      title: t(\"patients.dateIn\"),\r\n      dataIndex: 'dateIn',\r\n      sorter:true,\r\n      filterDate: true,\r\n      key: 'dateIn',\r\n      render: (text: string, record: any) => <div>{formaterDate(text)}</div>\r\n    },\r\n    {\r\n      title: t(\"patients.dateOut\"),\r\n      dataIndex: 'dateOut',\r\n      sorter:true,\r\n      filterDate: true,\r\n      key: 'dateOut',\r\n      render: (text: string, record: any) => <div>{formaterDate(text)}</div>\r\n    },\r\n  ]\r\n\r\n  const onChangeSelection = (data: any) => {\r\n    if (data.length > 0) {\r\n      setHiddenDeleteBtn(false)\r\n    }\r\n    else {\r\n      setHiddenDeleteBtn(true)\r\n    }\r\n    setSelectedIds(data)\r\n  }\r\n\r\n  const fetchData = async (values: any) => {\r\n    let [error, patients]: any[] = await to(patientService.index(values))\r\n    if (error) {\r\n      const { code, message } = error\r\n      notify(t(`errors:${code}`), t(message), 'error')\r\n      return {}\r\n    }\r\n    return patients\r\n  }\r\n\r\n  const onDelete = async () => {\r\n    let [error, result]: any[] = await to(patientService.delete({ ids: selectedIds }));\r\n    if (error) {\r\n      return notify(t(`errors:${error.code}`), t(`${error.message}`), 'error')\r\n    }\r\n    notify(t(\"message.recordDeleted\"));\r\n    if (tableRef.current !== null) {\r\n      tableRef.current.reload()\r\n    }\r\n    setSelectedIds([])\r\n    setHiddenDeleteBtn(true)\r\n  }\r\n\r\n  const renderDeleteDialog = () => {\r\n    return (\r\n      <ConfirmDialog\r\n        ref={confirmRef}\r\n        onSubmit={onDelete}\r\n        title={t('deleteItem')}\r\n        content={t('message.deleteConfirm')}\r\n      />\r\n    )\r\n  }\r\n\r\n  return <Layout>\r\n    <div className=\"content\">\r\n      <Button hidden={!createPer} onClick={() => redirect(\"frontend.admin.patients.create\")} type=\"primary\" className='btn-top'>\r\n        <PlusCircleOutlined />\r\n        {t('create')}\r\n      </Button>\r\n\r\n      <Button danger onClick={() => { if (confirmRef.current) confirmRef.current.show() }} className='btn-top' hidden={hiddenDeleteBtn || !deletePer}>\r\n        <DeleteOutlined />\r\n        {t('delete')}\r\n      </Button>\r\n      \r\n      <GridTable\r\n        ref={tableRef}\r\n        columns={columns}\r\n        data={patients}\r\n        rowSelection={{selectedRowKeys: selectedIds, onChange: (data: any[]) => onChangeSelection(data) }}\r\n        fetchData={fetchData}\r\n        total={total}\r\n        scroll={{ x:1400 }}\r\n      />\r\n      {renderDeleteDialog()}\r\n    </div>\r\n  </Layout>\r\n}\r\n\r\nIndex.getInitialProps = async (ctx: any) => {\r\n  let patientService = new PatientService(ctx)\r\n  let defaultOptions = {\r\n    filters: [],\r\n    sorting: []\r\n  }\r\n  let query = ctx.query\r\n  let filters = GridTableHelper.getOptions(query, defaultOptions);\r\n  let [error, patients]: any[] = await to(patientService.index(filters))\r\n  return {\r\n    namespacesRequired: ['common', 'pages', 'menu', 'errors'],\r\n    error: error,\r\n    patients: useBaseHook.getData(patients, \"data\", []),\r\n    total: useBaseHook.getData(patients, \"total\", 0),\r\n    defaultQuery: {\r\n      filters: GridTableHelper.makeQuery(filters)\r\n    }\r\n  }\r\n}\r\nIndex.permissions = {\r\n  \"admin.patients\": \"R\",\r\n  \"doctor.patients\": \"R\",\r\n  \"nurse.patients\": \"R\",\r\n  \"receptionist.patients\": \"R\",\r\n};\r\nexport default Index"],"sourceRoot":""}