{"version":3,"sources":["webpack:///./node_modules/@ant-design/icons-svg/es/asn/LeftCircleFilled.js","webpack:///./node_modules/@ant-design/icons/es/icons/LeftCircleFilled.js","webpack:///./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?adde","webpack:///./themes/services/api/HealthStatusService.ts","webpack:///./node_modules/@ant-design/icons-svg/es/asn/SaveFilled.js","webpack:///./node_modules/@ant-design/icons/es/icons/SaveFilled.js","webpack:///./node_modules/@ant-design/icons-svg/es/asn/DeleteFilled.js","webpack:///./node_modules/@ant-design/icons/es/icons/DeleteFilled.js","webpack:///./pages/admin/healthStatuses/edit.tsx"],"names":["props","ref","AntdIcon","Object","assign","icon","displayName","window","__NEXT_P","push","HealthStatus","context","name","BaseApi","Option","Select","formItemLayout","labelCol","xs","span","sm","wrapperCol","Edit","patients","users","health","healthError","useBaseHook","t","notify","redirect","setStore","getAuth","getStore","useState","loading","setLoading","Form","useForm","form","healthService","HealthService","confirmRef","React","createRef","deletePer","checkPermission","usePermissionHook","DisplayError","err","code","message","blood","param","bloodPressureUpper","bloodPressureLower","index","bloodPressure","indexOf","slice","onFinish","values","a","otherValues","toString","params","to","edit","id","error","onDelete","ids","className","initialValues","patientId","date","moment","subtract","weight","bloodSugar","heartRate","doctorId","note","scrollToFirstError","Item","label","rules","required","showSearch","placeholder","filterOption","input","option","children","toLowerCase","result","map","item","value","key","fullname","roomCode","bedCode","renderOptionPatient","format","showTime","min","max","step","style","width","display","padding","fontSize","renderOptionUser","textAlign","onClick","marginRight","type","htmlType","hidden","danger","current","show","onSubmit","title","content","getInitialProps","ctx","patientService","PatientService","userService","UserService","query","detail","pageSize","filters","JSON","stringify","field","operator","namespacesRequired","_","get","permissions"],"mappings":"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","file":"static\\3bqcv_cRHHIBfHp_4lMA9\\pages\\admin\\healthStatuses\\edit.js","sourcesContent":["// This icon file is generated automatically.\nvar LeftCircleFilled = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm104 316.9c0 10.2-4.9 19.9-13.2 25.9L457.4 512l145.4 105.2c8.3 6 13.2 15.6 13.2 25.9V690c0 6.5-7.4 10.3-12.7 6.5l-246-178a7.95 7.95 0 010-12.9l246-178a8 8 0 0112.7 6.5v46.8z\" } }] }, \"name\": \"left-circle\", \"theme\": \"filled\" };\nexport default LeftCircleFilled;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport LeftCircleFilledSvg from \"@ant-design/icons-svg/es/asn/LeftCircleFilled\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar LeftCircleFilled = function LeftCircleFilled(props, ref) {\n  return React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: LeftCircleFilledSvg\n  }));\n};\n\nLeftCircleFilled.displayName = 'LeftCircleFilled';\nexport default React.forwardRef(LeftCircleFilled);","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/admin/healthStatuses/edit\",\n      function () {\n        return require(\"private-next-pages/admin/healthStatuses/edit.tsx\");\n      }\n    ]);\n  ","import BaseApi from './BaseService'\r\n\r\nclass HealthStatus extends BaseApi {\r\n  constructor(context?: Context){\r\n    super(context)\r\n    this.name = 'healthStatuses';\r\n  }\r\n}\r\n\r\nexport default HealthStatus","// This icon file is generated automatically.\nvar SaveFilled = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M893.3 293.3L730.7 130.7c-12-12-28.3-18.7-45.3-18.7H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V338.5c0-17-6.7-33.2-18.7-45.2zM384 176h256v112H384V176zm128 554c-79.5 0-144-64.5-144-144s64.5-144 144-144 144 64.5 144 144-64.5 144-144 144zm0-224c-44.2 0-80 35.8-80 80s35.8 80 80 80 80-35.8 80-80-35.8-80-80-80z\" } }] }, \"name\": \"save\", \"theme\": \"filled\" };\nexport default SaveFilled;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport SaveFilledSvg from \"@ant-design/icons-svg/es/asn/SaveFilled\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar SaveFilled = function SaveFilled(props, ref) {\n  return React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: SaveFilledSvg\n  }));\n};\n\nSaveFilled.displayName = 'SaveFilled';\nexport default React.forwardRef(SaveFilled);","// This icon file is generated automatically.\nvar DeleteFilled = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M864 256H736v-80c0-35.3-28.7-64-64-64H352c-35.3 0-64 28.7-64 64v80H160c-17.7 0-32 14.3-32 32v32c0 4.4 3.6 8 8 8h60.4l24.7 523c1.6 34.1 29.8 61 63.9 61h454c34.2 0 62.3-26.8 63.9-61l24.7-523H888c4.4 0 8-3.6 8-8v-32c0-17.7-14.3-32-32-32zm-200 0H360v-72h304v72z\" } }] }, \"name\": \"delete\", \"theme\": \"filled\" };\nexport default DeleteFilled;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport DeleteFilledSvg from \"@ant-design/icons-svg/es/asn/DeleteFilled\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar DeleteFilled = function DeleteFilled(props, ref) {\n  return React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: DeleteFilledSvg\n  }));\n};\n\nDeleteFilled.displayName = 'DeleteFilled';\nexport default React.forwardRef(DeleteFilled);","import ConfirmDialog from 'themes/components/Dialogs/ConfirmDialog';\r\n\r\nimport React, { useState } from 'react'\r\nimport Layout from 'themes/layouts/Admin'\r\nimport { Button, Form, Input, Select, DatePicker, InputNumber } from 'antd';\r\nimport HealthService from 'themes/services/api/HealthStatusService';\r\nimport PatientService from 'themes/services/api/PatientService';\r\nimport UserService from 'themes/services/api/UserService';\r\nimport _ from 'lodash';\r\nimport to from 'await-to-js'\r\nimport useBaseHook from 'themes/hooks/BaseHooks'\r\nimport { DeleteFilled, SaveFilled, LeftCircleFilled, CopyFilled } from '@ant-design/icons';\r\nimport usePermissionHook from \"themes/hooks/PermissionHook\";\r\nimport moment from 'moment'\r\n\r\nconst { Option } = Select\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 4 },\r\n  },\r\n  wrapperCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 18 },\r\n  },\r\n};\r\n\r\nconst Edit = ({ patients, users, health, healthError }: { patients: Patient[], users : User[], health: HealthStatus, healthError: any }) => {\r\n  const { t, notify, redirect, setStore, getAuth, getStore } = useBaseHook();\r\n  const [loading, setLoading] = useState(false);\r\n  const [form] = Form.useForm();\r\n  const healthService = new HealthService()\r\n  const confirmRef = React.createRef<ConfirmDialog>()\r\n\r\n  const { checkPermission } = usePermissionHook();\r\n  const deletePer = checkPermission({\r\n    \"admin.healthStatuses\": \"D\"\r\n  })\r\n  const DisplayError = (err: any) => {\r\n    return notify(t(`errors:${err.code}`), t(err.message), 'error')\r\n  }\r\n\r\n  const bloodPressure = (param: string) => {\r\n    let blood = {bloodPressureUpper: '', bloodPressureLower: ''}\r\n    if(param) {\r\n      const index = health.bloodPressure.indexOf('/')\r\n      const bloodPressureUpper = health.bloodPressure.slice(0,index)\r\n      const bloodPressureLower = health.bloodPressure.slice(index + 1)\r\n      blood = {bloodPressureUpper: bloodPressureUpper, bloodPressureLower: bloodPressureLower}\r\n    }\r\n    return blood\r\n  }\r\n  const blood = bloodPressure(health.bloodPressure)\r\n\r\n  //submit form\r\n  const onFinish = async (values: any): Promise<void> => {\r\n    if(healthError) return DisplayError(healthError)\r\n    setLoading(true)\r\n    let { bloodPressureUpper, bloodPressureLower, ...otherValues } = values;\r\n    let bloodPressure = bloodPressureUpper.toString() + \"/\" + bloodPressureLower.toString()\r\n    const params = Object.assign(otherValues,{bloodPressure: bloodPressure})\r\n    let [error, result]: any[] = await to(healthService.edit({\r\n      id: health.id,\r\n      params\r\n    }));\r\n    setLoading(false)\r\n    if(error) return DisplayError(error)\r\n    notify(t(\"message.recordUpdated\"))\r\n    redirect(\"frontend.admin.healthStatuses.index\")\r\n  }\r\n\r\n  const onDelete = async (): Promise<void> => {\r\n    if(healthError) return DisplayError(healthError)\r\n    let [error, result]: any[] = await to(healthService.delete({ ids: [health.id] }));\r\n    if(error) return DisplayError(error)\r\n    notify(t('message.recordDeleted'))\r\n    redirect(\"frontend.admin.healthStatuses.index\")\r\n  }\r\n\r\n  //render option\r\n  const renderOptionPatient = (): JSX.Element[] => {\r\n    let result: JSX.Element[] = [];\r\n    patients.map(item => {\r\n      result.push(\r\n      <Option value={item.id} key={item.id}>{item.code} - {item.fullname} - {item.roomCode} - {item.bedCode}</Option>\r\n      )\r\n    })\r\n    return result;\r\n  }\r\n\r\n  const renderOptionUser = (): JSX.Element[] => {\r\n    let result: JSX.Element[] = [];\r\n    users.map(item => {\r\n      result.push(\r\n      <Option value={item.id} key={item.id}>{item.code} - {item.fullname}</Option>\r\n      )\r\n    })\r\n    return result;\r\n  }\r\n\r\n  const renderDeleteDialog = () => {\r\n    return (\r\n      <ConfirmDialog\r\n        ref={confirmRef}\r\n        onSubmit={onDelete}\r\n        title={t('deleteItem')}\r\n        content={t('message.deleteConfirm')}\r\n      />\r\n    )\r\n  }\r\n\r\n  return <Layout>\r\n    <div className=\"content\">\r\n      <Form\r\n        {...formItemLayout}\r\n        form={form}\r\n        name=\"createPatient\"\r\n        initialValues={{\r\n          patientId: health.patientId,\r\n          date: health.date ? moment(health.date).subtract(7,'h') : \"\",\r\n          weight: health.weight,\r\n          bloodPressureUpper: blood.bloodPressureUpper,\r\n          bloodPressureLower: blood.bloodPressureLower,\r\n          bloodSugar: health.bloodSugar,\r\n          heartRate: health.heartRate,\r\n          doctorId: health.doctorId,\r\n          note: health.note\r\n        }}\r\n        onFinish={onFinish}\r\n        scrollToFirstError\r\n      >\r\n        <Form.Item\r\n          label={t(\"patient\")}\r\n          name=\"patientId\"\r\n          rules={[\r\n            { required: true, message: t('form.required') },\r\n          ]}\r\n        >\r\n          <Select \r\n            showSearch\r\n            placeholder = {t('placeholder.patient')}\r\n            filterOption={ (input: any, option: any) => {\r\n              return option.children[0].toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n            } }\r\n          >\r\n            {renderOptionPatient()}\r\n          </Select>\r\n        </Form.Item>\r\n        \r\n        <Form.Item\r\n          label={t(\"healthStatuses.date\")}\r\n          name=\"date\"\r\n          rules={[\r\n            { required: true, message: t('form.required') },\r\n          ]}\r\n        >\r\n          <DatePicker format={'YYYY-MM-DD'} showTime={false} placeholder={t('placeholder.date')} />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={t(\"healthStatuses.weight\") + ' (Kg)'}\r\n          name=\"weight\"\r\n        >\r\n          <InputNumber min={0} max={300} step={0.1}  style={{ width:'100%' }} />\r\n        </Form.Item>\r\n\r\n        {/* <Form.Item\r\n          label={t(\"healthStatuses.bloodPressure\") + \" (mmHg)\"}\r\n          name=\"bloodPressure\"\r\n        >\r\n          <Input />\r\n        </Form.Item> */}\r\n\r\n        <Form.Item label={t(\"healthStatuses.bloodPressure\") + \" (mmHg)\"}>\r\n          <Form.Item\r\n            name=\"bloodPressureUpper\"\r\n            style={{ display: 'inline-block', width: 'calc(20% - 8px)' }}\r\n          >\r\n            <InputNumber />\r\n          </Form.Item>\r\n\r\n          <span style={{ padding:\"0 50px\", fontSize:\"25px\"  }}>/</span>\r\n\r\n          <Form.Item\r\n            name=\"bloodPressureLower\"\r\n            style={{ display: 'inline-block', width: 'calc(20% - 8px)' }}\r\n          >\r\n            <InputNumber />\r\n          </Form.Item>\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={t(\"healthStatuses.bloodSugar\") + \" (mg/dL)\"}\r\n          name=\"bloodSugar\"\r\n        >\r\n          <InputNumber />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={t(\"healthStatuses.heartRate\") + \" (BPM)\"}\r\n          name=\"heartRate\"\r\n        >\r\n          <InputNumber />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={t(\"doctor\")}\r\n          name=\"doctorId\"\r\n          rules={[\r\n            { required: true, message: t('form.required') },\r\n          ]}\r\n        >\r\n          <Select\r\n            showSearch\r\n            placeholder = {t('placeholder.user')}\r\n            filterOption={ (input: any, option: any) => {\r\n              return option.children[2].toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n            } }\r\n          >\r\n            {renderOptionUser()}\r\n          </Select>\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={t(\"note\")}\r\n          name=\"note\"\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item wrapperCol={{ span: 24 }} style={{ textAlign: \"center\" }}>\r\n          <Button onClick={() => redirect(\"frontend.admin.healthStatuses.index\")} style={{ marginRight: 8 }}>\r\n            <LeftCircleFilled /> {t('cancel')}\r\n          </Button>\r\n\r\n          <Button type=\"primary\" htmlType=\"submit\" loading={loading} style={{ marginRight: 8 }}>\r\n            <SaveFilled /> {t('submit')}\r\n          </Button>\r\n          \r\n          <Button hidden={!deletePer} danger onClick={() => { \r\n              if (confirmRef.current) confirmRef.current.show(health.id) \r\n            }}>\r\n            <DeleteFilled /> {t('deleteItem')}\r\n          </Button>\r\n         \r\n        </Form.Item>\r\n      </Form>\r\n      {renderDeleteDialog()}\r\n    </div>\r\n  </Layout>\r\n}\r\n\r\nEdit.getInitialProps = async (ctx: any) => {\r\n  const healthService = new HealthService(ctx)\r\n  const patientService = new PatientService(ctx)\r\n  const userService = new UserService(ctx)\r\n  const query = ctx.query;\r\n  let error: any;\r\n\r\n  if (!query.id) {\r\n    //error missing id\r\n    error = {\r\n      code: 9996,\r\n      message: 'missing ID'\r\n    }\r\n  }\r\n\r\n  let [healthError, health] = await to(healthService.detail({ id: query.id }));\r\n  if(healthError) health = {}\r\n  const [errorPatient, patients] = await to(patientService.index({ pageSize: -1 }));\r\n  const filters = JSON.stringify({field:\"position\",operator:\"contains\",value:\"Bác sỹ\"})\r\n  const [errorUsers, users] = await to(userService.index({ pageSize: -1, filters: [filters] }));\r\n  return {\r\n    namespacesRequired: ['common', 'pages', 'menu','errors'],\r\n    error: error,\r\n    health: health,\r\n    healthError: healthError,\r\n    patients: _.get(patients, \"data\", []),\r\n    users: _.get(users, \"data\", [])\r\n  }\r\n}\r\nEdit.permissions = {\r\n  \"admin.healthStatuses\": \"U\"\r\n};\r\nexport default Edit"],"sourceRoot":""}