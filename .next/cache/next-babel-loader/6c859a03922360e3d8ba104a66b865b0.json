{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport BaseApi from './BaseService';\n\nvar User = /*#__PURE__*/function (_BaseApi) {\n  _inherits(User, _BaseApi);\n\n  var _super = _createSuper(User);\n\n  function User(context) {\n    var _this;\n\n    _classCallCheck(this, User);\n\n    _this = _super.call(this, context);\n    _this.name = 'users'; //kế thừa CRUD từ thằng cha\n\n    return _this;\n  }\n\n  _createClass(User, [{\n    key: \"login\",\n    value: function login(_ref) {\n      var data, url, result;\n      return _regeneratorRuntime.async(function login$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              data = _ref.data;\n              url = this.route(\"api.login\").href;\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(this.Request.post(url, data));\n\n            case 4:\n              _context.t0 = _context.sent;\n\n              if (_context.t0) {\n                _context.next = 7;\n                break;\n              }\n\n              _context.t0 = {};\n\n            case 7:\n              result = _context.t0;\n              //success\n              this.cookies.set('token', this.getData(result, \"token\", undefined), {\n                path: \"/\"\n              });\n              this.cookies.set('user', this.getData(result, \"user\", {}), {\n                path: \"/\"\n              });\n              this.redirect(\"frontend.admin.home\");\n              return _context.abrupt(\"return\", result);\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"updatePassword\",\n    value: function updatePassword(data) {\n      var url, result;\n      return _regeneratorRuntime.async(function updatePassword$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              url = this.route(\"api.\".concat(this.name, \".updatePassword\"), data).href;\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(this.Request.put(url, data));\n\n            case 3:\n              result = _context2.sent;\n              return _context2.abrupt(\"return\", result.data);\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"search\",\n    value: function search(data) {\n      var url;\n      return _regeneratorRuntime.async(function search$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              url = this.route(\"api.\".concat(this.name, \".search\"), data).href;\n              _context3.next = 3;\n              return _regeneratorRuntime.awrap(this.Request.get(url, data));\n\n            case 3:\n              return _context3.abrupt(\"return\", _context3.sent);\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }]);\n\n  return User;\n}(BaseApi);\n\nexport default User;","map":{"version":3,"sources":["E:/DATN/nursinghome/themes/services/api/UserService.ts"],"names":["BaseApi","User","context","name","data","url","route","href","Request","post","result","cookies","set","getData","undefined","path","redirect","put","get"],"mappings":";;;;;;;;;;;AAAA,OAAOA,OAAP,MAAoB,eAApB;;IAOMC,I;;;;;AACJ,gBAAYC,OAAZ,EAA8B;AAAA;;AAAA;;AAC5B,8BAAMA,OAAN;AACA,UAAKC,IAAL,GAAY,OAAZ,CAF4B,CAEP;;AAFO;AAG/B;;;;;;;;;;AACeC,cAAAA,I,QAAAA,I;AACNC,cAAAA,G,GAAM,KAAKC,KAAL,CAAW,WAAX,EAAwBC,I;;+CACjB,KAAKC,OAAL,CAAaC,IAAb,CAAkBJ,GAAlB,EAAuBD,IAAvB,C;;;;;;;;;;4BAAgC,E;;;AAA/CM,cAAAA,M;AACF;AACF,mBAAKC,OAAL,CAAaC,GAAb,CAAiB,OAAjB,EAA0B,KAAKC,OAAL,CAAaH,MAAb,EAAqB,OAArB,EAA8BI,SAA9B,CAA1B,EAAoE;AAClEC,gBAAAA,IAAI,EAAE;AAD4D,eAApE;AAGA,mBAAKJ,OAAL,CAAaC,GAAb,CAAiB,MAAjB,EAAyB,KAAKC,OAAL,CAAaH,MAAb,EAAqB,MAArB,EAA6B,EAA7B,CAAzB,EAA0D;AACxDK,gBAAAA,IAAI,EAAE;AADkD,eAA1D;AAGA,mBAAKC,QAAL,CAAc,qBAAd;+CACON,M;;;;;;;;;;;mCAEYN,I;;;;;;AACbC,cAAAA,G,GAAM,KAAKC,KAAL,eAAkB,KAAKH,IAAvB,sBAA8CC,IAA9C,EAAoDG,I;;+CAC7C,KAAKC,OAAL,CAAaS,GAAb,CAAiBZ,GAAjB,EAAsBD,IAAtB,C;;;AAAfM,cAAAA,M;gDACGA,MAAM,CAACN,I;;;;;;;;;;;2BAEHA,I;;;;;;AACLC,cAAAA,G,GAAM,KAAKC,KAAL,eAAkB,KAAKH,IAAvB,cAAsCC,IAAtC,EAA4CG,I;;+CAC3C,KAAKC,OAAL,CAAaU,GAAb,CAAiBb,GAAjB,EAAsBD,IAAtB,C;;;;;;;;;;;;;;;EAzBEJ,O;;AA6BnB,eAAeC,IAAf","sourcesContent":["import BaseApi from './BaseService'\r\n\r\ninterface loginData {\r\n  username: string,\r\n\r\n}\r\n\r\nclass User extends BaseApi {\r\n  constructor(context?: Context){\r\n    super(context)\r\n    this.name = 'users'; //kế thừa CRUD từ thằng cha\r\n}\r\n  async login({ data }: {data: {username: string, password: string}}) {\r\n    const url = this.route(\"api.login\").href\r\n    let result = await this.Request.post(url, data) || {}\r\n      //success\r\n    this.cookies.set('token', this.getData(result, \"token\", undefined), {\r\n      path: \"/\"\r\n    })\r\n    this.cookies.set('user', this.getData(result, \"user\", {}),{\r\n      path: \"/\"\r\n    })\r\n    this.redirect(\"frontend.admin.home\")\r\n    return result;\r\n  }\r\n  async updatePassword(data: { id: number, password: string}){\r\n    const url = this.route(`api.${this.name}.updatePassword`, data).href\r\n    let result = await this.Request.put(url, data)\r\n    return result.data;\r\n  }\r\n  async search(data: any){\r\n    const url = this.route(`api.${this.name}.search`, data).href\r\n    return await this.Request.get(url, data)\r\n  }\r\n}\r\n\r\nexport default User"]},"metadata":{},"sourceType":"module"}