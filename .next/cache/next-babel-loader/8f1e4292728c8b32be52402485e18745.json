{"ast":null,"code":"var _jsxFileName = \"E:\\\\DATN\\\\nursinghome\\\\pages\\\\admin\\\\userPermissions\\\\create.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useState } from 'react';\nimport Layout from 'themes/layouts/Admin';\nimport { Button, Form, Input, Select, Typography, Checkbox } from 'antd';\nimport UserPermissionService from 'themes/services/api/UserPermissionService';\nimport UserGroupService from 'themes/services/api/UserGroupService';\nimport _ from 'lodash';\nimport to from 'await-to-js';\nimport useBaseHook from 'themes/hooks/BaseHooks';\nimport { LeftCircleFilled, SaveFilled } from '@ant-design/icons';\nconst {\n  Title,\n  Text\n} = Typography;\nconst {\n  Option\n} = Select;\nconst formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 4\n    }\n  },\n  wrapperCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 18\n    }\n  }\n};\n\nconst Create = ({\n  groups\n}) => {\n  const {\n    t,\n    notify,\n    redirect,\n    router\n  } = useBaseHook();\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const [form] = Form.useForm();\n  const permissionService = new UserPermissionService(); // save avalibleValue of permission\n\n  let result = {\n    avalibleValue: 0\n  }; //submit form\n\n  const onFinish = async values => {\n    setLoading(true);\n    let [error, result] = await to(permissionService.create(values));\n    setLoading(false);\n\n    if (error) {\n      return notify(t(`errors:${error.code}`), t(error.message), 'error');\n    }\n\n    notify(t(\"message.recordCreated\"));\n    redirect(\"frontend.admin.userPermissions.index\");\n  }; //render option\n\n\n  const renderOption = () => {\n    let result = [];\n    groups.map(item => {\n      result.push(__jsx(Option, {\n        value: item.id,\n        key: item.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }\n      }, item.name));\n    });\n    return result;\n  };\n\n  const renderCheckbox = avalibleValue => {\n    let checkbox = [];\n    const options = [{\n      title: t('create'),\n      value: 8\n    }, {\n      title: t('view'),\n      value: 4\n    }, {\n      title: t('edit'),\n      value: 2\n    }, {\n      title: t('delete'),\n      value: 1\n    }];\n\n    function onChange(e, permission) {\n      e.target.checked ? avalibleValue += permission : avalibleValue -= permission;\n      result['avalibleValue'] = avalibleValue;\n    }\n\n    const checked = permission => {\n      return (avalibleValue & permission) === permission;\n    };\n\n    options.map(item => {\n      checkbox.push(__jsx(Checkbox, {\n        defaultChecked: checked(item.value),\n        onChange: e => onChange(e, item.value),\n        key: item.title,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }\n      }, item.title));\n    });\n    return checkbox;\n  };\n\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 10\n    }\n  }, __jsx(\"div\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  }, __jsx(Form, _extends({}, formItemLayout, {\n    form: form,\n    name: \"createPermission\",\n    initialValues: {\n      key: \"\",\n      name: \"\",\n      description: \"\",\n      groupId: \"\"\n    },\n    onFinish: e => onFinish(Object.assign(result, e)),\n    scrollToFirstError: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }), __jsx(Form.Item, {\n    label: t(\"userPermissions.key\"),\n    name: \"key\",\n    rules: [{\n      required: true,\n      message: t('form.required')\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, __jsx(Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  })), __jsx(Form.Item, {\n    label: t(\"userPermissions.name\"),\n    name: \"name\",\n    rules: [{\n      required: true,\n      message: t('form.required')\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, __jsx(Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  })), __jsx(Form.Item, {\n    label: t(\"group\"),\n    name: \"groupId\",\n    rules: [{\n      required: true,\n      message: t('form.required')\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, __jsx(Select, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, renderOption())), __jsx(Form.Item, {\n    label: t(\"description\"),\n    name: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, __jsx(Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  })), __jsx(Form.Item, {\n    label: t(\"userPermissions.avalibleValue\"),\n    rules: [{\n      required: true,\n      message: t('form.required')\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  }, renderCheckbox(result.avalibleValue)), __jsx(Form.Item, {\n    wrapperCol: {\n      span: 24\n    },\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    onClick: () => router.back(),\n    style: {\n      marginRight: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  }, __jsx(LeftCircleFilled, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  }), \" \", t('cancel')), __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: loading,\n    style: {\n      marginRight: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 11\n    }\n  }, __jsx(SaveFilled, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  }), \" \", t('submit'))))));\n};\n\nCreate.getInitialProps = async ctx => {\n  const groupService = new UserGroupService(ctx);\n  const [error, groups] = await to(groupService.index({\n    pageSize: -1\n  }));\n  return {\n    namespacesRequired: ['common', 'pages', 'menu', 'errors'],\n    error: error,\n    groups: _.get(groups, \"data\", [])\n  };\n};\n\nCreate.permissions = {\n  \"admin.userPermissions\": \"C\"\n};\nexport default Create;","map":{"version":3,"sources":["E:/DATN/nursinghome/pages/admin/userPermissions/create.tsx"],"names":["React","useState","Layout","Button","Form","Input","Select","Typography","Checkbox","UserPermissionService","UserGroupService","_","to","useBaseHook","LeftCircleFilled","SaveFilled","Title","Text","Option","formItemLayout","labelCol","xs","span","sm","wrapperCol","Create","groups","t","notify","redirect","router","loading","setLoading","form","useForm","permissionService","result","avalibleValue","onFinish","values","error","create","code","message","renderOption","map","item","push","id","name","renderCheckbox","checkbox","options","title","value","onChange","e","permission","target","checked","key","description","groupId","Object","assign","required","textAlign","back","marginRight","getInitialProps","ctx","groupService","index","pageSize","namespacesRequired","get","permissions"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport Layout from 'themes/layouts/Admin'\r\nimport { Button, Row, Col, Form, Input, Select, Typography, Checkbox } from 'antd';\r\nimport UserPermissionService from 'themes/services/api/UserPermissionService';\r\nimport UserGroupService from 'themes/services/api/UserGroupService';\r\nimport _ from 'lodash';\r\nimport to from 'await-to-js'\r\nimport useBaseHook from 'themes/hooks/BaseHooks'\r\nimport { LeftCircleFilled, SaveFilled } from '@ant-design/icons';\r\nimport BreadCrumb from 'themes/components/Breadcumb'\r\nconst { Title, Text } = Typography;\r\n\r\nconst { Option } = Select\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 4 },\r\n  },\r\n  wrapperCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 18 },\r\n  },\r\n};\r\n\r\n\r\nconst Create = ({ groups }: { groups: UserGroup[] }) => {\r\n  const { t, notify, redirect, router } = useBaseHook();\r\n  const [loading, setLoading] = useState(false);\r\n  const [form] = Form.useForm();\r\n  const permissionService = new UserPermissionService()\r\n\r\n  // save avalibleValue of permission\r\n  let result: any = {avalibleValue: 0}\r\n\r\n  //submit form\r\n  const onFinish = async (values: any): Promise<void> => {\r\n    setLoading(true)\r\n    let [error, result]: any[] = await to(permissionService.create(values));\r\n    setLoading(false)\r\n\r\n    if (error) {\r\n      return notify(t(`errors:${error.code}`), t(error.message), 'error')\r\n    }\r\n    notify(t(\"message.recordCreated\"))\r\n    redirect(\"frontend.admin.userPermissions.index\")\r\n  }\r\n\r\n  //render option\r\n  const renderOption = (): JSX.Element[] => {\r\n    let result: JSX.Element[] = [];\r\n    groups.map(item => {\r\n      result.push(\r\n        <Option value={item.id} key={item.id}>{item.name}</Option>\r\n      )\r\n    })\r\n    return result;\r\n  }\r\n\r\n  const renderCheckbox = (avalibleValue: any) => {\r\n    let checkbox: JSX.Element[] = [];\r\n    const options = [\r\n      {title: t('create'), value:8},\r\n      {title: t('view'), value:4},\r\n      {title: t('edit'), value:2},\r\n      {title: t('delete'), value:1}\r\n    ]\r\n    function onChange(e: any, permission: number ) {\r\n      e.target.checked ? avalibleValue += permission : avalibleValue -= permission;\r\n      result['avalibleValue'] = avalibleValue\r\n    }\r\n    const checked = (permission:number) => {return (avalibleValue & permission) === permission}\r\n    options.map(item => {\r\n      checkbox.push(\r\n        <Checkbox defaultChecked={checked(item.value)} onChange={(e)=>onChange(e,item.value)} key={item.title}>\r\n          {item.title}\r\n        </Checkbox>\r\n      )\r\n    })\r\n    return checkbox\r\n  }\r\n\r\n  return <Layout>\r\n    <div className=\"content\">\r\n      <Form\r\n        {...formItemLayout}\r\n        form={form}\r\n        name=\"createPermission\"\r\n        initialValues={{\r\n          key: \"\",\r\n          name: \"\",\r\n          description: \"\",\r\n          groupId: \"\"\r\n        }}\r\n        onFinish={(e) => onFinish(Object.assign(result,e))}\r\n        scrollToFirstError\r\n      >\r\n        <Form.Item\r\n          label={t(\"userPermissions.key\")}\r\n          name=\"key\"\r\n          rules={[\r\n            { required: true, message: t('form.required') },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label={t(\"userPermissions.name\")}\r\n          name=\"name\"\r\n          rules={[\r\n            { required: true, message: t('form.required') },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={t(\"group\")}\r\n          name=\"groupId\"\r\n          rules={[\r\n            { required: true, message: t('form.required')}\r\n          ]}\r\n        >\r\n          <Select>\r\n            {renderOption()}\r\n          </Select>\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={t(\"description\")}\r\n          name=\"description\"\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label={t(\"userPermissions.avalibleValue\")}\r\n          rules={[\r\n            { required: true, message: t('form.required') },\r\n          ]}\r\n        >\r\n          { renderCheckbox(result.avalibleValue) }\r\n        </Form.Item>\r\n\r\n        <Form.Item wrapperCol={{ span: 24 }} style={{ textAlign: \"center\" }}>\r\n          <Button onClick={() => router.back()} style={{ marginRight: 8 }}>\r\n            <LeftCircleFilled /> {t('cancel')}\r\n          </Button>\r\n          <Button type=\"primary\" htmlType=\"submit\" loading={loading} style={{ marginRight: 8 }}>\r\n            <SaveFilled /> {t('submit')}\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  </Layout>\r\n}\r\n\r\nCreate.getInitialProps = async (ctx: any) => {\r\n  const groupService = new UserGroupService(ctx)\r\n  const [error, groups] = await to(groupService.index({ pageSize: -1 }));\r\n  return {\r\n    namespacesRequired: ['common', 'pages', 'menu','errors'],\r\n    error: error,\r\n    groups: _.get(groups, \"data\", []),\r\n  }\r\n}\r\nCreate.permissions = {\r\n  \"admin.userPermissions\": \"C\"\r\n}\r\nexport default Create"]},"metadata":{},"sourceType":"module"}