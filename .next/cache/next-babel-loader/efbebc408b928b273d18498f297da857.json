{"ast":null,"code":"var _jsxFileName = \"E:\\\\DATN\\\\nursinghome\\\\pages\\\\admin\\\\beds\\\\create.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useState } from 'react';\nimport Layout from 'themes/layouts/Admin';\nimport { Button, Form, Input, Select, InputNumber, Radio } from 'antd';\nimport BedService from 'themes/services/api/BedService';\nimport RoomService from 'themes/services/api/RoomService';\nimport _ from 'lodash';\nimport to from 'await-to-js';\nimport useBaseHook from 'themes/hooks/BaseHooks';\nimport { DeleteFilled, LeftCircleFilled } from '@ant-design/icons';\nconst {\n  Option\n} = Select;\nconst formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 4\n    }\n  },\n  wrapperCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 18\n    }\n  }\n};\n\nconst Create = ({\n  rooms\n}) => {\n  const {\n    t,\n    notify,\n    redirect,\n    setStore,\n    getAuth,\n    getStore\n  } = useBaseHook();\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const [form] = Form.useForm();\n  const bedService = new BedService(); //submit form\n\n  const onFinish = async values => {\n    setLoading(true);\n    let [error, result] = await to(bedService.create(values));\n    setLoading(false);\n\n    if (error) {\n      return notify(t(`errors:${error.code}`), t(error.message), 'error');\n    }\n\n    notify(t(\"message.recordCreated\"));\n    redirect(\"frontend.admin.beds.index\");\n  }; //render option\n\n\n  const renderOption = () => {\n    let result = [];\n    rooms.map(item => {\n      result.push(__jsx(Option, {\n        value: item.code,\n        key: item.code,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }\n      }, item.code));\n    });\n    return result;\n  };\n\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 10\n    }\n  }, __jsx(\"div\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, __jsx(Form, _extends({}, formItemLayout, {\n    form: form,\n    name: \"createBed\",\n    initialValues: {\n      roomCode: \"\",\n      bedId: \"\",\n      status: \"\",\n      note: \"\"\n    },\n    onFinish: onFinish,\n    scrollToFirstError: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }), __jsx(Form.Item, {\n    label: t(\"room\"),\n    name: \"roomCode\",\n    rules: [{\n      required: true,\n      message: t('form.required')\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, __jsx(Select, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, renderOption())), __jsx(Form.Item, {\n    label: t(\"beds.bedId\"),\n    name: \"bedId\",\n    rules: [{\n      required: true,\n      message: t('form.required')\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, __jsx(InputNumber, {\n    style: {\n      width: \"100%\"\n    },\n    min: 1,\n    defaultValue: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  })), __jsx(Form.Item, {\n    label: t(\"status\"),\n    name: \"status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, __jsx(Radio.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, __jsx(Radio, {\n    value: 0,\n    key: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, t(\"beds.empty\")), __jsx(Radio, {\n    value: 1,\n    key: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, t(\"beds.full\")))), __jsx(Form.Item, {\n    label: t(\"note\"),\n    name: \"note\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, __jsx(Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  })), __jsx(Form.Item, {\n    wrapperCol: {\n      span: 24\n    },\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    onClick: () => redirect(\"frontend.admin.beds.index\"),\n    style: {\n      marginRight: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, __jsx(LeftCircleFilled, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }), \" \", t('cancel')), __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }, __jsx(DeleteFilled, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }), \" \", t('submit'))))));\n};\n\nCreate.getInitialProps = async ctx => {\n  const roomService = new RoomService(ctx);\n  const [error, rooms] = await to(roomService.index({\n    pageSize: -1\n  }));\n  return {\n    namespacesRequired: ['common', 'pages', 'menu', 'errors'],\n    error: error,\n    rooms: _.get(rooms, \"data\", [])\n  };\n};\n\nCreate.permissions = {\n  \"admin.beds\": \"C\"\n};\nexport default Create;","map":{"version":3,"sources":["E:/DATN/nursinghome/pages/admin/beds/create.tsx"],"names":["React","useState","Layout","Button","Form","Input","Select","InputNumber","Radio","BedService","RoomService","_","to","useBaseHook","DeleteFilled","LeftCircleFilled","Option","formItemLayout","labelCol","xs","span","sm","wrapperCol","Create","rooms","t","notify","redirect","setStore","getAuth","getStore","loading","setLoading","form","useForm","bedService","onFinish","values","error","result","create","code","message","renderOption","map","item","push","roomCode","bedId","status","note","required","width","textAlign","marginRight","getInitialProps","ctx","roomService","index","pageSize","namespacesRequired","get","permissions"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,MAAT,EAA2BC,IAA3B,EAAiCC,KAAjC,EAAwCC,MAAxC,EAAgDC,WAAhD,EAA6DC,KAA7D,QAA0E,MAA1E;AACA,OAAOC,UAAP,MAAuB,gCAAvB;AACA,OAAOC,WAAP,MAAwB,iCAAxB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,EAAP,MAAe,aAAf;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,SAASC,YAAT,EAAuBC,gBAAvB,QAA+C,mBAA/C;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAaV,MAAnB;AAEA,MAAMW,cAAc,GAAG;AACrBC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,EAAE,EAAE;AAAEC,MAAAA,IAAI,EAAE;AAAR,KADI;AAERC,IAAAA,EAAE,EAAE;AAAED,MAAAA,IAAI,EAAE;AAAR;AAFI,GADW;AAKrBE,EAAAA,UAAU,EAAE;AACVH,IAAAA,EAAE,EAAE;AAAEC,MAAAA,IAAI,EAAE;AAAR,KADM;AAEVC,IAAAA,EAAE,EAAE;AAAED,MAAAA,IAAI,EAAE;AAAR;AAFM;AALS,CAAvB;;AAWA,MAAMG,MAAM,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkC;AAC/C,QAAM;AAAEC,IAAAA,CAAF;AAAKC,IAAAA,MAAL;AAAaC,IAAAA,QAAb;AAAuBC,IAAAA,QAAvB;AAAiCC,IAAAA,OAAjC;AAA0CC,IAAAA;AAA1C,MAAuDjB,WAAW,EAAxE;AACA,QAAM;AAAA,OAACkB,OAAD;AAAA,OAAUC;AAAV,MAAwB/B,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACgC,IAAD,IAAS7B,IAAI,CAAC8B,OAAL,EAAf;AACA,QAAMC,UAAU,GAAG,IAAI1B,UAAJ,EAAnB,CAJ+C,CAK/C;;AACA,QAAM2B,QAAQ,GAAG,MAAOC,MAAP,IAAsC;AACrDL,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,QAAI,CAACM,KAAD,EAAQC,MAAR,IAAyB,MAAM3B,EAAE,CAACuB,UAAU,CAACK,MAAX,CAAkBH,MAAlB,CAAD,CAArC;AACAL,IAAAA,UAAU,CAAC,KAAD,CAAV;;AAEA,QAAIM,KAAJ,EAAW;AACT,aAAOZ,MAAM,CAACD,CAAC,CAAE,UAASa,KAAK,CAACG,IAAK,EAAtB,CAAF,EAA4BhB,CAAC,CAACa,KAAK,CAACI,OAAP,CAA7B,EAA8C,OAA9C,CAAb;AACD;;AACDhB,IAAAA,MAAM,CAACD,CAAC,CAAC,uBAAD,CAAF,CAAN;AACAE,IAAAA,QAAQ,CAAC,2BAAD,CAAR;AACD,GAVD,CAN+C,CAkB/C;;;AACA,QAAMgB,YAAY,GAAG,MAAqB;AACxC,QAAIJ,MAAqB,GAAG,EAA5B;AACAf,IAAAA,KAAK,CAACoB,GAAN,CAAUC,IAAI,IAAI;AAChBN,MAAAA,MAAM,CAACO,IAAP,CACE,MAAC,MAAD;AAAQ,QAAA,KAAK,EAAED,IAAI,CAACJ,IAApB;AAA0B,QAAA,GAAG,EAAEI,IAAI,CAACJ,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA2CI,IAAI,CAACJ,IAAhD,CADF;AAGD,KAJD;AAKA,WAAOF,MAAP;AACD,GARD;;AAUA,SAAO,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACL;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,eACMtB,cADN;AAEE,IAAA,IAAI,EAAEgB,IAFR;AAGE,IAAA,IAAI,EAAC,WAHP;AAIE,IAAA,aAAa,EAAE;AACbc,MAAAA,QAAQ,EAAE,EADG;AAEbC,MAAAA,KAAK,EAAE,EAFM;AAGbC,MAAAA,MAAM,EAAE,EAHK;AAIbC,MAAAA,IAAI,EAAE;AAJO,KAJjB;AAUE,IAAA,QAAQ,EAAEd,QAVZ;AAWE,IAAA,kBAAkB,MAXpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAaE,MAAC,IAAD,CAAM,IAAN;AACE,IAAA,KAAK,EAAEX,CAAC,CAAC,MAAD,CADV;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,KAAK,EAAE,CACL;AAAE0B,MAAAA,QAAQ,EAAE,IAAZ;AAAkBT,MAAAA,OAAO,EAAEjB,CAAC,CAAC,eAAD;AAA5B,KADK,CAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGkB,YAAY,EADf,CAPF,CAbF,EAyBE,MAAC,IAAD,CAAM,IAAN;AACE,IAAA,KAAK,EAAElB,CAAC,CAAC,YAAD,CADV;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,KAAK,EAAE,CACL;AAAE0B,MAAAA,QAAQ,EAAE,IAAZ;AAAkBT,MAAAA,OAAO,EAAEjB,CAAC,CAAC,eAAD;AAA5B,KADK,CAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE,MAAC,WAAD;AAAc,IAAA,KAAK,EAAE;AAAE2B,MAAAA,KAAK,EAAE;AAAT,KAArB;AAAwC,IAAA,GAAG,EAAE,CAA7C;AAAgD,IAAA,YAAY,EAAE,CAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CAzBF,EAmCE,MAAC,IAAD,CAAM,IAAN;AACE,IAAA,KAAK,EAAE3B,CAAC,CAAC,QAAD,CADV;AAEE,IAAA,IAAI,EAAC,QAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,MAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAO,IAAA,KAAK,EAAE,CAAd;AAAiB,IAAA,GAAG,EAAE,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0BA,CAAC,CAAC,YAAD,CAA3B,CADF,EAEE,MAAC,KAAD;AAAO,IAAA,KAAK,EAAE,CAAd;AAAiB,IAAA,GAAG,EAAE,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0BA,CAAC,CAAC,WAAD,CAA3B,CAFF,CAJF,CAnCF,EA6CE,MAAC,IAAD,CAAM,IAAN;AACE,IAAA,KAAK,EAAEA,CAAC,CAAC,MAAD,CADV;AAEE,IAAA,IAAI,EAAC,MAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CA7CF,EAoDE,MAAC,IAAD,CAAM,IAAN;AAAW,IAAA,UAAU,EAAE;AAAEL,MAAAA,IAAI,EAAE;AAAR,KAAvB;AAAqC,IAAA,KAAK,EAAE;AAACiC,MAAAA,SAAS,EAAE;AAAZ,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,MAAM1B,QAAQ,CAAC,2BAAD,CAA/B;AAA8D,IAAA,KAAK,EAAE;AAAE2B,MAAAA,WAAW,EAAE;AAAf,KAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,OACwB7B,CAAC,CAAC,QAAD,CADzB,CADF,EAIE,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,QAAQ,EAAC,QAAhC;AAAyC,IAAA,OAAO,EAAEM,OAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,OACoBN,CAAC,CAAC,QAAD,CADrB,CAJF,CApDF,CADF,CADK,CAAP;AAiED,CA9FD;;AAgGAF,MAAM,CAACgC,eAAP,GAAyB,MAAOC,GAAP,IAAoB;AAC3C,QAAMC,WAAW,GAAG,IAAI/C,WAAJ,CAAgB8C,GAAhB,CAApB;AACA,QAAM,CAAClB,KAAD,EAAQd,KAAR,IAAiB,MAAMZ,EAAE,CAAC6C,WAAW,CAACC,KAAZ,CAAkB;AAAEC,IAAAA,QAAQ,EAAE,CAAC;AAAb,GAAlB,CAAD,CAA/B;AACA,SAAO;AACLC,IAAAA,kBAAkB,EAAE,CAAC,QAAD,EAAW,OAAX,EAAmB,MAAnB,EAA0B,QAA1B,CADf;AAELtB,IAAAA,KAAK,EAAEA,KAFF;AAGLd,IAAAA,KAAK,EAAEb,CAAC,CAACkD,GAAF,CAAMrC,KAAN,EAAa,MAAb,EAAqB,EAArB;AAHF,GAAP;AAKD,CARD;;AASAD,MAAM,CAACuC,WAAP,GAAqB;AACnB,gBAAc;AADK,CAArB;AAGA,eAAevC,MAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport Layout from 'themes/layouts/Admin'\r\nimport { Button, Row, Col, Form, Input, Select, InputNumber, Radio } from 'antd';\r\nimport BedService from 'themes/services/api/BedService';\r\nimport RoomService from 'themes/services/api/RoomService';\r\nimport _ from 'lodash';\r\nimport to from 'await-to-js'\r\nimport useBaseHook from 'themes/hooks/BaseHooks'\r\nimport { DeleteFilled, LeftCircleFilled } from '@ant-design/icons';\r\n\r\nconst { Option } = Select\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 4 },\r\n  },\r\n  wrapperCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 18 },\r\n  },\r\n};\r\n\r\nconst Create = ({ rooms }: { rooms: Room[] }) => {\r\n  const { t, notify, redirect, setStore, getAuth, getStore } = useBaseHook();\r\n  const [loading, setLoading] = useState(false);\r\n  const [form] = Form.useForm();\r\n  const bedService = new BedService()\r\n  //submit form\r\n  const onFinish = async (values: any): Promise<void> => {\r\n    setLoading(true)\r\n    let [error, result]: any[] = await to(bedService.create(values));\r\n    setLoading(false)\r\n\r\n    if (error) {\r\n      return notify(t(`errors:${error.code}`), t(error.message), 'error')\r\n    }\r\n    notify(t(\"message.recordCreated\"))\r\n    redirect(\"frontend.admin.beds.index\")\r\n  }\r\n\r\n  //render option\r\n  const renderOption = (): JSX.Element[] => {\r\n    let result: JSX.Element[] = [];\r\n    rooms.map(item => {\r\n      result.push(\r\n        <Option value={item.code} key={item.code}>{item.code}</Option>\r\n      )\r\n    })\r\n    return result;\r\n  }\r\n  \r\n  return <Layout>\r\n    <div className=\"content\">\r\n      <Form\r\n        {...formItemLayout}\r\n        form={form}\r\n        name=\"createBed\"\r\n        initialValues={{\r\n          roomCode: \"\",\r\n          bedId: \"\",\r\n          status: \"\",\r\n          note: \"\"\r\n        }}\r\n        onFinish={onFinish}\r\n        scrollToFirstError\r\n      >\r\n        <Form.Item\r\n          label={t(\"room\")}\r\n          name=\"roomCode\"\r\n          rules={[\r\n            { required: true, message: t('form.required')}\r\n          ]}\r\n        >\r\n          <Select>\r\n            {renderOption()}\r\n          </Select>\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={t(\"beds.bedId\")}\r\n          name=\"bedId\"\r\n          rules={[\r\n            { required: true, message: t('form.required') },\r\n          ]}\r\n        >\r\n          <InputNumber  style={{ width: \"100%\" }} min={1} defaultValue={1} />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={t(\"status\")}\r\n          name=\"status\"\r\n        >\r\n          <Radio.Group>\r\n            <Radio value={0} key={0}>{t(\"beds.empty\")}</Radio>\r\n            <Radio value={1} key={1}>{t(\"beds.full\")}</Radio>\r\n          </Radio.Group>\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={t(\"note\")}\r\n          name=\"note\"\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item wrapperCol={{ span: 24 }} style={{textAlign: \"center\"}}>\r\n          <Button onClick={() => redirect(\"frontend.admin.beds.index\")} style={{ marginRight: 8}}>\r\n            <LeftCircleFilled /> {t('cancel')}\r\n          </Button>\r\n          <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\r\n            <DeleteFilled /> {t('submit')}\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  </Layout>\r\n}\r\n\r\nCreate.getInitialProps = async (ctx: any) => {\r\n  const roomService = new RoomService(ctx)\r\n  const [error, rooms] = await to(roomService.index({ pageSize: -1 }));\r\n  return {\r\n    namespacesRequired: ['common', 'pages','menu','errors'],\r\n    error: error,\r\n    rooms: _.get(rooms, \"data\", []),\r\n  }\r\n}\r\nCreate.permissions = {\r\n  \"admin.beds\": \"C\"\r\n};\r\nexport default Create"]},"metadata":{},"sourceType":"module"}