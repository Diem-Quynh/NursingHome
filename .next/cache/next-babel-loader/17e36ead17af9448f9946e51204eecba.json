{"ast":null,"code":"var _jsxFileName = \"E:\\\\DATN\\\\nursinghome\\\\pages\\\\admin\\\\userPermissions\\\\edit.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport ConfirmDialog from 'themes/components/Dialogs/ConfirmDialog';\nimport React, { useState } from 'react';\nimport Layout from 'themes/layouts/Admin';\nimport { Button, Form, Input, Select, Checkbox } from 'antd';\nimport PermissionService from 'themes/services/api/UserPermissionService';\nimport GroupService from 'themes/services/api/UserGroupService';\nimport _ from 'lodash';\nimport to from 'await-to-js';\nimport useBaseHook from 'themes/hooks/BaseHooks';\nimport { DeleteFilled, SaveFilled, LeftCircleFilled } from '@ant-design/icons';\nimport usePermissionHook from \"themes/hooks/PermissionHook\";\nconst {\n  Option\n} = Select;\nconst formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 4\n    }\n  },\n  wrapperCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 18\n    }\n  }\n};\n\nconst Edit = ({\n  groups,\n  permission\n}) => {\n  const {\n    t,\n    notify,\n    redirect,\n    setStore,\n    getAuth,\n    getStore\n  } = useBaseHook();\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: modalVisible,\n    1: setModalVisible\n  } = useState(false);\n  const [form] = Form.useForm();\n  const permissionService = new PermissionService();\n  const confirmRef = React.createRef();\n  const {\n    checkPermission\n  } = usePermissionHook();\n  const deletePer = checkPermission({\n    \"admin.userPermissions\": \"D\"\n  }); // save avalibleValue of permission\n\n  let result = {\n    avalibleValue: permission.avalibleValue\n  }; //submit form\n\n  const onFinish = async values => {\n    setLoading(true);\n    let [error, result] = await to(permissionService.edit({\n      id: permission.id,\n      values\n    }));\n    setLoading(false);\n\n    if (error) {\n      return notify(t(`errors:${error.code}`), t(error.message), 'error');\n    }\n\n    notify(t(\"message.recordUpdated\"));\n    redirect(\"frontend.admin.userPermissions.index\");\n  };\n\n  const onDelete = async () => {\n    let [error, result] = await to(permissionService.delete({\n      ids: [permission.id]\n    }));\n\n    if (error) {\n      return notify(t(`errors:${error.code}`), t(`${error.message}`), 'error');\n    }\n\n    notify(t('message.recordDeleted'));\n    redirect(\"frontend.admin.userPermissions.index\");\n  };\n\n  const renderDeleteDialog = () => {\n    return __jsx(ConfirmDialog, {\n      ref: confirmRef,\n      onSubmit: onDelete,\n      title: t('deleteItem'),\n      content: t('message.deleteConfirm'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }\n    });\n  }; //render option\n\n\n  const renderOption = () => {\n    let result = [];\n    groups.map(item => {\n      result.push(__jsx(Option, {\n        value: item.id,\n        key: item.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 9\n        }\n      }, item.name));\n    });\n    return result;\n  };\n\n  const renderCheckbox = avalibleValue => {\n    let checkbox = [];\n    const options = [{\n      title: t('create'),\n      value: 8\n    }, {\n      title: t('view'),\n      value: 4\n    }, {\n      title: t('edit'),\n      value: 2\n    }, {\n      title: t('delete'),\n      value: 1\n    }];\n\n    function onChange(e, permission) {\n      e.target.checked ? avalibleValue += permission : avalibleValue -= permission;\n      result['avalibleValue'] = avalibleValue;\n    }\n\n    const checked = permission => {\n      return (avalibleValue & permission) === permission;\n    };\n\n    options.map(item => {\n      checkbox.push(__jsx(Checkbox, {\n        defaultChecked: checked(item.value),\n        onChange: e => onChange(e, item.value),\n        key: item.title,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 9\n        }\n      }, item.title));\n    });\n    return checkbox;\n  };\n\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 10\n    }\n  }, __jsx(\"div\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 5\n    }\n  }, __jsx(Form, _extends({}, formItemLayout, {\n    form: form,\n    name: \"createPermission\",\n    initialValues: {\n      key: permission.key,\n      name: permission.name,\n      description: permission.description\n    },\n    onFinish: e => onFinish(Object.assign(result, e)),\n    scrollToFirstError: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }), __jsx(Form.Item, {\n    label: t(\"userPermissions.key\"),\n    name: \"key\",\n    rules: [{\n      required: true,\n      message: t('form.required')\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, __jsx(Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }\n  })), __jsx(Form.Item, {\n    label: t(\"userPermissions.name\"),\n    name: \"name\",\n    rules: [{\n      required: true,\n      message: t('form.required')\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }, __jsx(Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 11\n    }\n  })), __jsx(Form.Item, {\n    label: t(\"description\"),\n    name: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }\n  }, __jsx(Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 11\n    }\n  })), __jsx(Form.Item, {\n    label: t(\"userPermissions.avalibleValue\"),\n    rules: [{\n      required: true,\n      message: t('form.required')\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }\n  }, renderCheckbox(result.avalibleValue)), __jsx(Form.Item, {\n    wrapperCol: {\n      span: 24\n    },\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    onClick: () => redirect(\"frontend.admin.userPermissions.index\"),\n    style: {\n      marginRight: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 11\n    }\n  }, __jsx(LeftCircleFilled, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }\n  }), \" \", t('cancel')), __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: loading,\n    style: {\n      marginRight: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 11\n    }\n  }, __jsx(SaveFilled, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }\n  }), \" \", t('submit')), __jsx(Button, {\n    hidden: !deletePer,\n    danger: true,\n    onClick: () => {\n      if (confirmRef.current) confirmRef.current.show(permission.id);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 11\n    }\n  }, __jsx(DeleteFilled, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }\n  }), \" \", t('deleteItem')))), renderDeleteDialog()));\n};\n\nEdit.getInitialProps = async ctx => {\n  const groupService = new GroupService(ctx);\n  const permissionService = new PermissionService(ctx);\n  const query = ctx.query;\n  let error;\n\n  if (!query.id) {\n    //error missing id\n    error = {\n      code: 9996,\n      message: 'missing ID'\n    };\n  }\n\n  let [permissionError, permission] = await to(permissionService.detail({\n    id: query.id\n  }));\n  const [errorGroup, groups] = await to(groupService.index({\n    pageSize: -1\n  }));\n  return {\n    namespacesRequired: ['common', 'pages', 'menu', 'errors'],\n    error: error,\n    permission: permission,\n    groups: _.get(groups, \"data\", [])\n  };\n};\n\nEdit.permissions = {\n  \"admin.userPermissions\": \"U\"\n};\nexport default Edit;","map":{"version":3,"sources":["E:/DATN/nursinghome/pages/admin/userPermissions/edit.tsx"],"names":["ConfirmDialog","React","useState","Layout","Button","Form","Input","Select","Checkbox","PermissionService","GroupService","_","to","useBaseHook","DeleteFilled","SaveFilled","LeftCircleFilled","usePermissionHook","Option","formItemLayout","labelCol","xs","span","sm","wrapperCol","Edit","groups","permission","t","notify","redirect","setStore","getAuth","getStore","loading","setLoading","modalVisible","setModalVisible","form","useForm","permissionService","confirmRef","createRef","checkPermission","deletePer","result","avalibleValue","onFinish","values","error","edit","id","code","message","onDelete","delete","ids","renderDeleteDialog","renderOption","map","item","push","name","renderCheckbox","checkbox","options","title","value","onChange","e","target","checked","key","description","Object","assign","required","textAlign","marginRight","current","show","getInitialProps","ctx","groupService","query","permissionError","detail","errorGroup","index","pageSize","namespacesRequired","get","permissions"],"mappings":"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","sourcesContent":["import ConfirmDialog from 'themes/components/Dialogs/ConfirmDialog';\r\n\r\nimport React, { useState } from 'react'\r\nimport Layout from 'themes/layouts/Admin'\r\nimport { Button, Row, Col, Form, Input, Select, Checkbox, InputNumber } from 'antd';\r\nimport PermissionService from 'themes/services/api/UserPermissionService';\r\nimport GroupService from 'themes/services/api/UserGroupService';\r\nimport _ from 'lodash';\r\nimport to from 'await-to-js'\r\nimport useBaseHook from 'themes/hooks/BaseHooks'\r\nimport { DeleteFilled, SaveFilled, LeftCircleFilled, CopyFilled } from '@ant-design/icons';\r\nimport usePermissionHook from \"themes/hooks/PermissionHook\";\r\n\r\nconst { Option } = Select\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 4 },\r\n  },\r\n  wrapperCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 18 },\r\n  },\r\n};\r\n\r\nconst Edit = ({ groups, permission }: { groups: UserGroup[], permission: Permission }) => {\r\n  const { t, notify, redirect, setStore, getAuth, getStore } = useBaseHook();\r\n  const [loading, setLoading] = useState(false);\r\n  const [modalVisible, setModalVisible] = useState(false)\r\n  const [form] = Form.useForm();\r\n  const permissionService = new PermissionService()\r\n  const confirmRef = React.createRef<ConfirmDialog>()\r\n\r\n  const { checkPermission } = usePermissionHook();\r\n  const deletePer = checkPermission({\r\n    \"admin.userPermissions\": \"D\"\r\n  })\r\n\r\n  // save avalibleValue of permission\r\n  let result: any = {avalibleValue: permission.avalibleValue}\r\n\r\n  //submit form\r\n  const onFinish = async (values: any): Promise<void> => {\r\n    setLoading(true)\r\n    let [error, result]: any[] = await to(permissionService.edit({\r\n      id: permission.id,\r\n      values\r\n    }));\r\n    setLoading(false)\r\n\r\n    if (error) {\r\n      return notify(t(`errors:${error.code}`), t(error.message), 'error')\r\n    }\r\n    notify(t(\"message.recordUpdated\"))\r\n    redirect(\"frontend.admin.userPermissions.index\")\r\n  }\r\n\r\n  const onDelete = async (): Promise<void> => {\r\n    let [error, result]: any[] = await to(permissionService.delete({ ids: [permission.id] }));\r\n\r\n    if (error) {\r\n      return notify(t(`errors:${error.code}`), t(`${error.message}`), 'error')\r\n    }\r\n    notify(t('message.recordDeleted'))\r\n    redirect(\"frontend.admin.userPermissions.index\")\r\n  }\r\n\r\n  const renderDeleteDialog = () => {\r\n    return (\r\n      <ConfirmDialog\r\n        ref={confirmRef}\r\n        onSubmit={onDelete}\r\n        title={t('deleteItem')}\r\n        content={t('message.deleteConfirm')}\r\n      />\r\n    )\r\n  }\r\n\r\n  //render option\r\n  const renderOption = (): JSX.Element[] => {\r\n    let result: JSX.Element[] = [];\r\n    groups.map(item => {\r\n      result.push(\r\n        <Option value={item.id} key={item.id}>{item.name}</Option>\r\n      )\r\n    })\r\n    return result;\r\n  }\r\n\r\n  const renderCheckbox = (avalibleValue: any) => {\r\n    let checkbox: JSX.Element[] = [];\r\n    const options = [\r\n      {title: t('create'), value:8},\r\n      {title: t('view'), value:4},\r\n      {title: t('edit'), value:2},\r\n      {title: t('delete'), value:1}\r\n    ]\r\n    function onChange(e: any, permission: number ) {\r\n      e.target.checked ? avalibleValue += permission : avalibleValue -= permission;\r\n      result['avalibleValue'] = avalibleValue\r\n    }\r\n    const checked = (permission:number) => {return (avalibleValue & permission) === permission}\r\n    options.map(item => {\r\n      checkbox.push(\r\n        <Checkbox defaultChecked={checked(item.value)} onChange={(e)=>onChange(e,item.value)} key={item.title}>\r\n          {item.title}\r\n        </Checkbox>\r\n      )\r\n    })\r\n    return checkbox\r\n  }\r\n\r\n  return <Layout>\r\n    <div className=\"content\">\r\n      <Form\r\n        {...formItemLayout}\r\n        form={form}\r\n        name=\"createPermission\"\r\n        initialValues={{\r\n          key: permission.key,\r\n          name: permission.name,\r\n          description: permission.description\r\n        }}\r\n        onFinish={(e) => onFinish(Object.assign(result,e))}\r\n        scrollToFirstError\r\n      >\r\n        <Form.Item\r\n          label={t(\"userPermissions.key\")}\r\n          name=\"key\"\r\n          rules={[\r\n            { required: true, message: t('form.required') },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label={t(\"userPermissions.name\")}\r\n          name=\"name\"\r\n          rules={[\r\n            { required: true, message: t('form.required') },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label={t(\"description\")}\r\n          name=\"description\"\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label={t(\"userPermissions.avalibleValue\")}\r\n          rules={[\r\n            { required: true, message: t('form.required') },\r\n          ]}\r\n        >\r\n          { renderCheckbox(result.avalibleValue) }\r\n        </Form.Item>\r\n\r\n        <Form.Item wrapperCol={{ span: 24 }} style={{ textAlign: \"center\" }}>\r\n          <Button onClick={() => redirect(\"frontend.admin.userPermissions.index\")} style={{ marginRight: 8 }}>\r\n            <LeftCircleFilled /> {t('cancel')}\r\n          </Button>\r\n\r\n          <Button  type=\"primary\" htmlType=\"submit\" loading={loading} style={{ marginRight: 8 }}>\r\n            <SaveFilled /> {t('submit')}\r\n          </Button>\r\n          <Button hidden={!deletePer} danger onClick={() => { if (confirmRef.current) confirmRef.current.show(permission.id) }}>\r\n            <DeleteFilled /> {t('deleteItem')}\r\n          </Button>\r\n         \r\n        </Form.Item>\r\n      </Form>\r\n      {renderDeleteDialog()}\r\n    </div>\r\n  </Layout>\r\n}\r\n\r\nEdit.getInitialProps = async (ctx: any) => {\r\n  const groupService = new GroupService(ctx)\r\n  const permissionService = new PermissionService(ctx)\r\n  const query = ctx.query;\r\n  let error: any;\r\n\r\n  if (!query.id) {\r\n    //error missing id\r\n    error = {\r\n      code: 9996,\r\n      message: 'missing ID'\r\n    }\r\n  }\r\n\r\n  let [permissionError, permission] = await to(permissionService.detail({ id: query.id }));\r\n  const [errorGroup, groups] = await to(groupService.index({ pageSize: -1 }));\r\n  return {\r\n    namespacesRequired: ['common', 'pages', 'menu','errors'],\r\n    error: error,\r\n    permission: permission,\r\n    groups: _.get(groups, \"data\", []),\r\n  }\r\n}\r\nEdit.permissions = {\r\n  \"admin.userPermissions\": \"U\"\r\n};\r\nexport default Edit"]},"metadata":{},"sourceType":"module"}