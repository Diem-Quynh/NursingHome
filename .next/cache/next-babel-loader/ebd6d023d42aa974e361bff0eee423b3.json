{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\DATN\\\\nursinghome\\\\pages\\\\admin\\\\rooms\\\\edit.tsx\";\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport ConfirmDialog from 'themes/components/Dialogs/ConfirmDialog';\nimport React, { useState } from 'react';\nimport Layout from 'themes/layouts/Admin';\nimport { Button, Form, Input, Select, Modal, InputNumber } from 'antd';\nimport _ from 'lodash';\nimport to from 'await-to-js';\nimport useBaseHook from 'themes/hooks/BaseHooks';\nimport { DeleteFilled, SaveFilled, LeftCircleFilled, CopyFilled } from '@ant-design/icons';\nimport usePermissionHook from \"themes/hooks/PermissionHook\";\nvar Option = Select.Option;\nvar formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 4\n    }\n  },\n  wrapperCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 18\n    }\n  }\n};\n\nvar formatCurrency = function formatCurrency(value) {\n  return \"\".concat(value).replace(/[^0-9]+/g, \"\").replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n};\n\nvar parserCurrency = function parserCurrency(value) {\n  return value ? value.replace(/\\$\\s?|(,*)/g, \"\") : \"\";\n};\n\nvar Edit = function Edit(_ref) {\n  var groups = _ref.groups,\n      user = _ref.user;\n\n  var _useBaseHook = useBaseHook(),\n      t = _useBaseHook.t,\n      notify = _useBaseHook.notify,\n      redirect = _useBaseHook.redirect,\n      setStore = _useBaseHook.setStore,\n      getAuth = _useBaseHook.getAuth,\n      getStore = _useBaseHook.getStore;\n\n  var _useState = useState(false),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  var _useState2 = useState(false),\n      modalVisible = _useState2[0],\n      setModalVisible = _useState2[1];\n\n  var _Form$useForm = Form.useForm(),\n      _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n      form = _Form$useForm2[0];\n\n  var userService = new UserService();\n  var confirmRef = React.createRef();\n\n  var _usePermissionHook = usePermissionHook(),\n      checkPermission = _usePermissionHook.checkPermission;\n\n  var deletePer = checkPermission({\n    \"admin.users\": \"D\"\n  }); //submit form\n\n  var onFinish = function onFinish(values) {\n    var rePassword, otherValues, _await$to, _await$to2, error, result;\n\n    return _regeneratorRuntime.async(function onFinish$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setLoading(true);\n            rePassword = values.rePassword, otherValues = _objectWithoutProperties(values, [\"rePassword\"]);\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(to(userService.edit(_objectSpread({\n              id: user.id\n            }, otherValues))));\n\n          case 4:\n            _await$to = _context.sent;\n            _await$to2 = _slicedToArray(_await$to, 2);\n            error = _await$to2[0];\n            result = _await$to2[1];\n            setLoading(false);\n\n            if (!error) {\n              _context.next = 11;\n              break;\n            }\n\n            return _context.abrupt(\"return\", notify(t(\"errors:\".concat(error.code)), t(error.message), 'error'));\n\n          case 11:\n            notify(t(\"message.recordUpdated\"));\n            redirect(\"frontend.admin.users.index\");\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var onDelete = function onDelete() {\n    var _await$to3, _await$to4, error, result;\n\n    return _regeneratorRuntime.async(function onDelete$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(to(userService[\"delete\"]({\n              ids: [user.id]\n            })));\n\n          case 2:\n            _await$to3 = _context2.sent;\n            _await$to4 = _slicedToArray(_await$to3, 2);\n            error = _await$to4[0];\n            result = _await$to4[1];\n\n            if (!error) {\n              _context2.next = 8;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", notify(t(\"errors:\".concat(error.code)), t(\"\".concat(error.message)), 'error'));\n\n          case 8:\n            notify(t('message.recordDeleted'));\n            redirect(\"frontend.admin.users.index\");\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var onChangePassword = function onChangePassword(data) {\n    var values, _await$to5, _await$to6, error, result;\n\n    return _regeneratorRuntime.async(function onChangePassword$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            console.log(data);\n            setModalVisible(false);\n            values = {\n              id: user.id,\n              password: data.password\n            };\n            _context3.next = 5;\n            return _regeneratorRuntime.awrap(to(userService.updatePassword(values)));\n\n          case 5:\n            _await$to5 = _context3.sent;\n            _await$to6 = _slicedToArray(_await$to5, 2);\n            error = _await$to6[0];\n            result = _await$to6[1];\n\n            if (!error) {\n              _context3.next = 11;\n              break;\n            }\n\n            return _context3.abrupt(\"return\", notify(t(\"errors:\".concat(error.code)), t(error.message), 'error'));\n\n          case 11:\n            notify(t(\"message.recordUpdated\"));\n\n          case 12:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }; //validate input password\n\n\n  var validatorPassword = function validatorPassword(_ref2) {\n    var getFieldValue = _ref2.getFieldValue;\n    return {\n      validator: function validator(rule, value) {\n        if (!value || getFieldValue('password') === value) {\n          return Promise.resolve();\n        }\n\n        return Promise.reject(t('form.rePassword'));\n      }\n    };\n  }; //render option\n\n\n  var renderOption = function renderOption() {\n    var result = [];\n    groups.map(function (item) {\n      result.push(__jsx(Option, {\n        value: item.id,\n        key: item.id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }\n      }, item.name));\n    });\n    return result;\n  };\n\n  var renderDeleteDialog = function renderDeleteDialog() {\n    return __jsx(ConfirmDialog, {\n      ref: confirmRef,\n      onSubmit: onDelete,\n      title: t('deleteItem'),\n      content: t('message.deleteConfirm'),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 7\n      }\n    });\n  };\n\n  var renderChangePassModal = function renderChangePassModal() {\n    var _Form$useForm3 = Form.useForm(),\n        _Form$useForm4 = _slicedToArray(_Form$useForm3, 1),\n        formChangePassword = _Form$useForm4[0];\n\n    return __jsx(Form, {\n      form: formChangePassword,\n      name: \"formChangePassword\",\n      initialValues: {\n        password: \"\",\n        repassword: \"\"\n      },\n      onFinish: onChangePassword,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }\n    }, __jsx(Modal, {\n      closable: false,\n      visible: modalVisible,\n      onCancel: function onCancel() {\n        return setModalVisible(false);\n      },\n      onOk: function onOk() {\n        formChangePassword.submit();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 7\n      }\n    }, __jsx(Form.Item, {\n      label: t(\"password\"),\n      labelCol: {\n        span: 5\n      },\n      wrapperCol: {\n        span: 19\n      },\n      name: \"password\",\n      rules: [{\n        required: true,\n        message: t('form.required')\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }\n    }, __jsx(Input.Password, {\n      placeholder: t(\"password\"),\n      type: \"password\",\n      autoFocus: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }\n    })), __jsx(Form.Item, {\n      label: t(\"rePassword\"),\n      labelCol: {\n        span: 5\n      },\n      wrapperCol: {\n        span: 19\n      },\n      name: \"repassword\",\n      rules: [{\n        required: true,\n        message: t('form.required')\n      }, validatorPassword],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }\n    }, __jsx(Input.Password, {\n      placeholder: t(\"rePassword\"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }\n    }))));\n  };\n\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 10\n    }\n  }, __jsx(\"div\", {\n    className: \"content\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 5\n    }\n  }, __jsx(Form, _extends({}, formItemLayout, {\n    form: form,\n    name: \"createUser\",\n    initialValues: {\n      fullname: user.fullname,\n      username: user.username,\n      email: user.email,\n      phone: user.phone,\n      groupId: user.groupId,\n      salary: user.salary\n    },\n    onFinish: onFinish,\n    scrollToFirstError: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }\n  }), __jsx(Form.Item, {\n    label: t(\"fullname\"),\n    name: \"fullname\",\n    rules: [{\n      required: true,\n      message: t('form.required')\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }\n  }, __jsx(Input, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 11\n    }\n  })), __jsx(Form.Item, {\n    label: t(\"username\"),\n    name: \"username\",\n    rules: [{\n      required: true,\n      message: t('form.required'),\n      whitespace: true\n    }, {\n      max: 15,\n      message: t('form.maxLength', {\n        length: 15\n      })\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 9\n    }\n  }, __jsx(Input, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 11\n    }\n  })), __jsx(Form.Item, {\n    label: t(\"email\"),\n    name: \"email\",\n    rules: [{\n      required: true,\n      message: t('form.required')\n    }, {\n      type: 'email',\n      message: t('form.email')\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 9\n    }\n  }, __jsx(Input, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 11\n    }\n  })), __jsx(Form.Item, {\n    label: t(\"phone\"),\n    name: \"phone\",\n    rules: [{\n      required: true,\n      message: t('form.required')\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 9\n    }\n  }, __jsx(Input, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 11\n    }\n  })), __jsx(Form.Item, {\n    label: t(\"userGroup\"),\n    name: \"groupId\",\n    rules: [],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 9\n    }\n  }, __jsx(Select, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 11\n    }\n  }, renderOption())), __jsx(Form.Item, {\n    label: t(\"salary.salary\"),\n    name: \"salary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 9\n    }\n  }, __jsx(InputNumber, {\n    style: {\n      width: \"100%\"\n    },\n    formatter: formatCurrency,\n    parser: parserCurrency,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 13\n    }\n  })), __jsx(Form.Item, {\n    wrapperCol: {\n      span: 24\n    },\n    style: {\n      textAlign: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    onClick: function onClick() {\n      return redirect(\"frontend.admin.users.index\");\n    },\n    style: {\n      marginRight: 8\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 11\n    }\n  }, __jsx(LeftCircleFilled, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 13\n    }\n  }), \" \", t('cancel')), __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: loading,\n    style: {\n      marginRight: 8\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 11\n    }\n  }, __jsx(SaveFilled, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 13\n    }\n  }), \" \", t('submit')), __jsx(Button, {\n    onClick: function onClick() {\n      setModalVisible(true);\n    },\n    style: {\n      marginRight: 8\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 11\n    }\n  }, __jsx(CopyFilled, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 13\n    }\n  }), \" \", t('changePassword')), __jsx(Button, {\n    hidden: !deletePer,\n    danger: true,\n    onClick: function onClick() {\n      if (confirmRef.current) confirmRef.current.show(user.id);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 11\n    }\n  }, __jsx(DeleteFilled, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 13\n    }\n  }), \" \", t('deleteItem')))), renderDeleteDialog(), renderChangePassModal()));\n};\n\nEdit.getInitialProps = function _callee(ctx) {\n  var userGroupService, userService, query, error, _await$to7, _await$to8, userError, user, _await$to9, _await$to10, errorGroup, groups;\n\n  return _regeneratorRuntime.async(function _callee$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          userGroupService = new UserGroupService(ctx);\n          userService = new UserService(ctx);\n          query = ctx.query;\n\n          if (!query.id) {\n            //error missing id\n            error = {\n              code: 9996,\n              message: 'missing ID'\n            };\n          }\n\n          _context4.next = 6;\n          return _regeneratorRuntime.awrap(to(userService.detail({\n            id: query.id\n          })));\n\n        case 6:\n          _await$to7 = _context4.sent;\n          _await$to8 = _slicedToArray(_await$to7, 2);\n          userError = _await$to8[0];\n          user = _await$to8[1];\n          _context4.next = 12;\n          return _regeneratorRuntime.awrap(to(userGroupService.index({\n            pageSize: -1\n          })));\n\n        case 12:\n          _await$to9 = _context4.sent;\n          _await$to10 = _slicedToArray(_await$to9, 2);\n          errorGroup = _await$to10[0];\n          groups = _await$to10[1];\n          return _context4.abrupt(\"return\", {\n            namespacesRequired: ['common', 'pages', 'menu'],\n            error: error,\n            user: user,\n            groups: _.get(groups, \"data\", [])\n          });\n\n        case 17:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nEdit.permissions = {\n  \"admin.users\": \"U\"\n};\nexport default Edit;","map":{"version":3,"sources":["E:/DATN/nursinghome/pages/admin/rooms/edit.tsx"],"names":["ConfirmDialog","React","useState","Layout","Button","Form","Input","Select","Modal","InputNumber","_","to","useBaseHook","DeleteFilled","SaveFilled","LeftCircleFilled","CopyFilled","usePermissionHook","Option","formItemLayout","labelCol","xs","span","sm","wrapperCol","formatCurrency","value","replace","parserCurrency","Edit","groups","user","t","notify","redirect","setStore","getAuth","getStore","loading","setLoading","modalVisible","setModalVisible","useForm","form","userService","UserService","confirmRef","createRef","checkPermission","deletePer","onFinish","values","rePassword","otherValues","edit","id","error","result","code","message","onDelete","ids","onChangePassword","data","console","log","password","updatePassword","validatorPassword","getFieldValue","validator","rule","Promise","resolve","reject","renderOption","map","item","push","name","renderDeleteDialog","renderChangePassModal","formChangePassword","repassword","submit","required","fullname","username","email","phone","groupId","salary","whitespace","max","length","type","width","textAlign","marginRight","current","show","getInitialProps","ctx","userGroupService","UserGroupService","query","detail","userError","index","pageSize","errorGroup","namespacesRequired","get","permissions"],"mappings":"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","sourcesContent":["import ConfirmDialog from 'themes/components/Dialogs/ConfirmDialog';\r\n\r\nimport React, { useState } from 'react'\r\nimport Layout from 'themes/layouts/Admin'\r\nimport { Button, Row, Col, Form, Input, Select, Modal, InputNumber } from 'antd';\r\nimport RoomService from 'themes/services/api/RoomService';\r\nimport _ from 'lodash';\r\nimport to from 'await-to-js'\r\nimport useBaseHook from 'themes/hooks/BaseHooks'\r\nimport { DeleteFilled, SaveFilled, LeftCircleFilled, CopyFilled } from '@ant-design/icons';\r\nimport usePermissionHook from \"themes/hooks/PermissionHook\";\r\n\r\nconst { Option } = Select\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 4 },\r\n  },\r\n  wrapperCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 18 },\r\n  },\r\n};\r\n\r\nconst formatCurrency = (value: any) =>`${value}`.replace(/[^0-9]+/g, \"\").replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\r\nconst parserCurrency = (value: any) =>value ? value.replace(/\\$\\s?|(,*)/g, \"\") : \"\"\r\n\r\nconst Edit = ({ groups, user }: { groups: UserGroup[], user: User }) => {\r\n  const { t, notify, redirect, setStore, getAuth, getStore } = useBaseHook();\r\n  const [loading, setLoading] = useState(false);\r\n  const [modalVisible, setModalVisible] = useState(false)\r\n  const [form] = Form.useForm();\r\n  const userService = new UserService()\r\n  const confirmRef = React.createRef<ConfirmDialog>()\r\n\r\n  const { checkPermission } = usePermissionHook();\r\n  const deletePer = checkPermission({\r\n    \"admin.users\": \"D\"\r\n  })\r\n  //submit form\r\n  const onFinish = async (values: any): Promise<void> => {\r\n    setLoading(true)\r\n    let { rePassword, ...otherValues } = values;\r\n    let [error, result]: any[] = await to(userService.edit({\r\n      id: user.id,\r\n      ...otherValues\r\n    }));\r\n    setLoading(false)\r\n\r\n    if (error) {\r\n      return notify(t(`errors:${error.code}`), t(error.message), 'error')\r\n    }\r\n    notify(t(\"message.recordUpdated\"))\r\n    redirect(\"frontend.admin.users.index\")\r\n  }\r\n\r\n  const onDelete = async (): Promise<void> => {\r\n    let [error, result]: any[] = await to(userService.delete({ ids: [user.id] }));\r\n\r\n    if (error) {\r\n      return notify(t(`errors:${error.code}`), t(`${error.message}`), 'error')\r\n    }\r\n    notify(t('message.recordDeleted'))\r\n    redirect(\"frontend.admin.users.index\")\r\n  }\r\n  const onChangePassword = async (data: any): Promise<void> => {\r\n    console.log(data)\r\n    setModalVisible(false)\r\n    let values = { id: user.id, password: data.password }\r\n\r\n    let [error, result]: any[] = await to(userService.updatePassword(values));\r\n    if (error) {\r\n      return notify(t(`errors:${error.code}`), t(error.message), 'error')\r\n    }\r\n\r\n    notify(t(\"message.recordUpdated\"))\r\n  }\r\n\r\n  //validate input password\r\n  const validatorPassword = ({ getFieldValue }: { getFieldValue: Function }) => ({\r\n    validator: (rule: any, value: any) => {\r\n      if (!value || getFieldValue('password') === value) {\r\n        return Promise.resolve();\r\n      }\r\n      return Promise.reject(t('form.rePassword'));\r\n    }\r\n  })\r\n\r\n  //render option\r\n  const renderOption = (): JSX.Element[] => {\r\n    let result: JSX.Element[] = [];\r\n    groups.map(item => {\r\n      result.push(\r\n        <Option value={item.id} key={item.id}>{item.name}</Option>\r\n      )\r\n    })\r\n    return result;\r\n  }\r\n  const renderDeleteDialog = () => {\r\n    return (\r\n      <ConfirmDialog\r\n        ref={confirmRef}\r\n        onSubmit={onDelete}\r\n        title={t('deleteItem')}\r\n        content={t('message.deleteConfirm')}\r\n      />\r\n    )\r\n  }\r\n\r\n  const renderChangePassModal = () => {\r\n    const [formChangePassword] = Form.useForm()\r\n    return (<Form form={formChangePassword} name=\"formChangePassword\"\r\n      initialValues={{\r\n        password: \"\",\r\n        repassword: \"\",\r\n      }}\r\n      onFinish={onChangePassword}\r\n    >\r\n      <Modal\r\n        closable={false}\r\n        visible={modalVisible}\r\n        onCancel={() => setModalVisible(false)}\r\n        onOk={() => { formChangePassword.submit(); }}\r\n      >\r\n        <Form.Item\r\n          label={t(\"password\")}\r\n          labelCol={{ span: 5 }}\r\n          wrapperCol={{ span: 19 }}\r\n          name=\"password\"\r\n          rules={[\r\n            { required: true, message: t('form.required') }\r\n          ]}\r\n        >\r\n          <Input.Password\r\n            placeholder={t(\"password\")}\r\n            type=\"password\"\r\n            autoFocus={true}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label={t(\"rePassword\")}\r\n          labelCol={{ span: 5 }}\r\n          wrapperCol={{ span: 19 }}\r\n          name=\"repassword\"\r\n          rules={[\r\n            { required: true, message: t('form.required') },\r\n            validatorPassword\r\n          ]}\r\n        >\r\n          <Input.Password\r\n            placeholder={t(\"rePassword\")}\r\n          />\r\n        </Form.Item>\r\n      </Modal>\r\n    </Form>\r\n    )\r\n  }\r\n\r\n  return <Layout>\r\n    <div className=\"content\">\r\n      <Form\r\n        {...formItemLayout}\r\n        form={form}\r\n        name=\"createUser\"\r\n        initialValues={{\r\n          fullname: user.fullname,\r\n          username: user.username,\r\n          email: user.email,\r\n          phone: user.phone,\r\n          groupId: user.groupId,\r\n          salary: user.salary\r\n        }}\r\n        onFinish={onFinish}\r\n        scrollToFirstError\r\n      >\r\n        <Form.Item\r\n          label={t(\"fullname\")}\r\n          name=\"fullname\"\r\n          rules={[\r\n            { required: true, message: t('form.required') },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label={t(\"username\")}\r\n          name=\"username\"\r\n          rules={[\r\n            { required: true, message: t('form.required'), whitespace: true },\r\n            { max: 15, message: t('form.maxLength', { length: 15 }) }\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label={t(\"email\")}\r\n          name=\"email\"\r\n          rules={[\r\n            { required: true, message: t('form.required') },\r\n            { type: 'email', message: t('form.email') }\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label={t(\"phone\")}\r\n          name=\"phone\"\r\n          rules={[\r\n            { required: true, message: t('form.required') },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label={t(\"userGroup\")}\r\n          name=\"groupId\"\r\n          rules={[\r\n          ]}\r\n        >\r\n          <Select>\r\n            {renderOption()}\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item\r\n            label={t(\"salary.salary\")}\r\n            name=\"salary\"\r\n          >\r\n            <InputNumber\r\n              style={{ width: \"100%\" }}\r\n              formatter={formatCurrency}\r\n              parser={parserCurrency}\r\n            />\r\n        </Form.Item>\r\n        <Form.Item wrapperCol={{ span: 24 }} style={{ textAlign: \"center\" }}>\r\n          <Button onClick={() => redirect(\"frontend.admin.users.index\")} style={{ marginRight: 8 }}>\r\n            <LeftCircleFilled /> {t('cancel')}\r\n          </Button>\r\n\r\n          <Button type=\"primary\" htmlType=\"submit\" loading={loading} style={{ marginRight: 8 }}>\r\n            <SaveFilled /> {t('submit')}\r\n          </Button>\r\n          <Button onClick={() => { setModalVisible(true) }} style={{ marginRight: 8 }}>\r\n            <CopyFilled /> {t('changePassword')}\r\n          </Button>\r\n          \r\n          <Button hidden={!deletePer} danger onClick={() => { if (confirmRef.current) confirmRef.current.show(user.id) }}>\r\n            <DeleteFilled /> {t('deleteItem')}\r\n          </Button>\r\n         \r\n        </Form.Item>\r\n      </Form>\r\n      {renderDeleteDialog()}\r\n      {renderChangePassModal()}\r\n    </div>\r\n  </Layout>\r\n}\r\n\r\nEdit.getInitialProps = async (ctx: any) => {\r\n  const userGroupService = new UserGroupService(ctx)\r\n  const userService = new UserService(ctx)\r\n  const query = ctx.query;\r\n  let error: any;\r\n\r\n  if (!query.id) {\r\n    //error missing id\r\n    error = {\r\n      code: 9996,\r\n      message: 'missing ID'\r\n    }\r\n  }\r\n\r\n  let [userError, user] = await to(userService.detail({ id: query.id }));\r\n  const [errorGroup, groups] = await to(userGroupService.index({ pageSize: -1 }));\r\n  return {\r\n    namespacesRequired: ['common', 'pages', 'menu'],\r\n    error: error,\r\n    user: user,\r\n    groups: _.get(groups, \"data\", []),\r\n  }\r\n}\r\nEdit.permissions = {\r\n  \"admin.users\": \"U\"\r\n};\r\nexport default Edit"]},"metadata":{},"sourceType":"module"}