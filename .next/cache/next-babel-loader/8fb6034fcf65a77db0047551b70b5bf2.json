{"ast":null,"code":"var _jsxFileName = \"E:\\\\DATN\\\\nursinghome\\\\pages\\\\admin\\\\beds\\\\edit.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport ConfirmDialog from 'themes/components/Dialogs/ConfirmDialog';\nimport React, { useState } from 'react';\nimport Layout from 'themes/layouts/Admin';\nimport { Button, Form, Input, Select, InputNumber, Radio } from 'antd';\nimport BedService from 'themes/services/api/BedService';\nimport RoomService from 'themes/services/api/RoomService';\nimport _ from 'lodash';\nimport to from 'await-to-js';\nimport useBaseHook from 'themes/hooks/BaseHooks';\nimport { DeleteFilled, SaveFilled, LeftCircleFilled } from '@ant-design/icons';\nimport usePermissionHook from \"themes/hooks/PermissionHook\";\nconst {\n  Option\n} = Select;\nconst formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 4\n    }\n  },\n  wrapperCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 18\n    }\n  }\n};\n\nconst Edit = ({\n  rooms,\n  bed,\n  bedError\n}) => {\n  const {\n    t,\n    notify,\n    redirect,\n    setStore,\n    getAuth,\n    getStore\n  } = useBaseHook();\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const [form] = Form.useForm();\n  const bedService = new BedService();\n  const confirmRef = React.createRef();\n  const {\n    checkPermission\n  } = usePermissionHook();\n  const deletePer = checkPermission({\n    \"admin.beds\": \"D\"\n  }); //submit form\n\n  const onFinish = async values => {\n    if (bedError) notify(t(`errors:${bedError.code}`), t(bedError.message), 'error');else {\n      setLoading(true);\n      let [error, result] = await to(bedService.edit({\n        id: bed.id,\n        values\n      }));\n      setLoading(false);\n\n      if (error) {\n        return notify(t(`errors:${error.code}`), t(error.message), 'error');\n      }\n\n      notify(t(\"message.recordUpdated\"));\n    }\n    redirect(\"frontend.admin.beds.index\");\n  };\n\n  const onDelete = async () => {\n    if (bedError) notify(t(`errors:${bedError.code}`), t(bedError.message), 'error');else {\n      let [error, result] = await to(bedService.delete({\n        ids: [bed.id]\n      }));\n\n      if (error) {\n        return notify(t(`errors:${error.code}`), t(`${error.message}`), 'error');\n      }\n\n      notify(t('message.recordDeleted'));\n    }\n    redirect(\"frontend.admin.beds.index\");\n  }; //render option\n\n\n  const renderOption = () => {\n    let result = [];\n    rooms.map(item => {\n      result.push(__jsx(Option, {\n        value: item.code,\n        key: item.code,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }\n      }, item.code, \" - (\", item.bedNumber, \" \", t('bed'), \")\"));\n    });\n    return result;\n  };\n\n  const renderDeleteDialog = () => {\n    return __jsx(ConfirmDialog, {\n      ref: confirmRef,\n      onSubmit: onDelete,\n      title: t('deleteItem'),\n      content: t('message.deleteConfirm'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }\n    });\n  };\n\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 10\n    }\n  }, __jsx(\"div\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }\n  }, __jsx(Form, _extends({}, formItemLayout, {\n    form: form,\n    name: \"createBed\",\n    initialValues: {\n      roomCode: bed.roomCode,\n      bedId: bed.bedId,\n      status: bed.status,\n      note: bed.note\n    },\n    onFinish: onFinish,\n    scrollToFirstError: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }), __jsx(Form.Item, {\n    label: t(\"room\"),\n    name: \"roomCode\",\n    rules: [{\n      required: true,\n      message: t('form.required')\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, __jsx(Select, {\n    showSearch: true,\n    placeholder: t('placeholder.room'),\n    filterOption: (input, option) => {\n      return option.children[0].toLowerCase().indexOf(input.toLowerCase()) >= 0;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, renderOption())), __jsx(Form.Item, {\n    label: t(\"beds.bedId\"),\n    name: \"bedId\",\n    rules: [{\n      required: true,\n      message: t('form.required')\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, __jsx(InputNumber, {\n    style: {\n      width: \"100%\"\n    },\n    min: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  })), __jsx(Form.Item, {\n    label: t(\"status\"),\n    name: \"status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }, __jsx(Radio.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 11\n    }\n  }, __jsx(Radio, {\n    value: 0,\n    key: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  }, t(\"beds.empty\")), __jsx(Radio, {\n    value: 1,\n    key: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }, t(\"beds.full\")))), __jsx(Form.Item, {\n    label: t(\"note\"),\n    name: \"note\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }\n  }, __jsx(Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 11\n    }\n  })), __jsx(Form.Item, {\n    wrapperCol: {\n      span: 24\n    },\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    onClick: () => redirect(\"frontend.admin.beds.index\"),\n    style: {\n      marginRight: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 11\n    }\n  }, __jsx(LeftCircleFilled, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }\n  }), \" \", t('cancel')), __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: loading,\n    style: {\n      marginRight: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 11\n    }\n  }, __jsx(SaveFilled, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  }), \" \", t('submit')), __jsx(Button, {\n    hidden: !deletePer,\n    danger: true,\n    onClick: () => {\n      if (confirmRef.current) confirmRef.current.show(bed.id);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 11\n    }\n  }, __jsx(DeleteFilled, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }\n  }), \" \", t('deleteItem')))), renderDeleteDialog()));\n};\n\nEdit.getInitialProps = async ctx => {\n  const roomService = new RoomService(ctx);\n  const bedService = new BedService(ctx);\n  const query = ctx.query;\n  let error;\n\n  if (!query.id) {\n    //error missing id\n    error = {\n      code: 9996,\n      message: 'missing ID'\n    };\n  }\n\n  let [bedError, bed] = await to(bedService.detail({\n    id: query.id\n  }));\n  if (bedError) bed = {};\n  const [errorRoom, rooms] = await to(roomService.index({\n    pageSize: -1\n  }));\n  return {\n    namespacesRequired: ['common', 'pages', 'menu', 'errors'],\n    error: error,\n    bedError: bedError,\n    bed: bed,\n    rooms: _.get(rooms, \"data\", [])\n  };\n};\n\nEdit.permissions = {\n  \"admin.beds\": \"U\"\n};\nexport default Edit;","map":{"version":3,"sources":["E:/DATN/nursinghome/pages/admin/beds/edit.tsx"],"names":["ConfirmDialog","React","useState","Layout","Button","Form","Input","Select","InputNumber","Radio","BedService","RoomService","_","to","useBaseHook","DeleteFilled","SaveFilled","LeftCircleFilled","usePermissionHook","Option","formItemLayout","labelCol","xs","span","sm","wrapperCol","Edit","rooms","bed","bedError","t","notify","redirect","setStore","getAuth","getStore","loading","setLoading","form","useForm","bedService","confirmRef","createRef","checkPermission","deletePer","onFinish","values","code","message","error","result","edit","id","onDelete","delete","ids","renderOption","map","item","push","bedNumber","renderDeleteDialog","roomCode","bedId","status","note","required","input","option","children","toLowerCase","indexOf","width","textAlign","marginRight","current","show","getInitialProps","ctx","roomService","query","detail","errorRoom","index","pageSize","namespacesRequired","get","permissions"],"mappings":"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","sourcesContent":["import ConfirmDialog from 'themes/components/Dialogs/ConfirmDialog';\r\n\r\nimport React, { useState } from 'react'\r\nimport Layout from 'themes/layouts/Admin'\r\nimport { Button, Row, Col, Form, Input, Select, Modal, InputNumber, Radio } from 'antd';\r\nimport BedService from 'themes/services/api/BedService';\r\nimport RoomService from 'themes/services/api/RoomService';\r\nimport _ from 'lodash';\r\nimport to from 'await-to-js'\r\nimport useBaseHook from 'themes/hooks/BaseHooks'\r\nimport { DeleteFilled, SaveFilled, LeftCircleFilled, CopyFilled } from '@ant-design/icons';\r\nimport usePermissionHook from \"themes/hooks/PermissionHook\";\r\n\r\nconst { Option } = Select\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 4 },\r\n  },\r\n  wrapperCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 18 },\r\n  },\r\n};\r\n\r\nconst Edit = ({ rooms, bed, bedError }: { rooms: Room[], bed: Bed, bedError: any }) => {\r\n  const { t, notify, redirect, setStore, getAuth, getStore } = useBaseHook();\r\n  const [loading, setLoading] = useState(false);\r\n  const [form] = Form.useForm();\r\n  const bedService = new BedService()\r\n  const confirmRef = React.createRef<ConfirmDialog>()\r\n\r\n  const { checkPermission } = usePermissionHook();\r\n  const deletePer = checkPermission({\r\n    \"admin.beds\": \"D\"\r\n  })\r\n\r\n  //submit form\r\n  const onFinish = async (values: any): Promise<void> => {\r\n    if(bedError) notify(t(`errors:${bedError.code}`), t(bedError.message), 'error')\r\n    else {\r\n      setLoading(true)\r\n      let [error, result]: any[] = await to(bedService.edit({\r\n        id: bed.id,\r\n        values\r\n      }));\r\n      setLoading(false)\r\n    \r\n      if (error) {\r\n        return notify(t(`errors:${error.code}`), t(error.message), 'error')\r\n      }\r\n\r\n      notify(t(\"message.recordUpdated\"))\r\n    }\r\n    redirect(\"frontend.admin.beds.index\")\r\n  }\r\n\r\n  const onDelete = async (): Promise<void> => {\r\n    if(bedError) notify(t(`errors:${bedError.code}`), t(bedError.message), 'error')\r\n    else {\r\n      let [error, result]: any[] = await to(bedService.delete({ ids: [bed.id] }));\r\n\r\n      if (error) {\r\n        return notify(t(`errors:${error.code}`), t(`${error.message}`), 'error')\r\n      }\r\n      notify(t('message.recordDeleted'))\r\n    }\r\n    redirect(\"frontend.admin.beds.index\")\r\n  }\r\n\r\n  //render option\r\n  const renderOption = (): JSX.Element[] => {\r\n    let result: JSX.Element[] = [];\r\n    rooms.map(item => {\r\n      result.push(\r\n        <Option value={item.code} key={item.code}>{item.code} - ({item.bedNumber} {t('bed')})</Option>\r\n      )\r\n    })\r\n    return result;\r\n  }\r\n  \r\n  const renderDeleteDialog = () => {\r\n    return (\r\n      <ConfirmDialog\r\n        ref={confirmRef}\r\n        onSubmit={onDelete}\r\n        title={t('deleteItem')}\r\n        content={t('message.deleteConfirm')}\r\n      />\r\n    )\r\n  }\r\n\r\n  return <Layout>\r\n    <div className=\"content\">\r\n      <Form\r\n        {...formItemLayout}\r\n        form={form}\r\n        name=\"createBed\"\r\n        initialValues={{\r\n          roomCode: bed.roomCode,\r\n          bedId: bed.bedId,\r\n          status: bed.status,\r\n          note: bed.note\r\n        }}\r\n        onFinish={onFinish}\r\n        scrollToFirstError\r\n      >\r\n        <Form.Item\r\n          label={t(\"room\")}\r\n          name=\"roomCode\"\r\n          rules={[\r\n            { required: true, message: t('form.required')}\r\n          ]}\r\n        >\r\n          <Select\r\n            showSearch\r\n            placeholder={t('placeholder.room')}\r\n            filterOption={(input: any, option: any) => {\r\n              return option.children[0].toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n            }}\r\n          >\r\n            {renderOption()}\r\n          </Select>\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={t(\"beds.bedId\")}\r\n          name=\"bedId\"\r\n          rules={[\r\n            { required: true, message: t('form.required') },\r\n          ]}\r\n        >\r\n          <InputNumber  style={{ width: \"100%\" }} min={1} />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={t(\"status\")}\r\n          name=\"status\"\r\n        >\r\n          <Radio.Group>\r\n            <Radio value={0} key={0}>{t(\"beds.empty\")}</Radio>\r\n            <Radio value={1} key={1}>{t(\"beds.full\")}</Radio>\r\n          </Radio.Group>\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={t(\"note\")}\r\n          name=\"note\"\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item wrapperCol={{ span: 24 }} style={{ textAlign: \"center\" }}>\r\n          <Button onClick={() => redirect(\"frontend.admin.beds.index\")} style={{ marginRight: 8 }}>\r\n            <LeftCircleFilled /> {t('cancel')}\r\n          </Button>\r\n\r\n          <Button type=\"primary\" htmlType=\"submit\" loading={loading} style={{ marginRight: 8 }}>\r\n            <SaveFilled /> {t('submit')}\r\n          </Button>\r\n          \r\n          <Button hidden={!deletePer} danger onClick={() => { \r\n              if (confirmRef.current) confirmRef.current.show(bed.id) \r\n            }}>\r\n            <DeleteFilled /> {t('deleteItem')}\r\n          </Button>\r\n         \r\n        </Form.Item>\r\n      </Form>\r\n      {renderDeleteDialog()}\r\n    </div>\r\n  </Layout>\r\n}\r\n\r\nEdit.getInitialProps = async (ctx: any) => {\r\n  const roomService = new RoomService(ctx)\r\n  const bedService = new BedService(ctx)\r\n  const query = ctx.query;\r\n  let error: any;\r\n\r\n  if (!query.id) {\r\n    //error missing id\r\n    error = {\r\n      code: 9996,\r\n      message: 'missing ID'\r\n    }\r\n  }\r\n\r\n  let [bedError, bed] = await to(bedService.detail({ id: query.id }));\r\n  if(bedError) bed = {}\r\n  const [errorRoom, rooms] = await to(roomService.index({ pageSize: -1 }));\r\n  return {\r\n    namespacesRequired: ['common', 'pages', 'menu','errors'],\r\n    error: error,\r\n    bedError: bedError,\r\n    bed: bed,\r\n    rooms: _.get(rooms, \"data\", []),\r\n  }\r\n}\r\nEdit.permissions = {\r\n  \"admin.beds\": \"U\"\r\n};\r\nexport default Edit"]},"metadata":{},"sourceType":"module"}