{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport ConfirmDialog from 'themes/components/Dialogs/ConfirmDialog';\nimport React, { useState } from 'react';\nimport Layout from 'themes/layouts/Admin';\nimport { Button, Form, Input, Select, InputNumber } from 'antd';\nimport RoomService from 'themes/services/api/RoomService';\nimport to from 'await-to-js';\nimport useBaseHook from 'themes/hooks/BaseHooks';\nimport { DeleteFilled, SaveFilled, LeftCircleFilled } from '@ant-design/icons';\nimport usePermissionHook from \"themes/hooks/PermissionHook\";\nconst {\n  Option\n} = Select;\nconst formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 4\n    }\n  },\n  wrapperCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 18\n    }\n  }\n};\n\nconst Edit = ({\n  room,\n  roomError\n}) => {\n  const {\n    t,\n    notify,\n    redirect,\n    setStore,\n    getAuth,\n    getStore\n  } = useBaseHook();\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const [form] = Form.useForm();\n  const roomService = new RoomService();\n  const confirmRef = React.createRef();\n  const {\n    checkPermission\n  } = usePermissionHook();\n  const deletePer = checkPermission({\n    \"admin.rooms\": \"D\"\n  });\n\n  const DisplayError = err => {\n    return notify(t(`errors:${err.code}`), t(err.message), 'error');\n  }; //submit form\n\n\n  const onFinish = async values => {\n    if (roomError) return DisplayError(roomError);\n    setLoading(true);\n    let [error, result] = await to(roomService.edit({\n      id: room.id,\n      values\n    }));\n    setLoading(false);\n    if (error) return DisplayError(error);\n    notify(t(\"message.recordUpdated\"));\n    redirect(\"frontend.admin.rooms.index\");\n  };\n\n  const onDelete = async () => {\n    if (roomError) return DisplayError(roomError);\n    let [error, result] = await to(roomService.delete({\n      ids: [room.id]\n    }));\n    if (error) return DisplayError(error);\n    notify(t('message.recordDeleted'));\n    redirect(\"frontend.admin.rooms.index\");\n  };\n\n  const renderDeleteDialog = () => {\n    return __jsx(ConfirmDialog, {\n      ref: confirmRef,\n      onSubmit: onDelete,\n      title: t('deleteItem'),\n      content: t('message.deleteConfirm')\n    });\n  };\n\n  return __jsx(Layout, null, __jsx(\"div\", {\n    className: \"content\"\n  }, __jsx(Form, _extends({}, formItemLayout, {\n    form: form,\n    name: \"createRoom\",\n    initialValues: {\n      code: room.code,\n      bedNumber: room.bedNumber,\n      note: room.note\n    },\n    onFinish: onFinish,\n    scrollToFirstError: true\n  }), __jsx(Form.Item, {\n    label: t(\"code\"),\n    name: \"code\",\n    rules: [{\n      required: true,\n      message: t('form.required')\n    }]\n  }, __jsx(Input, null)), __jsx(Form.Item, {\n    label: t(\"rooms.bedNumber\"),\n    name: \"bedNumber\",\n    rules: [{\n      required: true,\n      message: t('form.required')\n    }]\n  }, __jsx(InputNumber, {\n    style: {\n      width: \"100%\"\n    },\n    min: 0,\n    max: 100\n  })), __jsx(Form.Item, {\n    label: t(\"note\"),\n    name: \"note\"\n  }, __jsx(Input, null)), __jsx(Form.Item, {\n    wrapperCol: {\n      span: 24\n    },\n    style: {\n      textAlign: \"center\"\n    }\n  }, __jsx(Button, {\n    onClick: () => redirect(\"frontend.admin.rooms.index\"),\n    style: {\n      marginRight: 8\n    }\n  }, __jsx(LeftCircleFilled, null), \" \", t('cancel')), __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: loading,\n    style: {\n      marginRight: 8\n    }\n  }, __jsx(SaveFilled, null), \" \", t('submit')), __jsx(Button, {\n    hidden: !deletePer,\n    danger: true,\n    onClick: () => {\n      if (confirmRef.current) confirmRef.current.show(room.id);\n    }\n  }, __jsx(DeleteFilled, null), \" \", t('deleteItem')))), renderDeleteDialog()));\n};\n\nEdit.getInitialProps = async ctx => {\n  const roomService = new RoomService(ctx);\n  const query = ctx.query;\n  let error;\n\n  if (!query.id) {\n    //error missing id\n    error = {\n      code: 9996,\n      message: 'missing ID'\n    };\n  }\n\n  let [roomError, room] = await to(roomService.detail({\n    id: query.id\n  }));\n  if (roomError) room = {};\n  return {\n    namespacesRequired: ['common', 'pages', 'menu', 'errors'],\n    error: error,\n    room: room,\n    roomError: roomError\n  };\n};\n\nEdit.permissions = {\n  \"admin.rooms\": \"U\"\n};\nexport default Edit;","map":{"version":3,"sources":["E:/nursinghome_github/pages/admin/rooms/edit.tsx"],"names":["ConfirmDialog","React","useState","Layout","Button","Form","Input","Select","InputNumber","RoomService","to","useBaseHook","DeleteFilled","SaveFilled","LeftCircleFilled","usePermissionHook","Option","formItemLayout","labelCol","xs","span","sm","wrapperCol","Edit","room","roomError","t","notify","redirect","setStore","getAuth","getStore","loading","setLoading","form","useForm","roomService","confirmRef","createRef","checkPermission","deletePer","DisplayError","err","code","message","onFinish","values","error","result","edit","id","onDelete","delete","ids","renderDeleteDialog","bedNumber","note","required","width","textAlign","marginRight","current","show","getInitialProps","ctx","query","detail","namespacesRequired","permissions"],"mappings":"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","sourcesContent":["import ConfirmDialog from 'themes/components/Dialogs/ConfirmDialog';\r\n\r\nimport React, { useState } from 'react'\r\nimport Layout from 'themes/layouts/Admin'\r\nimport { Button, Row, Col, Form, Input, Select, Modal, InputNumber } from 'antd';\r\nimport RoomService from 'themes/services/api/RoomService';\r\nimport _ from 'lodash';\r\nimport to from 'await-to-js'\r\nimport useBaseHook from 'themes/hooks/BaseHooks'\r\nimport { DeleteFilled, SaveFilled, LeftCircleFilled, CopyFilled } from '@ant-design/icons';\r\nimport usePermissionHook from \"themes/hooks/PermissionHook\";\r\n\r\nconst { Option } = Select\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 4 },\r\n  },\r\n  wrapperCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 18 },\r\n  },\r\n};\r\n\r\nconst Edit = ({ room, roomError }: { room: Room, roomError: any }) => {\r\n  const { t, notify, redirect, setStore, getAuth, getStore } = useBaseHook();\r\n  const [loading, setLoading] = useState(false);\r\n  const [form] = Form.useForm();\r\n  const roomService = new RoomService()\r\n  const confirmRef = React.createRef<ConfirmDialog>()\r\n\r\n  const { checkPermission } = usePermissionHook();\r\n  const deletePer = checkPermission({\r\n    \"admin.rooms\": \"D\"\r\n  })\r\n  const DisplayError = (err: any) => {\r\n    return notify(t(`errors:${err.code}`), t(err.message), 'error')\r\n  }\r\n  //submit form\r\n  const onFinish = async (values: any): Promise<void> => {\r\n    if(roomError) return DisplayError(roomError)\r\n    setLoading(true)\r\n    let [error, result]: any[] = await to(roomService.edit({\r\n      id: room.id,\r\n      values\r\n    }));\r\n    setLoading(false)\r\n    if(error) return DisplayError(error)\r\n    notify(t(\"message.recordUpdated\"))\r\n    redirect(\"frontend.admin.rooms.index\")\r\n  }\r\n\r\n  const onDelete = async (): Promise<void> => {\r\n    if(roomError) return DisplayError(roomError)\r\n    let [error, result]: any[] = await to(roomService.delete({ ids: [room.id] }));\r\n    if(error) return DisplayError(error)\r\n    notify(t('message.recordDeleted'))\r\n    redirect(\"frontend.admin.rooms.index\")\r\n  }\r\n\r\n  const renderDeleteDialog = () => {\r\n    return (\r\n      <ConfirmDialog\r\n        ref={confirmRef}\r\n        onSubmit={onDelete}\r\n        title={t('deleteItem')}\r\n        content={t('message.deleteConfirm')}\r\n      />\r\n    )\r\n  }\r\n\r\n  return <Layout>\r\n    <div className=\"content\">\r\n      <Form\r\n        {...formItemLayout}\r\n        form={form}\r\n        name=\"createRoom\"\r\n        initialValues={{\r\n          code: room.code,\r\n          bedNumber: room.bedNumber,\r\n          note: room.note\r\n        }}\r\n        onFinish={onFinish}\r\n        scrollToFirstError\r\n      >\r\n        <Form.Item\r\n          label={t(\"code\")}\r\n          name=\"code\"\r\n          rules={[\r\n            { required: true, message: t('form.required') },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label={t(\"rooms.bedNumber\")}\r\n          name=\"bedNumber\"\r\n          rules={[\r\n            { required: true, message: t('form.required') },\r\n          ]}\r\n        >\r\n          <InputNumber style={{ width: \"100%\" }} min={0} max={100} />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label={t(\"note\")}\r\n          name=\"note\"\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item wrapperCol={{ span: 24 }} style={{ textAlign: \"center\" }}>\r\n          <Button onClick={() => redirect(\"frontend.admin.rooms.index\")} style={{ marginRight: 8 }}>\r\n            <LeftCircleFilled /> {t('cancel')}\r\n          </Button>\r\n\r\n          <Button type=\"primary\" htmlType=\"submit\" loading={loading} style={{ marginRight: 8 }}>\r\n            <SaveFilled /> {t('submit')}\r\n          </Button>\r\n          <Button hidden={!deletePer} danger onClick={() => { if (confirmRef.current) confirmRef.current.show(room.id) }}>\r\n            <DeleteFilled /> {t('deleteItem')}\r\n          </Button>\r\n         \r\n        </Form.Item>\r\n      </Form>\r\n      {renderDeleteDialog()}\r\n    </div>\r\n  </Layout>\r\n}\r\n\r\nEdit.getInitialProps = async (ctx: any) => {\r\n  const roomService = new RoomService(ctx)\r\n  const query = ctx.query;\r\n  let error: any;\r\n\r\n  if (!query.id) {\r\n    //error missing id\r\n    error = {\r\n      code: 9996,\r\n      message: 'missing ID'\r\n    }\r\n  }\r\n\r\n  let [roomError, room] = await to(roomService.detail({ id: query.id }));\r\n  if(roomError) room = {}\r\n  return {\r\n    namespacesRequired: ['common', 'pages', 'menu','errors'],\r\n    error: error,\r\n    room: room,\r\n    roomError: roomError\r\n  }\r\n}\r\nEdit.permissions = {\r\n  \"admin.rooms\": \"U\"\r\n};\r\nexport default Edit"]},"metadata":{},"sourceType":"module"}