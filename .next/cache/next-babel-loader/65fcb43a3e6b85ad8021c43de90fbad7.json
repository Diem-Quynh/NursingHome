{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { Breadcrumb } from \"antd\";\nimport { getBreadcrumbs, route as makeUrl } from 'themes/route';\nimport Link from 'next/link';\nimport _routes from 'themes/_routes.json';\nimport useBaseHook from 'themes/hooks/BaseHooks';\nimport { HomeFilled } from \"@ant-design/icons\";\n\nconst breadCrumbComponent = () => {\n  const {\n    router,\n    t,\n    redirect\n  } = useBaseHook({\n    lang: ['menu']\n  });\n\n  const getRouteName = () => {\n    const routePath = router.pathname;\n    const routeData = _routes;\n\n    for (let routeName in routeData) {\n      let routeElement = routeData[routeName];\n      if (!routeElement.action) continue;\n      if (routeElement.action.substr(5) === routePath) return routeName;\n    }\n  };\n\n  let breadCumbs = [];\n  const routeName = getRouteName();\n  let routes = getBreadcrumbs(routeName);\n\n  if (routes[0] && routes[0].name != \"frontend.admin.home\") {\n    routes.unshift({\n      name: 'frontend.admin.home'\n    });\n  }\n\n  for (let route of routes) {\n    try {\n      let linkProps = makeUrl(route.name);\n      breadCumbs.push(__jsx(Breadcrumb.Item, {\n        key: route.name\n      }, __jsx(Link, linkProps, __jsx(\"a\", null, route.name == \"frontend.admin.home\" ? __jsx(HomeFilled, null) : t(route.name)))));\n    } catch (e) {\n      breadCumbs.push(__jsx(Breadcrumb.Item, {\n        key: route.name\n      }, t(route.name)));\n    }\n  }\n\n  return __jsx(Breadcrumb, null, breadCumbs);\n};\n\nexport default breadCrumbComponent;","map":{"version":3,"sources":["E:/nursinghome_github/themes/components/Breadcumb/index.tsx"],"names":["Breadcrumb","getBreadcrumbs","route","makeUrl","Link","_routes","useBaseHook","HomeFilled","breadCrumbComponent","router","t","redirect","lang","getRouteName","routePath","pathname","routeData","routeName","routeElement","action","substr","breadCumbs","routes","name","unshift","linkProps","push","e"],"mappings":";;AAAA,SAASA,UAAT,QAA2B,MAA3B;AACA,SAASC,cAAT,EAAyBC,KAAK,IAAIC,OAAlC,QAAiD,cAAjD;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,SAASC,UAAT,QAA2B,mBAA3B;;AAKA,MAAMC,mBAAmB,GAAG,MAAM;AAC9B,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,CAAV;AAAaC,IAAAA;AAAb,MAA0BL,WAAW,CAAC;AAAEM,IAAAA,IAAI,EAAE,CAAC,MAAD;AAAR,GAAD,CAA3C;;AACA,QAAMC,YAAY,GAAG,MAAM;AACvB,UAAMC,SAAS,GAAGL,MAAM,CAACM,QAAzB;AACA,UAAMC,SAAc,GAAGX,OAAvB;;AACA,SAAK,IAAIY,SAAT,IAAsBD,SAAtB,EAAiC;AAC7B,UAAIE,YAAY,GAAGF,SAAS,CAACC,SAAD,CAA5B;AACA,UAAI,CAACC,YAAY,CAACC,MAAlB,EAA0B;AAC1B,UAAID,YAAY,CAACC,MAAb,CAAoBC,MAApB,CAA2B,CAA3B,MAAkCN,SAAtC,EAAiD,OAAOG,SAAP;AACpD;AACJ,GARD;;AASA,MAAII,UAAU,GAAG,EAAjB;AACA,QAAMJ,SAAS,GAAGJ,YAAY,EAA9B;AACA,MAAIS,MAAe,GAAGrB,cAAc,CAACgB,SAAD,CAApC;;AACA,MAAIK,MAAM,CAAC,CAAD,CAAN,IAAaA,MAAM,CAAC,CAAD,CAAN,CAAUC,IAAV,IAAkB,qBAAnC,EAA0D;AACtDD,IAAAA,MAAM,CAACE,OAAP,CAAe;AACXD,MAAAA,IAAI,EAAE;AADK,KAAf;AAGH;;AACD,OAAK,IAAIrB,KAAT,IAAkBoB,MAAlB,EAA0B;AACtB,QAAI;AACA,UAAIG,SAAS,GAAGtB,OAAO,CAACD,KAAK,CAACqB,IAAP,CAAvB;AACAF,MAAAA,UAAU,CAACK,IAAX,CAAgB,MAAC,UAAD,CAAY,IAAZ;AAAiB,QAAA,GAAG,EAAExB,KAAK,CAACqB;AAA5B,SACZ,MAAC,IAAD,EAAUE,SAAV,EACI,iBAAKvB,KAAK,CAACqB,IAAN,IAAc,qBAAd,GAAsC,MAAC,UAAD,OAAtC,GAAuDb,CAAC,CAACR,KAAK,CAACqB,IAAP,CAA7D,CADJ,CADY,CAAhB;AAKH,KAPD,CAQA,OAAMI,CAAN,EAAS;AACLN,MAAAA,UAAU,CAACK,IAAX,CAAgB,MAAC,UAAD,CAAY,IAAZ;AAAiB,QAAA,GAAG,EAAExB,KAAK,CAACqB;AAA5B,SACXb,CAAC,CAACR,KAAK,CAACqB,IAAP,CADU,CAAhB;AAGH;AACJ;;AAED,SAAO,MAAC,UAAD,QAAaF,UAAb,CAAP;AAEH,CArCD;;AAuCA,eAAeb,mBAAf","sourcesContent":["import { Breadcrumb } from \"antd\"\r\nimport { getBreadcrumbs, route as makeUrl } from 'themes/route'\r\nimport Link from 'next/link'\r\nimport _routes from 'themes/_routes.json'\r\nimport useBaseHook from 'themes/hooks/BaseHooks'\r\nimport { HomeFilled } from \"@ant-design/icons\"\r\ninterface Route {\r\n    name: string,\r\n}\r\n\r\nconst breadCrumbComponent = () => {\r\n    const { router, t, redirect } = useBaseHook({ lang: ['menu'] })\r\n    const getRouteName = () => {\r\n        const routePath = router.pathname\r\n        const routeData: any = _routes\r\n        for (let routeName in routeData) {\r\n            let routeElement = routeData[routeName]\r\n            if (!routeElement.action) continue;\r\n            if (routeElement.action.substr(5) === routePath) return routeName\r\n        }\r\n    }\r\n    let breadCumbs = []\r\n    const routeName = getRouteName()\r\n    let routes: Route[] = getBreadcrumbs(routeName)\r\n    if (routes[0] && routes[0].name != \"frontend.admin.home\") {\r\n        routes.unshift({\r\n            name: 'frontend.admin.home',\r\n        })\r\n    }\r\n    for (let route of routes) {\r\n        try {\r\n            let linkProps = makeUrl(route.name)\r\n            breadCumbs.push(<Breadcrumb.Item key={route.name}>\r\n                <Link {...linkProps}>\r\n                    <a>{ route.name == \"frontend.admin.home\" ? <HomeFilled /> : t(route.name) }</a>\r\n                </Link>\r\n            </Breadcrumb.Item>)\r\n        }\r\n        catch(e) {\r\n            breadCumbs.push(<Breadcrumb.Item key={route.name}>\r\n                {t(route.name)}\r\n            </Breadcrumb.Item>)\r\n        }\r\n    }\r\n\r\n    return <Breadcrumb>{breadCumbs}</Breadcrumb>\r\n\r\n}\r\n\r\nexport default breadCrumbComponent"]},"metadata":{},"sourceType":"module"}