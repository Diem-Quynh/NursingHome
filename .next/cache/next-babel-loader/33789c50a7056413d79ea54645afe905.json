{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\DATN\\\\nursinghome\\\\pages\\\\admin\\\\users\\\\create.tsx\";\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport Layout from 'themes/layouts/Admin';\nimport { Button, Form, Input, Select, InputNumber } from 'antd';\nimport UserService from 'themes/services/api/UserService';\nimport UserGroupService from 'themes/services/api/UserGroupService';\nimport _ from 'lodash';\nimport to from 'await-to-js';\nimport useBaseHook from 'themes/hooks/BaseHooks';\nimport { DeleteFilled, LeftCircleFilled } from '@ant-design/icons';\nvar Option = Select.Option;\nvar formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 4\n    }\n  },\n  wrapperCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 18\n    }\n  }\n};\n\nvar formatCurrency = function formatCurrency(value) {\n  return \"\".concat(value).replace(/[^0-9]+/g, \"\").replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n};\n\nvar parserCurrency = function parserCurrency(value) {\n  return value ? value.replace(/\\$\\s?|(,*)/g, \"\") : \"\";\n};\n\nvar Create = function Create(_ref) {\n  var groups = _ref.groups;\n\n  var _useBaseHook = useBaseHook(),\n      t = _useBaseHook.t,\n      notify = _useBaseHook.notify,\n      redirect = _useBaseHook.redirect,\n      setStore = _useBaseHook.setStore,\n      getAuth = _useBaseHook.getAuth,\n      getStore = _useBaseHook.getStore;\n\n  var _useState = useState(false),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  var _Form$useForm = Form.useForm(),\n      _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n      form = _Form$useForm2[0];\n\n  var userService = new UserService(); //submit form\n\n  var onFinish = function onFinish(values) {\n    var rePassword, otherValues, _await$to, _await$to2, error, result;\n\n    return _regeneratorRuntime.async(function onFinish$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setLoading(true);\n            rePassword = values.rePassword, otherValues = _objectWithoutProperties(values, [\"rePassword\"]);\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(to(userService.create(otherValues)));\n\n          case 4:\n            _await$to = _context.sent;\n            _await$to2 = _slicedToArray(_await$to, 2);\n            error = _await$to2[0];\n            result = _await$to2[1];\n            setLoading(false);\n\n            if (!error) {\n              _context.next = 11;\n              break;\n            }\n\n            return _context.abrupt(\"return\", notify(t(\"errors:\".concat(error.code)), t(error.message), 'error'));\n\n          case 11:\n            notify(t(\"message.recordCreated\"));\n            redirect(\"frontend.admin.users.index\");\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }; //validate input password\n\n\n  var validatorPassword = function validatorPassword(_ref2) {\n    var getFieldValue = _ref2.getFieldValue;\n    return {\n      validator: function validator(rule, value) {\n        if (!value || getFieldValue('password') === value) {\n          return Promise.resolve();\n        }\n\n        return Promise.reject(t('form.rePassword'));\n      }\n    };\n  }; //render option\n\n\n  var renderOption = function renderOption() {\n    var result = [];\n    groups.map(function (item) {\n      result.push(__jsx(Option, {\n        value: item.id,\n        key: item.id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }\n      }, item.name));\n    });\n    return result;\n  };\n\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 10\n    }\n  }, __jsx(\"div\", {\n    className: \"content\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, __jsx(Form, _extends({}, formItemLayout, {\n    form: form,\n    name: \"createUser\",\n    initialValues: {\n      fullname: \"\",\n      username: \"\",\n      email: \"\",\n      phone: \"\",\n      password: \"\",\n      rePassword: \"\",\n      groupId: \"\",\n      salary: \"\"\n    },\n    onFinish: onFinish,\n    scrollToFirstError: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }), __jsx(Form.Item, {\n    label: t(\"fullname\"),\n    name: \"fullname\",\n    rules: [{\n      required: true,\n      message: t('form.required')\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, __jsx(Input, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  })), __jsx(Form.Item, {\n    label: t(\"username\"),\n    name: \"username\",\n    rules: [{\n      required: true,\n      message: t('form.required'),\n      whitespace: true\n    }, {\n      max: 15,\n      message: t('form.maxLength', {\n        length: 15\n      })\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, __jsx(Input, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  })), __jsx(Form.Item, {\n    label: t(\"email\"),\n    name: \"email\",\n    rules: [{\n      required: true,\n      message: t('form.required')\n    }, {\n      type: 'email',\n      message: t('form.email')\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, __jsx(Input, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  })), __jsx(Form.Item, {\n    label: t(\"phone\"),\n    name: \"phone\",\n    rules: [{\n      required: true,\n      message: t('form.required')\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, __jsx(Input, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  })), __jsx(Form.Item, {\n    label: t(\"password\"),\n    name: \"password\",\n    rules: [{\n      required: true,\n      message: t('form.required')\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, __jsx(Input.Password, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  })), __jsx(Form.Item, {\n    label: t(\"rePassword\"),\n    name: \"rePassword\",\n    rules: [{\n      required: true,\n      message: t('form.required')\n    }, validatorPassword],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }, __jsx(Input.Password, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 11\n    }\n  })), __jsx(Form.Item, {\n    label: t(\"userGroup\"),\n    name: \"groupId\",\n    rules: [{\n      required: true,\n      message: t('form.required')\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }, __jsx(Select, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 11\n    }\n  }, renderOption())), __jsx(Form.Item, {\n    label: t(\"salary.salary\"),\n    name: \"salary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }\n  }, __jsx(InputNumber, {\n    style: {\n      width: \"100%\"\n    },\n    formatter: formatCurrency,\n    parser: parserCurrency,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  })), __jsx(Form.Item, {\n    wrapperCol: {\n      span: 24\n    },\n    style: {\n      textAlign: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    onClick: function onClick() {\n      return redirect(\"frontend.admin.users.index\");\n    },\n    style: {\n      marginRight: 8\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 11\n    }\n  }, __jsx(LeftCircleFilled, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }\n  }), \" \", t('cancel')), __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: loading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 11\n    }\n  }, __jsx(DeleteFilled, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }\n  }), \" \", t('submit'))))));\n};\n\nCreate.getInitialProps = function _callee(ctx) {\n  var userGroupService, _await$to3, _await$to4, error, groups;\n\n  return _regeneratorRuntime.async(function _callee$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          userGroupService = new UserGroupService(ctx);\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(to(userGroupService.index({\n            pageSize: -1\n          })));\n\n        case 3:\n          _await$to3 = _context2.sent;\n          _await$to4 = _slicedToArray(_await$to3, 2);\n          error = _await$to4[0];\n          groups = _await$to4[1];\n          return _context2.abrupt(\"return\", {\n            namespacesRequired: ['common', 'pages', 'menu'],\n            error: error,\n            groups: _.get(groups, \"data\", [])\n          });\n\n        case 8:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nCreate.permissions = {\n  \"admin.users\": \"C\"\n};\nexport default Create;","map":{"version":3,"sources":["E:/DATN/nursinghome/pages/admin/users/create.tsx"],"names":["React","useState","Layout","Button","Form","Input","Select","InputNumber","UserService","UserGroupService","_","to","useBaseHook","DeleteFilled","LeftCircleFilled","Option","formItemLayout","labelCol","xs","span","sm","wrapperCol","formatCurrency","value","replace","parserCurrency","Create","groups","t","notify","redirect","setStore","getAuth","getStore","loading","setLoading","useForm","form","userService","onFinish","values","rePassword","otherValues","create","error","result","code","message","validatorPassword","getFieldValue","validator","rule","Promise","resolve","reject","renderOption","map","item","push","id","name","fullname","username","email","phone","password","groupId","salary","required","whitespace","max","length","type","width","textAlign","marginRight","getInitialProps","ctx","userGroupService","index","pageSize","namespacesRequired","get","permissions"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport Layout from 'themes/layouts/Admin'\r\nimport { Button, Row, Col, Form, Input, Select, InputNumber } from 'antd';\r\nimport UserService from 'themes/services/api/UserService';\r\nimport UserGroupService from 'themes/services/api/UserGroupService';\r\nimport _ from 'lodash';\r\nimport to from 'await-to-js'\r\nimport useBaseHook from 'themes/hooks/BaseHooks'\r\nimport { DeleteFilled, LeftCircleFilled } from '@ant-design/icons';\r\n\r\nconst { Option } = Select\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 4 },\r\n  },\r\n  wrapperCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 18 },\r\n  },\r\n};\r\n\r\nconst formatCurrency = (value: any) =>`${value}`.replace(/[^0-9]+/g, \"\").replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\r\nconst parserCurrency = (value: any) =>value ? value.replace(/\\$\\s?|(,*)/g, \"\") : \"\"\r\n\r\nconst Create = ({ groups }: { groups: UserGroup[] }) => {\r\n  const { t, notify, redirect, setStore, getAuth, getStore } = useBaseHook();\r\n  const [loading, setLoading] = useState(false);\r\n  const [form] = Form.useForm();\r\n  const userService = new UserService()\r\n  //submit form\r\n  const onFinish = async (values: any): Promise<void> => {\r\n    setLoading(true)\r\n    let { rePassword, ...otherValues } = values;\r\n    let [error, result]: any[] = await to(userService.create(otherValues));\r\n    setLoading(false)\r\n\r\n    if (error) {\r\n      return notify(t(`errors:${error.code}`), t(error.message), 'error')\r\n    }\r\n    notify(t(\"message.recordCreated\"))\r\n    redirect(\"frontend.admin.users.index\")\r\n  }\r\n\r\n  //validate input password\r\n  const validatorPassword = ({ getFieldValue }: { getFieldValue: Function }) => ({\r\n    validator: (rule: any, value: any) => {\r\n      if (!value || getFieldValue('password') === value) {\r\n        return Promise.resolve();\r\n      }\r\n      return Promise.reject(t('form.rePassword'));\r\n    }\r\n  })\r\n\r\n  //render option\r\n  const renderOption = (): JSX.Element[] => {\r\n    let result: JSX.Element[] = [];\r\n    groups.map(item => {\r\n      result.push(\r\n        <Option value={item.id} key={item.id}>{item.name}</Option>\r\n      )\r\n    })\r\n    return result;\r\n  }\r\n  \r\n  return <Layout>\r\n    <div className=\"content\">\r\n      <Form\r\n        {...formItemLayout}\r\n        form={form}\r\n        name=\"createUser\"\r\n        initialValues={{\r\n          fullname: \"\",\r\n          username: \"\",\r\n          email: \"\",\r\n          phone: \"\",\r\n          password: \"\",\r\n          rePassword: \"\",\r\n          groupId: \"\",\r\n          salary: \"\"\r\n        }}\r\n        onFinish={onFinish}\r\n        scrollToFirstError\r\n      >\r\n        <Form.Item\r\n          label={t(\"fullname\")}\r\n          name=\"fullname\"\r\n          rules={[\r\n            { required: true, message: t('form.required') },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label={t(\"username\")}\r\n          name=\"username\"\r\n          rules={[\r\n            { required: true, message: t('form.required'), whitespace: true },\r\n            { max: 15, message: t('form.maxLength', { length: 15 }) }\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label={t(\"email\")}\r\n          name=\"email\"\r\n          rules={[\r\n            { required: true, message: t('form.required') },\r\n            { type: 'email', message: t('form.email') }\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label={t(\"phone\")}\r\n          name=\"phone\"\r\n          rules={[\r\n            { required: true, message: t('form.required') },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label={t(\"password\")}\r\n          name=\"password\"\r\n          rules={[\r\n            { required: true, message: t('form.required') },\r\n          ]}\r\n        >\r\n          <Input.Password />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label={t(\"rePassword\")}\r\n          name=\"rePassword\"\r\n          rules={[\r\n            { required: true, message: t('form.required') },\r\n            validatorPassword\r\n          ]}\r\n        >\r\n          <Input.Password />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label={t(\"userGroup\")}\r\n          name=\"groupId\"\r\n          rules={[\r\n            { required: true, message: t('form.required') },\r\n          ]}\r\n        >\r\n          <Select>\r\n            {renderOption()}\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item\r\n            label={t(\"salary.salary\")}\r\n            name=\"salary\"\r\n          >\r\n            <InputNumber\r\n              style={{ width: \"100%\" }}\r\n              formatter={formatCurrency}\r\n              parser={parserCurrency}\r\n            />\r\n          </Form.Item>\r\n        <Form.Item wrapperCol={{ span: 24 }} style={{textAlign: \"center\"}}>\r\n          <Button onClick={() => redirect(\"frontend.admin.users.index\")} style={{ marginRight: 8}}>\r\n            <LeftCircleFilled /> {t('cancel')}\r\n          </Button>\r\n          <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\r\n            <DeleteFilled /> {t('submit')}\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  </Layout>\r\n}\r\n\r\nCreate.getInitialProps = async (ctx: any) => {\r\n  const userGroupService = new UserGroupService(ctx)\r\n  const [error, groups] = await to(userGroupService.index({ pageSize: -1 }));\r\n  return {\r\n    namespacesRequired: ['common', 'pages','menu'],\r\n    error: error,\r\n    groups: _.get(groups, \"data\", []),\r\n  }\r\n}\r\nCreate.permissions = {\r\n  \"admin.users\": \"C\"\r\n};\r\nexport default Create"]},"metadata":{},"sourceType":"module"}