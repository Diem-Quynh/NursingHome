{"ast":null,"code":"var _jsxFileName = \"E:\\\\DATN\\\\nursinghome\\\\pages\\\\admin\\\\beds\\\\edit.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport ConfirmDialog from 'themes/components/Dialogs/ConfirmDialog';\nimport React, { useState } from 'react';\nimport Layout from 'themes/layouts/Admin';\nimport { Button, Form, Input, Select, InputNumber, Radio } from 'antd';\nimport BedService from 'themes/services/api/BedService';\nimport RoomService from 'themes/services/api/RoomService';\nimport _ from 'lodash';\nimport to from 'await-to-js';\nimport useBaseHook from 'themes/hooks/BaseHooks';\nimport { DeleteFilled, SaveFilled, LeftCircleFilled } from '@ant-design/icons';\nimport usePermissionHook from \"themes/hooks/PermissionHook\";\nconst {\n  Option\n} = Select;\nconst formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 4\n    }\n  },\n  wrapperCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 18\n    }\n  }\n};\n\nconst formatCurrency = value => `${value}`.replace(/[^0-9]+/g, \"\").replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n\nconst parserCurrency = value => value ? value.replace(/\\$\\s?|(,*)/g, \"\") : \"\";\n\nconst Edit = ({\n  rooms,\n  bed\n}) => {\n  const {\n    t,\n    notify,\n    redirect,\n    setStore,\n    getAuth,\n    getStore\n  } = useBaseHook();\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: modalVisible,\n    1: setModalVisible\n  } = useState(false);\n  const [form] = Form.useForm();\n  const bedService = new BedService();\n  const confirmRef = React.createRef();\n  const {\n    checkPermission\n  } = usePermissionHook();\n  const deletePer = checkPermission({\n    \"admin.beds\": \"D\"\n  }); //submit form\n\n  const onFinish = async values => {\n    setLoading(true);\n    let [error, result] = await to(bedService.edit({\n      id: bed.id,\n      values\n    }));\n    setLoading(false);\n\n    if (error) {\n      return notify(t(`errors:${error.code}`), t(error.message), 'error');\n    }\n\n    notify(t(\"message.recordUpdated\"));\n    redirect(\"frontend.admin.beds.index\");\n  };\n\n  const onDelete = async () => {\n    let [error, result] = await to(bedService.delete({\n      ids: [bed.id]\n    }));\n\n    if (error) {\n      return notify(t(`errors:${error.code}`), t(`${error.message}`), 'error');\n    }\n\n    notify(t('message.recordDeleted'));\n    redirect(\"frontend.admin.beds.index\");\n  }; //render option\n\n\n  const renderOption = () => {\n    let result = [];\n    rooms.map(item => {\n      result.push(__jsx(Option, {\n        value: item.id,\n        key: item.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }\n      }, item.code));\n    });\n    return result;\n  };\n\n  const renderDeleteDialog = () => {\n    return __jsx(ConfirmDialog, {\n      ref: confirmRef,\n      onSubmit: onDelete,\n      title: t('deleteItem'),\n      content: t('message.deleteConfirm'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }\n    });\n  };\n\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 10\n    }\n  }, __jsx(\"div\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }\n  }, __jsx(Form, _extends({}, formItemLayout, {\n    form: form,\n    name: \"createBed\",\n    initialValues: {\n      roomId: \"\",\n      bedId: \"\",\n      status: \"\",\n      note: \"\"\n    },\n    onFinish: onFinish,\n    scrollToFirstError: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }), __jsx(Form.Item, {\n    label: t(\"beds.roomCode\"),\n    name: \"roomId\",\n    rules: [{\n      required: true,\n      message: t('form.required')\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, __jsx(Select, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }, renderOption())), __jsx(Form.Item, {\n    label: t(\"beds.bedId\"),\n    name: \"bedId\",\n    rules: [{\n      required: true,\n      message: t('form.required')\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, __jsx(InputNumber, {\n    style: {\n      width: \"100%\"\n    },\n    min: 1,\n    defaultValue: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  })), __jsx(Form.Item, {\n    label: t(\"status\"),\n    name: \"status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }, __jsx(Radio.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }\n  }, __jsx(Radio, {\n    value: 0,\n    key: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, t(\"beds.empty\")), __jsx(Radio, {\n    value: 1,\n    key: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, t(\"beds.full\")))), __jsx(Form.Item, {\n    label: t(\"note\"),\n    name: \"note\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, __jsx(Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  })), __jsx(Form.Item, {\n    wrapperCol: {\n      span: 24\n    },\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    onClick: () => redirect(\"frontend.admin.beds.index\"),\n    style: {\n      marginRight: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 11\n    }\n  }, __jsx(LeftCircleFilled, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }\n  }), \" \", t('cancel')), __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: loading,\n    style: {\n      marginRight: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 11\n    }\n  }, __jsx(SaveFilled, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  }), \" \", t('submit')), __jsx(Button, {\n    hidden: !deletePer,\n    danger: true,\n    onClick: () => {\n      if (confirmRef.current) confirmRef.current.show(bed.id);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 11\n    }\n  }, __jsx(DeleteFilled, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }), \" \", t('deleteItem')))), renderDeleteDialog()));\n};\n\nEdit.getInitialProps = async ctx => {\n  const roomService = new RoomService(ctx);\n  const bedService = new BedService(ctx);\n  const query = ctx.query;\n  let error;\n\n  if (!query.id) {\n    //error missing id\n    error = {\n      code: 9996,\n      message: 'missing ID'\n    };\n  }\n\n  let [bedError, bed] = await to(bedService.detail({\n    id: query.id\n  }));\n  const [errorRoom, rooms] = await to(roomService.index({\n    pageSize: -1\n  }));\n  return {\n    namespacesRequired: ['common', 'pages', 'menu'],\n    error: error,\n    bed: bed,\n    rooms: _.get(rooms, \"data\", [])\n  };\n};\n\nEdit.permissions = {\n  \"admin.beds\": \"U\"\n};\nexport default Edit;","map":{"version":3,"sources":["E:/DATN/nursinghome/pages/admin/beds/edit.tsx"],"names":["ConfirmDialog","React","useState","Layout","Button","Form","Input","Select","InputNumber","Radio","BedService","RoomService","_","to","useBaseHook","DeleteFilled","SaveFilled","LeftCircleFilled","usePermissionHook","Option","formItemLayout","labelCol","xs","span","sm","wrapperCol","formatCurrency","value","replace","parserCurrency","Edit","rooms","bed","t","notify","redirect","setStore","getAuth","getStore","loading","setLoading","modalVisible","setModalVisible","form","useForm","bedService","confirmRef","createRef","checkPermission","deletePer","onFinish","values","error","result","edit","id","code","message","onDelete","delete","ids","renderOption","map","item","push","renderDeleteDialog","roomId","bedId","status","note","required","width","textAlign","marginRight","current","show","getInitialProps","ctx","roomService","query","bedError","detail","errorRoom","index","pageSize","namespacesRequired","get","permissions"],"mappings":"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","sourcesContent":["import ConfirmDialog from 'themes/components/Dialogs/ConfirmDialog';\r\n\r\nimport React, { useState } from 'react'\r\nimport Layout from 'themes/layouts/Admin'\r\nimport { Button, Row, Col, Form, Input, Select, Modal, InputNumber, Radio } from 'antd';\r\nimport BedService from 'themes/services/api/BedService';\r\nimport RoomService from 'themes/services/api/RoomService';\r\nimport _ from 'lodash';\r\nimport to from 'await-to-js'\r\nimport useBaseHook from 'themes/hooks/BaseHooks'\r\nimport { DeleteFilled, SaveFilled, LeftCircleFilled, CopyFilled } from '@ant-design/icons';\r\nimport usePermissionHook from \"themes/hooks/PermissionHook\";\r\n\r\nconst { Option } = Select\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 4 },\r\n  },\r\n  wrapperCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 18 },\r\n  },\r\n};\r\n\r\nconst formatCurrency = (value: any) =>`${value}`.replace(/[^0-9]+/g, \"\").replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\r\nconst parserCurrency = (value: any) =>value ? value.replace(/\\$\\s?|(,*)/g, \"\") : \"\"\r\n\r\nconst Edit = ({ rooms, bed }: { rooms: Room[], bed: Bed }) => {\r\n  const { t, notify, redirect, setStore, getAuth, getStore } = useBaseHook();\r\n  const [loading, setLoading] = useState(false);\r\n  const [modalVisible, setModalVisible] = useState(false)\r\n  const [form] = Form.useForm();\r\n  const bedService = new BedService()\r\n  const confirmRef = React.createRef<ConfirmDialog>()\r\n\r\n  const { checkPermission } = usePermissionHook();\r\n  const deletePer = checkPermission({\r\n    \"admin.beds\": \"D\"\r\n  })\r\n  //submit form\r\n  const onFinish = async (values: any): Promise<void> => {\r\n    setLoading(true)\r\n    let [error, result]: any[] = await to(bedService.edit({\r\n      id: bed.id,\r\n      values\r\n    }));\r\n    setLoading(false)\r\n\r\n    if (error) {\r\n      return notify(t(`errors:${error.code}`), t(error.message), 'error')\r\n    }\r\n    notify(t(\"message.recordUpdated\"))\r\n    redirect(\"frontend.admin.beds.index\")\r\n  }\r\n\r\n  const onDelete = async (): Promise<void> => {\r\n    let [error, result]: any[] = await to(bedService.delete({ ids: [bed.id] }));\r\n\r\n    if (error) {\r\n      return notify(t(`errors:${error.code}`), t(`${error.message}`), 'error')\r\n    }\r\n    notify(t('message.recordDeleted'))\r\n    redirect(\"frontend.admin.beds.index\")\r\n  }\r\n\r\n  //render option\r\n  const renderOption = (): JSX.Element[] => {\r\n    let result: JSX.Element[] = [];\r\n    rooms.map(item => {\r\n      result.push(\r\n        <Option value={item.id} key={item.id}>{item.code}</Option>\r\n      )\r\n    })\r\n    return result;\r\n  }\r\n  const renderDeleteDialog = () => {\r\n    return (\r\n      <ConfirmDialog\r\n        ref={confirmRef}\r\n        onSubmit={onDelete}\r\n        title={t('deleteItem')}\r\n        content={t('message.deleteConfirm')}\r\n      />\r\n    )\r\n  }\r\n\r\n  return <Layout>\r\n    <div className=\"content\">\r\n      <Form\r\n        {...formItemLayout}\r\n        form={form}\r\n        name=\"createBed\"\r\n        initialValues={{\r\n          roomId: \"\",\r\n          bedId: \"\",\r\n          status: \"\",\r\n          note: \"\"\r\n        }}\r\n        onFinish={onFinish}\r\n        scrollToFirstError\r\n      >\r\n        <Form.Item\r\n          label={t(\"beds.roomCode\")}\r\n          name=\"roomId\"\r\n          rules={[\r\n            { required: true, message: t('form.required')}\r\n          ]}\r\n        >\r\n          <Select>\r\n            {renderOption()}\r\n          </Select>\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={t(\"beds.bedId\")}\r\n          name=\"bedId\"\r\n          rules={[\r\n            { required: true, message: t('form.required') },\r\n          ]}\r\n        >\r\n          <InputNumber  style={{ width: \"100%\" }} min={1} defaultValue={1} />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={t(\"status\")}\r\n          name=\"status\"\r\n        >\r\n          <Radio.Group>\r\n            <Radio value={0} key={0}>{t(\"beds.empty\")}</Radio>\r\n            <Radio value={1} key={1}>{t(\"beds.full\")}</Radio>\r\n          </Radio.Group>\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={t(\"note\")}\r\n          name=\"note\"\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item wrapperCol={{ span: 24 }} style={{ textAlign: \"center\" }}>\r\n          <Button onClick={() => redirect(\"frontend.admin.beds.index\")} style={{ marginRight: 8 }}>\r\n            <LeftCircleFilled /> {t('cancel')}\r\n          </Button>\r\n\r\n          <Button type=\"primary\" htmlType=\"submit\" loading={loading} style={{ marginRight: 8 }}>\r\n            <SaveFilled /> {t('submit')}\r\n          </Button>\r\n          \r\n          <Button hidden={!deletePer} danger onClick={() => { if (confirmRef.current) confirmRef.current.show(bed.id) }}>\r\n            <DeleteFilled /> {t('deleteItem')}\r\n          </Button>\r\n         \r\n        </Form.Item>\r\n      </Form>\r\n      {renderDeleteDialog()}\r\n    </div>\r\n  </Layout>\r\n}\r\n\r\nEdit.getInitialProps = async (ctx: any) => {\r\n  const roomService = new RoomService(ctx)\r\n  const bedService = new BedService(ctx)\r\n  const query = ctx.query;\r\n  let error: any;\r\n\r\n  if (!query.id) {\r\n    //error missing id\r\n    error = {\r\n      code: 9996,\r\n      message: 'missing ID'\r\n    }\r\n  }\r\n\r\n  let [bedError, bed] = await to(bedService.detail({ id: query.id }));\r\n  const [errorRoom, rooms] = await to(roomService.index({ pageSize: -1 }));\r\n  return {\r\n    namespacesRequired: ['common', 'pages', 'menu'],\r\n    error: error,\r\n    bed: bed,\r\n    rooms: _.get(rooms, \"data\", []),\r\n  }\r\n}\r\nEdit.permissions = {\r\n  \"admin.beds\": \"U\"\r\n};\r\nexport default Edit"]},"metadata":{},"sourceType":"module"}