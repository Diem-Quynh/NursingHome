{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\DATN\\\\nursinghome\\\\themes\\\\layouts\\\\admin\\\\Header.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { createRef, useEffect } from 'react';\nimport { Menu, Layout, Avatar, Button, Input, Popover, Row, Col, AutoComplete } from 'antd';\nimport { MenuUnfoldOutlined, MenuFoldOutlined, PoweroffOutlined, SettingFilled, UserOutlined } from '@ant-design/icons';\nimport ConfirmDialog from 'themes/components/Dialogs/ConfirmDialog';\nimport UserService from \"themes/services/api/UserService\";\nimport PatientService from \"themes/services/api/PatientService\";\nimport BedService from \"themes/services/api/BedService\";\nimport useBaseHook from 'themes/hooks/BaseHooks';\nimport Cookies from 'universal-cookie';\nimport to from 'await-to-js';\nimport _ from 'lodash';\nvar Header = Layout.Header;\nvar SubMenu = Menu.SubMenu;\nvar Search = Input.Search;\n\nvar AdminHeader = function AdminHeader(props) {\n  _s();\n\n  var _useBaseHook = useBaseHook(),\n      t = _useBaseHook.t,\n      notify = _useBaseHook.notify,\n      redirect = _useBaseHook.redirect,\n      setStore = _useBaseHook.setStore,\n      getAuth = _useBaseHook.getAuth,\n      getStore = _useBaseHook.getStore,\n      getCookies = _useBaseHook.getCookies,\n      getData = _useBaseHook.getData;\n\n  var userService = new UserService();\n  var patientService = new PatientService();\n  var bedService = new BedService();\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      patients = _React$useState2[0],\n      setPatients = _React$useState2[1];\n\n  var _React$useState3 = React.useState([]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      beds = _React$useState4[0],\n      setBeds = _React$useState4[1];\n\n  var _React$useState5 = React.useState([]),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      users = _React$useState6[0],\n      setUsers = _React$useState6[1];\n\n  var auth = getAuth() || {};\n  var cookieObject = getCookies();\n  var confirmRef = createRef();\n\n  var handleClickMenu = function handleClickMenu(e) {};\n\n  var redirectLogin = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var cookies;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              cookies = new Cookies(cookieObject);\n              _context.next = 3;\n              return cookies.remove('token', {\n                path: '/'\n              });\n\n            case 3:\n              _context.next = 5;\n              return cookies.remove('user', {\n                path: '/'\n              });\n\n            case 5:\n              _context.next = 7;\n              return redirect('frontend.admin.login');\n\n            case 7:\n              return _context.abrupt(\"return\", _context.sent);\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function redirectLogin() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    if (!cookieObject.token || !cookieObject.user) {\n      redirect('frontend.admin.login');\n    }\n  }, []);\n  var optionsPatients = [];\n  var optionsBeds = [];\n  var optionsUsers = [];\n\n  var onChangeSearch = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(value) {\n      var filterPatients, filterBeds, filterUsers, _yield$to, _yield$to2, errUsers, users, dataUsers, _yield$to3, _yield$to4, errPatients, patients, dataPatients, _yield$to5, _yield$to6, errBeds, beds, dataBeds;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              filterPatients = {\n                filters: [{\n                  field: \"fullname\",\n                  operator: \"contains\",\n                  value: value\n                }],\n                sorting: [],\n                pageSize: 5,\n                page: 0\n              };\n              filterBeds = {\n                filters: [{\n                  field: \"roomCode\",\n                  operator: \"contains\",\n                  value: value\n                }],\n                sorting: [],\n                pageSize: 5,\n                page: 0\n              };\n              filterUsers = {\n                filters: [{\n                  field: \"fullname\",\n                  operator: \"contains\",\n                  value: value\n                }],\n                sorting: [],\n                pageSize: 5,\n                page: 0\n              };\n              _context2.next = 5;\n              return to(userService.index(filterUsers));\n\n            case 5:\n              _yield$to = _context2.sent;\n              _yield$to2 = _slicedToArray(_yield$to, 2);\n              errUsers = _yield$to2[0];\n              users = _yield$to2[1];\n              dataUsers = _.get(users, \"data\", []);\n\n              if (dataUsers.length) {\n                setUsers(dataUsers);\n              }\n\n              _context2.next = 13;\n              return to(patientService.index(filterPatients));\n\n            case 13:\n              _yield$to3 = _context2.sent;\n              _yield$to4 = _slicedToArray(_yield$to3, 2);\n              errPatients = _yield$to4[0];\n              patients = _yield$to4[1];\n              dataPatients = _.get(patients, \"data\", []);\n\n              if (dataPatients.length) {\n                setPatients(dataPatients);\n              }\n\n              _context2.next = 21;\n              return to(bedService.index(filterBeds));\n\n            case 21:\n              _yield$to5 = _context2.sent;\n              _yield$to6 = _slicedToArray(_yield$to5, 2);\n              errBeds = _yield$to6[0];\n              beds = _yield$to6[1];\n              dataBeds = _.get(beds, \"data\", []);\n\n              if (dataBeds.length) {\n                setBeds(dataBeds);\n              }\n\n            case 27:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function onChangeSearch(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var onBlurSearch = function onBlurSearch() {\n    setUsers([]);\n    setBeds([]);\n    setPatients([]);\n  };\n\n  var renderConfirmDialog = function renderConfirmDialog() {\n    return __jsx(ConfirmDialog, {\n      ref: confirmRef,\n      onSubmit: redirectLogin,\n      title: t('signout'),\n      content: t('message.signoutConfirm'),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 7\n      }\n    });\n  };\n\n  var renderRightContent = function renderRightContent() {\n    return __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 12\n      }\n    }, __jsx(Button, {\n      icon: __jsx(PoweroffOutlined, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }\n      }),\n      type: \"link\",\n      className: \"header-btn\",\n      onClick: function onClick() {\n        if (confirmRef.current) confirmRef.current.show();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 7\n      }\n    }), __jsx(Button, {\n      icon: __jsx(SettingFilled, {\n        spin: true,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }\n      }),\n      type: \"link\",\n      className: \"header-btn\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 7\n      }\n    }));\n  };\n\n  var collapsed = props.collapsed,\n      onCollapseChange = props.onCollapseChange;\n  var menuIconProps = {\n    className: \"trigger\",\n    onClick: function onClick() {\n      return onCollapseChange(!collapsed);\n    }\n  };\n  var headerClass = \"header\";\n  if (collapsed) headerClass += ' collapsed';\n\n  var accountPopup = function accountPopup() {\n    return __jsx(React.Fragment, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 12\n      }\n    }, __jsx(\"div\", {\n      style: {\n        width: \"400px\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 7\n      }\n    }, __jsx(Row, {\n      gutter: [8, 8],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }\n    }, __jsx(Col, {\n      xs: 12,\n      md: 7,\n      lg: 7,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }\n    }, __jsx(\"div\", {\n      className: \"avatar\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }\n    }, __jsx(Avatar, {\n      icon: __jsx(UserOutlined, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 23\n        }\n      }),\n      src: \"\",\n      size: 100,\n      shape: \"square\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 15\n      }\n    }, auth.fullname))), __jsx(Col, {\n      xs: 12,\n      md: 17,\n      lg: 17,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }\n    }, __jsx(Row, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }\n    }, __jsx(\"b\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 15\n      }\n    }, t('username')), \": \", __jsx(\"i\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 39\n      }\n    }, auth.username)), __jsx(Row, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 13\n      }\n    }, __jsx(\"b\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 13\n      }\n    }, t('fullname')), \": \", __jsx(\"i\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 37\n      }\n    }, auth.fullname)), __jsx(Row, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 13\n      }\n    }, __jsx(\"b\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 15\n      }\n    }, t('email')), \": \", __jsx(\"i\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 36\n      }\n    }, auth.email ? auth.email : t(\"update\"))), __jsx(Row, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 13\n      }\n    }, __jsx(\"b\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 15\n      }\n    }, t('phone')), \": \", __jsx(\"i\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 36\n      }\n    }, auth.phone ? auth.phone : t(\"update\")))))));\n  };\n\n  var renderTitle = function renderTitle(title) {\n    return __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 7\n      }\n    }, title);\n  };\n\n  var renderItem = function renderItem(title, link) {\n    return {\n      value: title,\n      label: __jsx(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'space-between'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 9\n        }\n      }, title, __jsx(\"span\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }\n      }, link))\n    };\n  };\n\n  patients.map(function (item, index) {\n    optionsPatients.push(renderItem(\"\".concat(item.fullname), __jsx(\"a\", {\n      style: {\n        \"float\": 'right'\n      },\n      href: \"patients/\".concat(item.id, \"/edit\"),\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 7\n      }\n    }, \" Xem chi ti\\u1EBFt \")));\n  });\n  beds.map(function (item, index) {\n    optionsBeds.push(renderItem(\"\".concat(item.roomCode, \" - \").concat(item.bedId), __jsx(\"a\", {\n      style: {\n        \"float\": 'right'\n      },\n      href: \"beds/\".concat(item.id, \"/edit\"),\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 7\n      }\n    }, \" Xem chi ti\\u1EBFt \")));\n  });\n  users.map(function (item, index) {\n    optionsUsers.push(renderItem(\"\".concat(item.fullname, \" - \").concat(item.username), __jsx(\"a\", {\n      style: {\n        \"float\": 'right'\n      },\n      href: \"users/\".concat(item.id, \"/edit\"),\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 7\n      }\n    }, \" Xem chi ti\\u1EBFt \")));\n  });\n  var options = [{\n    label: renderTitle(t('patient')),\n    options: optionsPatients\n  }, {\n    label: renderTitle(t('bed')),\n    options: optionsBeds\n  }, {\n    label: renderTitle(t('employee')),\n    options: optionsUsers\n  }];\n\n  var renderSearch = function renderSearch() {\n    return __jsx(\"div\", {\n      style: {\n        height: \"900px\",\n        display: 'inline'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 7\n      }\n    }, __jsx(AutoComplete, {\n      dropdownClassName: \"certain-category-search-dropdown\",\n      dropdownMatchSelectWidth: 350 // width dropdown\n      ,\n      onChange: function onChange(value) {\n        return onChangeSearch(value);\n      },\n      onBlur: function onBlur() {\n        return onBlurSearch();\n      },\n      style: {\n        width: 350\n      } // width input Search\n      ,\n      options: options,\n      disabled: props.disabledSearch ? true : false // disable input search\n      ,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }\n    }, __jsx(Input.Search, {\n      size: \"large\",\n      placeholder: t(\"search\"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 11\n      }\n    })));\n  };\n\n  return __jsx(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 10\n    }\n  }, __jsx(Header, {\n    className: headerClass,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 5\n    }\n  }, collapsed ? __jsx(MenuUnfoldOutlined, _extends({\n    style: {\n      color: \"#fff\"\n    }\n  }, menuIconProps, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 9\n    }\n  })) : __jsx(MenuFoldOutlined, _extends({\n    style: {\n      color: \"#fff\"\n    }\n  }, menuIconProps, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 9\n    }\n  })), __jsx(Popover, {\n    placement: \"bottom\",\n    title: t('personalInfo'),\n    content: accountPopup(),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }\n  }, __jsx(Button, {\n    icon: __jsx(UserOutlined, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 23\n      }\n    }),\n    type: \"link\",\n    className: \"header-btn\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 9\n    }\n  })), renderSearch(), __jsx(\"div\", {\n    className: \"rightContainer\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }\n  }, renderRightContent())), renderConfirmDialog());\n};\n\n_s(AdminHeader, \"RKweIWoK2YHaUvTRZ7tJ9KsORM0=\", false, function () {\n  return [useBaseHook];\n});\n\n_c = AdminHeader;\nexport default AdminHeader;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminHeader\");","map":{"version":3,"sources":["E:/DATN/nursinghome/themes/layouts/admin/Header.tsx"],"names":["React","createRef","useEffect","Menu","Layout","Avatar","Button","Input","Popover","Row","Col","AutoComplete","MenuUnfoldOutlined","MenuFoldOutlined","PoweroffOutlined","SettingFilled","UserOutlined","ConfirmDialog","UserService","PatientService","BedService","useBaseHook","Cookies","to","_","Header","SubMenu","Search","AdminHeader","props","t","notify","redirect","setStore","getAuth","getStore","getCookies","getData","userService","patientService","bedService","useState","patients","setPatients","beds","setBeds","users","setUsers","auth","cookieObject","confirmRef","handleClickMenu","e","redirectLogin","cookies","remove","path","token","user","optionsPatients","optionsBeds","optionsUsers","onChangeSearch","value","filterPatients","filters","field","operator","sorting","pageSize","page","filterBeds","filterUsers","index","errUsers","dataUsers","get","length","errPatients","dataPatients","errBeds","dataBeds","onBlurSearch","renderConfirmDialog","renderRightContent","current","show","collapsed","onCollapseChange","menuIconProps","className","onClick","headerClass","accountPopup","width","fullname","username","email","phone","renderTitle","title","renderItem","link","label","display","justifyContent","map","item","push","id","roomCode","bedId","options","renderSearch","height","disabledSearch","color"],"mappings":"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","sourcesContent":["import React, { Fragment, createRef, useEffect, useState } from 'react';\r\nimport { Menu, Layout, Avatar, Button, Input, Popover, Descriptions, Row, Col, Tooltip, AutoComplete } from 'antd';\r\nimport { \r\n  MenuUnfoldOutlined, MenuFoldOutlined, PoweroffOutlined, \r\n  SettingFilled, TeamOutlined, MoneyCollectOutlined, RightOutlined, BellOutlined, UserOutlined\r\n} from '@ant-design/icons'\r\nimport ConfirmDialog from 'themes/components/Dialogs/ConfirmDialog';\r\nimport UserService from  \"themes/services/api/UserService\"\r\nimport PatientService from  \"themes/services/api/PatientService\"\r\nimport BedService from  \"themes/services/api/BedService\"\r\nimport useBaseHook from 'themes/hooks/BaseHooks'\r\nimport Cookies from 'universal-cookie'\r\nimport to from 'await-to-js'\r\nimport moment from 'moment'\r\nimport _ from 'lodash'\r\n\r\nconst { Header } = Layout;\r\nconst { SubMenu } = Menu\r\nconst { Search } = Input\r\n\r\nconst AdminHeader = (props: any) => {\r\n  const { t, notify, redirect, setStore, getAuth, getStore, getCookies, getData  } = useBaseHook();\r\n  const userService = new UserService()\r\n  const patientService = new PatientService()\r\n  const bedService = new BedService()\r\n  const [patients, setPatients] = React.useState([])\r\n  const [beds, setBeds] = React.useState([])\r\n  const [users, setUsers] = React.useState([])\r\n  const auth = getAuth() || {};\r\n  const cookieObject = getCookies()\r\n  const confirmRef = createRef<ConfirmDialog>()\r\n  const handleClickMenu = (e: any) => { }\r\n  const redirectLogin = async () => {\r\n    const cookies = new Cookies(cookieObject)\r\n    await cookies.remove('token', { path: '/'})\r\n    await cookies.remove('user', { path: '/'})\r\n    return await redirect('frontend.admin.login')\r\n  }\r\n  useEffect(() => {\r\n    if (!cookieObject.token || !cookieObject.user) {\r\n      redirect('frontend.admin.login')\r\n    }\r\n  }, [])\r\n  \r\n  let optionsPatients: any = []\r\n  let optionsBeds: any = []\r\n  let optionsUsers: any = []\r\n  \r\n  const onChangeSearch = async (value: any) => {\r\n    let filterPatients = {\r\n      filters: [{\r\n        field: \"fullname\",\r\n        operator: \"contains\",\r\n        value: value\r\n      }],\r\n      sorting: [],\r\n      pageSize: 5,\r\n      page: 0\r\n    }\r\n    let filterBeds = {\r\n      filters: [{\r\n        field: \"roomCode\",\r\n        operator: \"contains\",\r\n        value: value\r\n      }],\r\n      sorting: [],\r\n      pageSize: 5,\r\n      page: 0\r\n    }\r\n    let filterUsers = {\r\n      filters: [{\r\n        field: \"fullname\",\r\n        operator: \"contains\",\r\n        value: value\r\n      }],\r\n      sorting: [],\r\n      pageSize: 5,\r\n      page: 0\r\n    }\r\n    let [errUsers, users]: any[] = await to(userService.index(filterUsers))\r\n    let dataUsers = _.get(users, \"data\", [])\r\n    if(dataUsers.length){\r\n      setUsers(dataUsers)\r\n    }\r\n\r\n    let [errPatients, patients]: any[] = await to(patientService.index(filterPatients))\r\n    let dataPatients = _.get(patients, \"data\", [])\r\n    if(dataPatients.length){\r\n      setPatients(dataPatients)\r\n    }\r\n\r\n    let [errBeds, beds]: any[] = await to(bedService.index(filterBeds))\r\n    let dataBeds = _.get(beds, \"data\", [])\r\n    if(dataBeds.length){\r\n      setBeds(dataBeds)\r\n    }\r\n\r\n    \r\n    \r\n  }\r\n  const onBlurSearch = () => {\r\n    setUsers([])\r\n    setBeds([])\r\n    setPatients([])\r\n  }\r\n  \r\n  const renderConfirmDialog = () => {\r\n    return (\r\n      <ConfirmDialog\r\n        ref={confirmRef}\r\n        onSubmit={redirectLogin}\r\n        title={t('signout')}\r\n        content={t('message.signoutConfirm')}\r\n      />\r\n    )\r\n  }\r\n\r\n  const renderRightContent = () => {\r\n    return <div>\r\n      <Button icon={<PoweroffOutlined />} type=\"link\" className=\"header-btn\" onClick={() => { if (confirmRef.current) confirmRef.current.show() }}></Button>\r\n      <Button icon={<SettingFilled spin />} type=\"link\" className=\"header-btn\"></Button>\r\n    </div>\r\n  }\r\n\r\n  const { collapsed, onCollapseChange } = props\r\n  const menuIconProps = {\r\n    className: \"trigger\",\r\n    onClick: () => onCollapseChange(!collapsed)\r\n  }\r\n  let headerClass = \"header\"\r\n  if (collapsed) headerClass += ' collapsed'\r\n\r\n  const accountPopup = () => {\r\n    return <React.Fragment>\r\n      <div style={{ width: \"400px\" }}>\r\n        <Row gutter={[8, 8]}>\r\n          <Col xs={12} md={7} lg={7}> \r\n            <div className=\"avatar\">\r\n              <Avatar \r\n                icon={<UserOutlined />} \r\n                src={\"\"} size={100} shape=\"square\">\r\n                {auth.fullname}\r\n              </Avatar>\r\n              {/* <Avatar size={64} icon={<UserOutlined />} /> */}\r\n            </div>\r\n          </Col> \r\n          <Col xs={12} md={17} lg={17}>\r\n            <Row>\r\n              <b>{t('username')}</b>: <i>{auth.username}</i>\r\n            </Row>\r\n            <Row>\r\n            <b>{t('fullname')}</b>: <i>{auth.fullname}</i>\r\n            </Row>\r\n            <Row>\r\n              <b>{t('email')}</b>: <i>{auth.email ? auth.email : t(\"update\")}</i>\r\n            </Row>\r\n            <Row>\r\n              <b>{t('phone')}</b>: <i>{auth.phone ? auth.phone : t(\"update\")}</i>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </React.Fragment>\r\n  };\r\n  const renderTitle = (title: string) => {\r\n    return (\r\n      <span>\r\n        {title}\r\n        {/* <a\r\n          style={{ float: 'right' }}\r\n          href=\"https://www.google.com/search?q=antd\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          more\r\n        </a> */}\r\n      </span>\r\n    );\r\n  };\r\n  const renderItem = (title: string, link: any) => {\r\n    return {\r\n      value: title,\r\n      label: (\r\n        <div\r\n          style={{\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n          }}\r\n        >\r\n          {title}\r\n          <span>\r\n            {link}\r\n          </span>\r\n        </div>\r\n      ),\r\n    };\r\n  };\r\n  \r\n  patients.map((item: any, index: number) => {\r\n    optionsPatients.push(renderItem(\r\n      `${item.fullname}`, \r\n      <a style={{ float: 'right' }} href={`patients/${item.id}/edit`} target=\"_blank\" rel=\"noopener noreferrer\"> Xem chi tiết </a>\r\n    ))\r\n  })\r\n  beds.map((item: any, index: number) => {\r\n    optionsBeds.push(renderItem(\r\n      `${item.roomCode} - ${item.bedId}`, \r\n      <a style={{ float: 'right' }} href={`beds/${item.id}/edit`} target=\"_blank\" rel=\"noopener noreferrer\"> Xem chi tiết </a>\r\n    ))\r\n  })\r\n  users.map((item: any, index: number) => {\r\n    optionsUsers.push(renderItem(\r\n      `${item.fullname} - ${item.username}`, \r\n      <a style={{ float: 'right' }} href={`users/${item.id}/edit`} target=\"_blank\" rel=\"noopener noreferrer\"> Xem chi tiết </a>\r\n    ))\r\n  })\r\n \r\n  const options = [\r\n    {\r\n      label: renderTitle(t('patient')),\r\n      options: optionsPatients,\r\n    },\r\n    {\r\n      label: renderTitle(t('bed')),\r\n      options: optionsBeds\r\n    },\r\n    {\r\n      label: renderTitle(t('employee')),\r\n      options: optionsUsers\r\n    }\r\n  ];\r\n\r\n  const renderSearch = () => {\r\n    return (\r\n      <div style={{ height: \"900px\", display: 'inline' }}>\r\n        <AutoComplete\r\n          dropdownClassName=\"certain-category-search-dropdown\"\r\n          dropdownMatchSelectWidth={350} // width dropdown\r\n          onChange={(value: any) => onChangeSearch(value)}\r\n          onBlur={() => onBlurSearch()}\r\n          style={{ width: 350 }} // width input Search\r\n          options={options}\r\n          disabled = {props.disabledSearch? true : false } // disable input search\r\n        >\r\n          <Input.Search size=\"large\" placeholder={t(\"search\")} />\r\n        </AutoComplete>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return <React.Fragment>\r\n    <Header\r\n      className={headerClass}>\r\n      {collapsed \r\n      ? <MenuUnfoldOutlined style={{ color: \"#fff\" }} {...menuIconProps} /> \r\n      : <MenuFoldOutlined style={{ color: \"#fff\" }} {...menuIconProps} />}\r\n      \r\n      <Popover placement=\"bottom\" title={t('personalInfo')} content={accountPopup()}>\r\n        <Button icon={<UserOutlined />} type=\"link\" className=\"header-btn\"></Button>\r\n      </Popover>\r\n      \r\n      {/* <Button icon={<BellOutlined />} type=\"link\" className=\"header-btn\"></Button> */}\r\n      {/* <Search\r\n        placeholder=\"Tìm kiếm...\"\r\n        onSearch={value => console.log(value)}\r\n        className=\"header-search\"\r\n      /> */}\r\n      {renderSearch()}\r\n      <div className='rightContainer'>{renderRightContent()}</div>\r\n\r\n    </Header>\r\n    {renderConfirmDialog()}\r\n  </React.Fragment>\r\n}\r\n\r\nexport default AdminHeader"]},"metadata":{},"sourceType":"module"}