{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport ConfirmDialog from 'themes/components/Dialogs/ConfirmDialog';\nimport React, { useState } from 'react';\nimport Layout from 'themes/layouts/Admin';\nimport { Button, Form, Input, Select, Checkbox } from 'antd';\nimport PermissionService from 'themes/services/api/UserPermissionService';\nimport GroupService from 'themes/services/api/UserGroupService';\nimport _ from 'lodash';\nimport to from 'await-to-js';\nimport useBaseHook from 'themes/hooks/BaseHooks';\nimport { DeleteFilled, SaveFilled, LeftCircleFilled } from '@ant-design/icons';\nimport usePermissionHook from \"themes/hooks/PermissionHook\";\nconst {\n  Option\n} = Select;\nconst formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 4\n    }\n  },\n  wrapperCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 18\n    }\n  }\n};\n\nconst Edit = ({\n  groups,\n  permission,\n  permissionError\n}) => {\n  const {\n    t,\n    notify,\n    redirect,\n    setStore,\n    getAuth,\n    getStore\n  } = useBaseHook();\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const [form] = Form.useForm();\n  const permissionService = new PermissionService();\n  const confirmRef = React.createRef();\n  const {\n    checkPermission\n  } = usePermissionHook();\n  const deletePer = checkPermission({\n    \"root\": \"D\"\n  });\n\n  const DisplayError = err => {\n    return notify(t(`errors:${err.code}`), t(err.message), 'error');\n  }; // save avalibleValue of permission\n\n\n  let result = {\n    avalibleValue: permission.avalibleValue\n  }; //submit form\n\n  const onFinish = async values => {\n    if (permissionError) return DisplayError(permissionError);\n    setLoading(true);\n    let [error, result] = await to(permissionService.edit({\n      id: permission.id,\n      values\n    }));\n    setLoading(false);\n    if (error) return DisplayError(error);\n    notify(t(\"message.recordUpdated\"));\n    redirect(\"frontend.admin.userPermissions.index\");\n  };\n\n  const onDelete = async () => {\n    if (permissionError) return DisplayError(permissionError);\n    let [error, result] = await to(permissionService.delete({\n      ids: [permission.id]\n    }));\n    if (error) return DisplayError(error);\n    notify(t('message.recordDeleted'));\n    redirect(\"frontend.admin.userPermissions.index\");\n  };\n\n  const renderDeleteDialog = () => {\n    return __jsx(ConfirmDialog, {\n      ref: confirmRef,\n      onSubmit: onDelete,\n      title: t('deleteItem'),\n      content: t('message.deleteConfirm')\n    });\n  }; //render option\n\n\n  const renderOption = () => {\n    let result = [];\n    groups.map(item => {\n      result.push(__jsx(Option, {\n        value: item.id,\n        key: item.id\n      }, item.name));\n    });\n    return result;\n  };\n\n  const renderCheckbox = avalibleValue => {\n    let checkbox = [];\n    const options = [{\n      title: t('create'),\n      value: 8\n    }, {\n      title: t('view'),\n      value: 4\n    }, {\n      title: t('edit'),\n      value: 2\n    }, {\n      title: t('delete'),\n      value: 1\n    }];\n\n    function onChange(e, permission) {\n      e.target.checked ? avalibleValue += permission : avalibleValue -= permission;\n      result['avalibleValue'] = avalibleValue;\n    }\n\n    const checked = permission => {\n      return (avalibleValue & permission) === permission;\n    };\n\n    options.map(item => {\n      checkbox.push(__jsx(Checkbox, {\n        defaultChecked: checked(item.value),\n        onChange: e => onChange(e, item.value),\n        key: item.title\n      }, item.title));\n    });\n    return checkbox;\n  };\n\n  return __jsx(Layout, null, __jsx(\"div\", {\n    className: \"content\"\n  }, __jsx(Form, _extends({}, formItemLayout, {\n    form: form,\n    name: \"createPermission\",\n    initialValues: {\n      key: permission.key,\n      name: permission.name,\n      description: permission.description,\n      groupId: permission.groupId\n    },\n    onFinish: e => onFinish(Object.assign(result, e)),\n    scrollToFirstError: true\n  }), __jsx(Form.Item, {\n    label: t(\"userPermissions.key\"),\n    name: \"key\",\n    rules: [{\n      required: true,\n      message: t('form.required')\n    }]\n  }, __jsx(Input, null)), __jsx(Form.Item, {\n    label: t(\"userPermissions.name\"),\n    name: \"name\",\n    rules: [{\n      required: true,\n      message: t('form.required')\n    }]\n  }, __jsx(Input, null)), __jsx(Form.Item, {\n    label: t(\"group\"),\n    name: \"groupId\",\n    rules: [{\n      required: true,\n      message: t('form.required')\n    }]\n  }, __jsx(Select, {\n    showSearch: true,\n    placeholder: t('placeholder.group'),\n    filterOption: (input, option) => {\n      return option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n    }\n  }, renderOption())), __jsx(Form.Item, {\n    label: t(\"description\"),\n    name: \"description\"\n  }, __jsx(Input, null)), __jsx(Form.Item, {\n    label: t(\"userPermissions.avalibleValue\"),\n    rules: [{\n      required: true,\n      message: t('form.required')\n    }]\n  }, renderCheckbox(result.avalibleValue)), __jsx(Form.Item, {\n    wrapperCol: {\n      span: 24\n    },\n    style: {\n      textAlign: \"center\"\n    }\n  }, __jsx(Button, {\n    onClick: () => redirect(\"frontend.admin.userPermissions.index\"),\n    style: {\n      marginRight: 8\n    }\n  }, __jsx(LeftCircleFilled, null), \" \", t('cancel')), __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: loading,\n    style: {\n      marginRight: 8\n    }\n  }, __jsx(SaveFilled, null), \" \", t('submit')), __jsx(Button, {\n    hidden: !deletePer,\n    danger: true,\n    onClick: () => {\n      if (confirmRef.current) confirmRef.current.show(permission.id);\n    }\n  }, __jsx(DeleteFilled, null), \" \", t('deleteItem')))), renderDeleteDialog()));\n};\n\nEdit.getInitialProps = async ctx => {\n  const groupService = new GroupService(ctx);\n  const permissionService = new PermissionService(ctx);\n  const query = ctx.query;\n  let error;\n\n  if (!query.id) {\n    //error missing id\n    error = {\n      code: 9996,\n      message: 'missing ID'\n    };\n  }\n\n  let [permissionError, permission] = await to(permissionService.detail({\n    id: query.id\n  }));\n  if (permissionError) permission = {};\n  const [errorGroup, groups] = await to(groupService.index({\n    pageSize: -1\n  }));\n  return {\n    namespacesRequired: ['common', 'pages', 'menu', 'errors'],\n    error: error,\n    permissionError: permissionError,\n    permission: permission,\n    groups: _.get(groups, \"data\", [])\n  };\n};\n\nEdit.permissions = {\n  \"root\": \"U\"\n};\nexport default Edit;","map":{"version":3,"sources":["E:/nursinghome_github/pages/admin/userPermissions/edit.tsx"],"names":["ConfirmDialog","React","useState","Layout","Button","Form","Input","Select","Checkbox","PermissionService","GroupService","_","to","useBaseHook","DeleteFilled","SaveFilled","LeftCircleFilled","usePermissionHook","Option","formItemLayout","labelCol","xs","span","sm","wrapperCol","Edit","groups","permission","permissionError","t","notify","redirect","setStore","getAuth","getStore","loading","setLoading","form","useForm","permissionService","confirmRef","createRef","checkPermission","deletePer","DisplayError","err","code","message","result","avalibleValue","onFinish","values","error","edit","id","onDelete","delete","ids","renderDeleteDialog","renderOption","map","item","push","name","renderCheckbox","checkbox","options","title","value","onChange","e","target","checked","key","description","groupId","Object","assign","required","input","option","children","toLowerCase","indexOf","textAlign","marginRight","current","show","getInitialProps","ctx","groupService","query","detail","errorGroup","index","pageSize","namespacesRequired","get","permissions"],"mappings":"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","sourcesContent":["import ConfirmDialog from 'themes/components/Dialogs/ConfirmDialog';\r\n\r\nimport React, { useState } from 'react'\r\nimport Layout from 'themes/layouts/Admin'\r\nimport { Button, Row, Col, Form, Input, Select, Checkbox, InputNumber } from 'antd';\r\nimport PermissionService from 'themes/services/api/UserPermissionService';\r\nimport GroupService from 'themes/services/api/UserGroupService';\r\nimport _ from 'lodash';\r\nimport to from 'await-to-js'\r\nimport useBaseHook from 'themes/hooks/BaseHooks'\r\nimport { DeleteFilled, SaveFilled, LeftCircleFilled, CopyFilled } from '@ant-design/icons';\r\nimport usePermissionHook from \"themes/hooks/PermissionHook\";\r\n\r\nconst { Option } = Select\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 4 },\r\n  },\r\n  wrapperCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 18 },\r\n  },\r\n};\r\n\r\nconst Edit = ({ groups, permission, permissionError }: { groups: UserGroup[], permission: Permission, permissionError: any }) => {\r\n  const { t, notify, redirect, setStore, getAuth, getStore } = useBaseHook();\r\n  const [loading, setLoading] = useState(false);\r\n  const [form] = Form.useForm();\r\n  const permissionService = new PermissionService()\r\n  const confirmRef = React.createRef<ConfirmDialog>()\r\n\r\n  const { checkPermission } = usePermissionHook();\r\n  const deletePer = checkPermission({\r\n    \"root\": \"D\"\r\n  })\r\n  const DisplayError = (err: any) => {\r\n    return notify(t(`errors:${err.code}`), t(err.message), 'error')\r\n  }\r\n\r\n  // save avalibleValue of permission\r\n  let result: any = {avalibleValue: permission.avalibleValue}\r\n\r\n  //submit form\r\n  const onFinish = async (values: any): Promise<void> => {\r\n    if(permissionError) return DisplayError(permissionError)\r\n    setLoading(true)\r\n    let [error, result]: any[] = await to(permissionService.edit({\r\n      id: permission.id,\r\n      values\r\n    }));\r\n    setLoading(false)\r\n    if (error) return DisplayError(error)\r\n    notify(t(\"message.recordUpdated\"))\r\n    redirect(\"frontend.admin.userPermissions.index\")\r\n  }\r\n\r\n  const onDelete = async (): Promise<void> => {\r\n    if(permissionError) return DisplayError(permissionError)\r\n    let [error, result]: any[] = await to(permissionService.delete({ ids: [permission.id] }));\r\n    if (error) return DisplayError(error)\r\n    notify(t('message.recordDeleted'))\r\n    redirect(\"frontend.admin.userPermissions.index\")\r\n  }\r\n\r\n  const renderDeleteDialog = () => {\r\n    return (\r\n      <ConfirmDialog\r\n        ref={confirmRef}\r\n        onSubmit={onDelete}\r\n        title={t('deleteItem')}\r\n        content={t('message.deleteConfirm')}\r\n      />\r\n    )\r\n  }\r\n\r\n  //render option\r\n  const renderOption = (): JSX.Element[] => {\r\n    let result: JSX.Element[] = [];\r\n    groups.map(item => {\r\n      result.push(\r\n        <Option value={item.id} key={item.id}>{item.name}</Option>\r\n      )\r\n    })\r\n    return result;\r\n  }\r\n\r\n  const renderCheckbox = (avalibleValue: any) => {\r\n    let checkbox: JSX.Element[] = [];\r\n    const options = [\r\n      {title: t('create'), value:8},\r\n      {title: t('view'), value:4},\r\n      {title: t('edit'), value:2},\r\n      {title: t('delete'), value:1}\r\n    ]\r\n    function onChange(e: any, permission: number ) {\r\n      e.target.checked ? avalibleValue += permission : avalibleValue -= permission;\r\n      result['avalibleValue'] = avalibleValue\r\n    }\r\n    const checked = (permission:number) => {return (avalibleValue & permission) === permission}\r\n    options.map(item => {\r\n      checkbox.push(\r\n        <Checkbox defaultChecked={checked(item.value)} onChange={(e)=>onChange(e,item.value)} key={item.title}>\r\n          {item.title}\r\n        </Checkbox>\r\n      )\r\n    })\r\n    return checkbox\r\n  }\r\n\r\n  return <Layout>\r\n    <div className=\"content\">\r\n      <Form\r\n        {...formItemLayout}\r\n        form={form}\r\n        name=\"createPermission\"\r\n        initialValues={{\r\n          key: permission.key,\r\n          name: permission.name,\r\n          description: permission.description,\r\n          groupId: permission.groupId\r\n        }}\r\n        onFinish={(e) => onFinish(Object.assign(result,e))}\r\n        scrollToFirstError\r\n      >\r\n        <Form.Item\r\n          label={t(\"userPermissions.key\")}\r\n          name=\"key\"\r\n          rules={[\r\n            { required: true, message: t('form.required') },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label={t(\"userPermissions.name\")}\r\n          name=\"name\"\r\n          rules={[\r\n            { required: true, message: t('form.required') },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label={t(\"group\")}\r\n          name=\"groupId\"\r\n          rules={[\r\n            { required: true, message: t('form.required')}\r\n          ]}\r\n        >\r\n          <Select\r\n            showSearch\r\n            placeholder = {t('placeholder.group')}\r\n            filterOption={ (input: any, option: any) => {\r\n              return option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n            } }\r\n          >\r\n            {renderOption()}\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item\r\n          label={t(\"description\")}\r\n          name=\"description\"\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label={t(\"userPermissions.avalibleValue\")}\r\n          rules={[\r\n            { required: true, message: t('form.required') },\r\n          ]}\r\n        >\r\n          { renderCheckbox(result.avalibleValue) }\r\n        </Form.Item>\r\n\r\n        <Form.Item wrapperCol={{ span: 24 }} style={{ textAlign: \"center\" }}>\r\n          <Button onClick={() => redirect(\"frontend.admin.userPermissions.index\")} style={{ marginRight: 8 }}>\r\n            <LeftCircleFilled /> {t('cancel')}\r\n          </Button>\r\n\r\n          <Button  type=\"primary\" htmlType=\"submit\" loading={loading} style={{ marginRight: 8 }}>\r\n            <SaveFilled /> {t('submit')}\r\n          </Button>\r\n          <Button hidden={!deletePer} danger onClick={() => { if (confirmRef.current) confirmRef.current.show(permission.id) }}>\r\n            <DeleteFilled /> {t('deleteItem')}\r\n          </Button>\r\n         \r\n        </Form.Item>\r\n      </Form>\r\n      {renderDeleteDialog()}\r\n    </div>\r\n  </Layout>\r\n}\r\n\r\nEdit.getInitialProps = async (ctx: any) => {\r\n  const groupService = new GroupService(ctx)\r\n  const permissionService = new PermissionService(ctx)\r\n  const query = ctx.query;\r\n  let error: any;\r\n\r\n  if (!query.id) {\r\n    //error missing id\r\n    error = {\r\n      code: 9996,\r\n      message: 'missing ID'\r\n    }\r\n  }\r\n\r\n  let [permissionError, permission] = await to(permissionService.detail({ id: query.id }));\r\n  if(permissionError) permission = {}\r\n  const [errorGroup, groups] = await to(groupService.index({ pageSize: -1 }));\r\n  return {\r\n    namespacesRequired: ['common', 'pages', 'menu','errors'],\r\n    error: error,\r\n    permissionError: permissionError,\r\n    permission: permission,\r\n    groups: _.get(groups, \"data\", []),\r\n  }\r\n}\r\nEdit.permissions = {\r\n  \"root\": \"U\"\r\n};\r\nexport default Edit"]},"metadata":{},"sourceType":"module"}