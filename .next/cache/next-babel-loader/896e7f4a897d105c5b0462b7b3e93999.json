{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\DATN\\\\nursinghome\\\\pages\\\\admin\\\\doctorAssignments\\\\edit.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport ConfirmDialog from 'themes/components/Dialogs/ConfirmDialog';\nimport React, { useState } from 'react';\nimport Layout from 'themes/layouts/Admin';\nimport { Button, Form, Input, Select, DatePicker } from 'antd';\nimport DoctorAssignService from 'themes/services/api/DoctorAssignmentService';\nimport RoomService from 'themes/services/api/RoomService';\nimport UserService from 'themes/services/api/UserService';\nimport _ from 'lodash';\nimport to from 'await-to-js';\nimport useBaseHook from 'themes/hooks/BaseHooks';\nimport { DeleteFilled, SaveFilled, LeftCircleFilled } from '@ant-design/icons';\nimport usePermissionHook from \"themes/hooks/PermissionHook\";\nimport moment from 'moment';\nvar Option = Select.Option;\nvar formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 4\n    }\n  },\n  wrapperCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 18\n    }\n  }\n};\n\nvar Edit = function Edit(_ref) {\n  _s();\n\n  var rooms = _ref.rooms,\n      users = _ref.users,\n      doctorAssign = _ref.doctorAssign,\n      doctorAssignError = _ref.doctorAssignError;\n\n  var _useBaseHook = useBaseHook(),\n      t = _useBaseHook.t,\n      notify = _useBaseHook.notify,\n      redirect = _useBaseHook.redirect,\n      setStore = _useBaseHook.setStore,\n      getAuth = _useBaseHook.getAuth,\n      getStore = _useBaseHook.getStore;\n\n  var _useState = useState(false),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  var _useState2 = useState(false),\n      modalVisible = _useState2[0],\n      setModalVisible = _useState2[1];\n\n  var _Form$useForm = Form.useForm(),\n      _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n      form = _Form$useForm2[0];\n\n  var doctorAssignService = new DoctorAssignService();\n  var confirmRef = React.createRef();\n\n  var _usePermissionHook = usePermissionHook(),\n      checkPermission = _usePermissionHook.checkPermission;\n\n  var deletePer = checkPermission({\n    \"admin.doctorAssignments\": \"D\"\n  });\n\n  var checkExist = function checkExist(err) {\n    return notify(t(\"errors:\".concat(err.code)), t(err.message), 'error');\n  }; //submit form\n\n\n  var onFinish = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values) {\n      var _yield$to, _yield$to2, error, result;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!doctorAssignError) {\n                _context.next = 2;\n                break;\n              }\n\n              return _context.abrupt(\"return\", checkExist(doctorAssignError));\n\n            case 2:\n              setLoading(true);\n              console.log(values);\n              _context.next = 6;\n              return to(doctorAssignService.edit({\n                id: doctorAssign.id,\n                values: values\n              }));\n\n            case 6:\n              _yield$to = _context.sent;\n              _yield$to2 = _slicedToArray(_yield$to, 2);\n              error = _yield$to2[0];\n              result = _yield$to2[1];\n              setLoading(false);\n\n              if (!error) {\n                _context.next = 13;\n                break;\n              }\n\n              return _context.abrupt(\"return\", notify(t(\"errors:\".concat(error.code)), t(error.message), 'error'));\n\n            case 13:\n              notify(t(\"message.recordUpdated\"));\n              redirect(\"frontend.admin.doctorAssignments.index\");\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onFinish(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var onDelete = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var _yield$to3, _yield$to4, error, result;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              checkExist(doctorAssignError);\n              _context2.next = 3;\n              return to(doctorAssignService[\"delete\"]({\n                ids: [doctorAssign.id]\n              }));\n\n            case 3:\n              _yield$to3 = _context2.sent;\n              _yield$to4 = _slicedToArray(_yield$to3, 2);\n              error = _yield$to4[0];\n              result = _yield$to4[1];\n\n              if (!error) {\n                _context2.next = 9;\n                break;\n              }\n\n              return _context2.abrupt(\"return\", notify(t(\"errors:\".concat(error.code)), t(\"\".concat(error.message)), 'error'));\n\n            case 9:\n              notify(t('message.recordDeleted'));\n              redirect(\"frontend.admin.doctorAssignments.index\");\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function onDelete() {\n      return _ref3.apply(this, arguments);\n    };\n  }(); //render option\n\n\n  var renderOptionRoom = function renderOptionRoom() {\n    var result = [];\n    rooms.map(function (item) {\n      result.push(__jsx(Option, {\n        value: item.code,\n        key: item.code,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 7\n        }\n      }, item.code));\n    });\n    return result;\n  };\n\n  var renderOptionUser = function renderOptionUser() {\n    var result = [];\n    users.map(function (item) {\n      result.push(__jsx(Option, {\n        value: item.id,\n        key: item.id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 7\n        }\n      }, item.code, \" - \", item.fullname));\n    });\n    return result;\n  };\n\n  var renderDeleteDialog = function renderDeleteDialog() {\n    return __jsx(ConfirmDialog, {\n      ref: confirmRef,\n      onSubmit: onDelete,\n      title: t('deleteItem'),\n      content: t('message.deleteConfirm'),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 7\n      }\n    });\n  };\n\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 10\n    }\n  }, __jsx(\"div\", {\n    className: \"content\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 5\n    }\n  }, __jsx(Form, _extends({}, formItemLayout, {\n    form: form,\n    name: \"createPatient\",\n    initialValues: {\n      doctorId: doctorAssign.doctorId,\n      roomCode: doctorAssign.roomCode,\n      dateBegin: doctorAssign.dateBegin ? moment(doctorAssign.dateBegin).subtract(7, 'h') : \"\",\n      dateEnd: doctorAssign.dateEnd ? moment(doctorAssign.dateEnd).subtract(7, 'h') : \"\",\n      note: doctorAssign.note\n    },\n    onFinish: onFinish,\n    scrollToFirstError: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }), __jsx(Form.Item, {\n    label: t(\"doctor\"),\n    name: \"doctorId\",\n    rules: [{\n      required: true,\n      message: t('form.required')\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, __jsx(Select, {\n    showSearch: true,\n    placeholder: t('placeholder.user'),\n    filterOption: function filterOption(input, option) {\n      return option.children[2].toLowerCase().indexOf(input.toLowerCase()) >= 0;\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }, renderOptionUser())), __jsx(Form.Item, {\n    label: t(\"room\"),\n    name: \"roomCode\",\n    rules: [{\n      required: true,\n      message: t('form.required')\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }, __jsx(Select, {\n    showSearch: true,\n    placeholder: t('placeholder.room'),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 11\n    }\n  }, renderOptionRoom())), __jsx(Form.Item, {\n    label: t(\"doctorAssignments.dateBegin\"),\n    name: \"dateBegin\",\n    rules: [{\n      required: true,\n      message: t('form.required')\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }\n  }, __jsx(DatePicker, {\n    format: 'YYYY-MM-DD',\n    showTime: false,\n    placeholder: t('placeholder.date'),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 11\n    }\n  })), __jsx(Form.Item, {\n    label: t(\"doctorAssignments.dateEnd\"),\n    name: \"dateEnd\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }\n  }, __jsx(DatePicker, {\n    format: 'YYYY-MM-DD',\n    showTime: false,\n    placeholder: t('placeholder.date'),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 11\n    }\n  })), __jsx(Form.Item, {\n    label: t(\"note\"),\n    name: \"note\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }\n  }, __jsx(Input, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 11\n    }\n  })), __jsx(Form.Item, {\n    wrapperCol: {\n      span: 24\n    },\n    style: {\n      textAlign: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    onClick: function onClick() {\n      return redirect(\"frontend.admin.doctorAssignments.index\");\n    },\n    style: {\n      marginRight: 8\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 11\n    }\n  }, __jsx(LeftCircleFilled, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }\n  }), \" \", t('cancel')), __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: loading,\n    style: {\n      marginRight: 8\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 11\n    }\n  }, __jsx(SaveFilled, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }\n  }), \" \", t('submit')), __jsx(Button, {\n    hidden: !deletePer,\n    danger: true,\n    onClick: function onClick() {\n      if (confirmRef.current) confirmRef.current.show(doctorAssign.id);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 11\n    }\n  }, __jsx(DeleteFilled, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }\n  }), \" \", t('deleteItem')))), renderDeleteDialog()));\n};\n\n_s(Edit, \"iUB1GndivFDhzIDYimUOdud+Mtc=\", false, function () {\n  return [useBaseHook, Form.useForm, usePermissionHook];\n});\n\n_c = Edit;\n\nEdit.getInitialProps = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(ctx) {\n    var doctorAssignService, roomService, userService, query, error, _yield$to5, _yield$to6, doctorAssignError, doctorAssign, _yield$to7, _yield$to8, errorRoom, rooms, filters, _yield$to9, _yield$to10, errorUsers, users;\n\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            doctorAssignService = new DoctorAssignService(ctx);\n            roomService = new RoomService(ctx);\n            userService = new UserService(ctx);\n            query = ctx.query;\n\n            if (!query.id) {\n              //error missing id\n              error = {\n                code: 9996,\n                message: 'missing ID'\n              };\n            }\n\n            _context3.next = 7;\n            return to(doctorAssignService.detail({\n              id: query.id\n            }));\n\n          case 7:\n            _yield$to5 = _context3.sent;\n            _yield$to6 = _slicedToArray(_yield$to5, 2);\n            doctorAssignError = _yield$to6[0];\n            doctorAssign = _yield$to6[1];\n            if (doctorAssignError) doctorAssign = {};\n            _context3.next = 14;\n            return to(roomService.index({\n              pageSize: -1\n            }));\n\n          case 14:\n            _yield$to7 = _context3.sent;\n            _yield$to8 = _slicedToArray(_yield$to7, 2);\n            errorRoom = _yield$to8[0];\n            rooms = _yield$to8[1];\n            filters = JSON.stringify({\n              field: \"position\",\n              operator: \"contains\",\n              value: \"Bác sỹ\"\n            });\n            _context3.next = 21;\n            return to(userService.index({\n              pageSize: -1,\n              filters: [filters]\n            }));\n\n          case 21:\n            _yield$to9 = _context3.sent;\n            _yield$to10 = _slicedToArray(_yield$to9, 2);\n            errorUsers = _yield$to10[0];\n            users = _yield$to10[1];\n            return _context3.abrupt(\"return\", {\n              namespacesRequired: ['common', 'pages', 'menu', 'errors'],\n              error: error,\n              doctorAssign: doctorAssign,\n              doctorAssignError: doctorAssignError,\n              rooms: _.get(rooms, \"data\", []),\n              users: _.get(users, \"data\", [])\n            });\n\n          case 26:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function (_x2) {\n    return _ref4.apply(this, arguments);\n  };\n}();\n\nEdit.permissions = {\n  \"admin.doctorAssignments\": \"U\"\n};\nexport default Edit;\n\nvar _c;\n\n$RefreshReg$(_c, \"Edit\");","map":{"version":3,"sources":["E:/DATN/nursinghome/pages/admin/doctorAssignments/edit.tsx"],"names":["ConfirmDialog","React","useState","Layout","Button","Form","Input","Select","DatePicker","DoctorAssignService","RoomService","UserService","_","to","useBaseHook","DeleteFilled","SaveFilled","LeftCircleFilled","usePermissionHook","moment","Option","formItemLayout","labelCol","xs","span","sm","wrapperCol","Edit","rooms","users","doctorAssign","doctorAssignError","t","notify","redirect","setStore","getAuth","getStore","loading","setLoading","modalVisible","setModalVisible","useForm","form","doctorAssignService","confirmRef","createRef","checkPermission","deletePer","checkExist","err","code","message","onFinish","values","console","log","edit","id","error","result","onDelete","ids","renderOptionRoom","map","item","push","renderOptionUser","fullname","renderDeleteDialog","doctorId","roomCode","dateBegin","subtract","dateEnd","note","required","input","option","children","toLowerCase","indexOf","textAlign","marginRight","current","show","getInitialProps","ctx","roomService","userService","query","detail","index","pageSize","errorRoom","filters","JSON","stringify","field","operator","value","errorUsers","namespacesRequired","get","permissions"],"mappings":"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","sourcesContent":["import ConfirmDialog from 'themes/components/Dialogs/ConfirmDialog';\r\n\r\nimport React, { useState } from 'react'\r\nimport Layout from 'themes/layouts/Admin'\r\nimport { Button, Row, Col, Form, Input, Select, Modal, InputNumber, Radio, DatePicker } from 'antd';\r\nimport DoctorAssignService from 'themes/services/api/DoctorAssignmentService';\r\nimport RoomService from 'themes/services/api/RoomService';\r\nimport UserService from 'themes/services/api/UserService';\r\nimport _ from 'lodash';\r\nimport to from 'await-to-js'\r\nimport useBaseHook from 'themes/hooks/BaseHooks'\r\nimport { DeleteFilled, SaveFilled, LeftCircleFilled, CopyFilled } from '@ant-design/icons';\r\nimport usePermissionHook from \"themes/hooks/PermissionHook\";\r\nimport moment from 'moment'\r\n\r\nconst { Option } = Select\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 4 },\r\n  },\r\n  wrapperCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 18 },\r\n  },\r\n};\r\n\r\nconst Edit = ({ rooms, users, doctorAssign, doctorAssignError }: \r\n  { rooms: Room[], users : User[], doctorAssign: DoctorAssignment, doctorAssignError: any }) => {\r\n  const { t, notify, redirect, setStore, getAuth, getStore } = useBaseHook();\r\n  const [loading, setLoading] = useState(false);\r\n  const [modalVisible, setModalVisible] = useState(false)\r\n  const [form] = Form.useForm();\r\n  const doctorAssignService = new DoctorAssignService()\r\n  const confirmRef = React.createRef<ConfirmDialog>()\r\n\r\n  const { checkPermission } = usePermissionHook();\r\n  const deletePer = checkPermission({\r\n    \"admin.doctorAssignments\": \"D\"\r\n  })\r\n\r\n  const checkExist = (err: any) => {\r\n    return notify(t(`errors:${err.code}`), t(err.message), 'error')\r\n  }\r\n\r\n  //submit form\r\n  const onFinish = async (values: any): Promise<void> => {\r\n    if(doctorAssignError) return checkExist(doctorAssignError)\r\n    setLoading(true)\r\n    console.log(values)\r\n    let [error, result]: any[] = await to(doctorAssignService.edit({\r\n      id: doctorAssign.id,\r\n      values\r\n    }));\r\n    setLoading(false)\r\n\r\n    if (error) {\r\n      return notify(t(`errors:${error.code}`), t(error.message), 'error')\r\n    }\r\n    notify(t(\"message.recordUpdated\"))\r\n    redirect(\"frontend.admin.doctorAssignments.index\")\r\n  }\r\n\r\n  const onDelete = async (): Promise<void> => {\r\n    checkExist(doctorAssignError)\r\n    let [error, result]: any[] = await to(doctorAssignService.delete({ ids: [doctorAssign.id] }));\r\n\r\n    if (error) {\r\n      return notify(t(`errors:${error.code}`), t(`${error.message}`), 'error')\r\n    }\r\n    notify(t('message.recordDeleted'))\r\n    redirect(\"frontend.admin.doctorAssignments.index\")\r\n  }\r\n\r\n  //render option\r\n  const renderOptionRoom = (): JSX.Element[] => {\r\n    let result: JSX.Element[] = [];\r\n    rooms.map(item => {\r\n      result.push(\r\n      <Option value={item.code} key={item.code}>{item.code}</Option>\r\n      )\r\n    })\r\n    return result;\r\n  }\r\n\r\n  const renderOptionUser = (): JSX.Element[] => {\r\n    let result: JSX.Element[] = [];\r\n    users.map(item => {\r\n      result.push(\r\n      <Option value={item.id} key={item.id}>{item.code} - {item.fullname}</Option>\r\n      )\r\n    })\r\n    return result;\r\n  }\r\n\r\n  const renderDeleteDialog = () => {\r\n    return (\r\n      <ConfirmDialog\r\n        ref={confirmRef}\r\n        onSubmit={onDelete}\r\n        title={t('deleteItem')}\r\n        content={t('message.deleteConfirm')}\r\n      />\r\n    )\r\n  }\r\n\r\n  return <Layout>\r\n    <div className=\"content\">\r\n      <Form\r\n        {...formItemLayout}\r\n        form={form}\r\n        name=\"createPatient\"\r\n        initialValues={{\r\n          doctorId: doctorAssign.doctorId,\r\n          roomCode: doctorAssign.roomCode,\r\n          dateBegin: doctorAssign.dateBegin ? moment(doctorAssign.dateBegin).subtract(7,'h') : \"\",\r\n          dateEnd: doctorAssign.dateEnd ? moment(doctorAssign.dateEnd).subtract(7,'h') : \"\",\r\n          note: doctorAssign.note\r\n        }}\r\n        onFinish={onFinish}\r\n        scrollToFirstError\r\n      >\r\n        <Form.Item\r\n          label={t(\"doctor\")}\r\n          name=\"doctorId\"\r\n          rules={[\r\n            { required: true, message: t('form.required') },\r\n          ]}\r\n        >\r\n          <Select \r\n            showSearch\r\n            placeholder = {t('placeholder.user')}\r\n            filterOption={ (input: any, option: any) => {\r\n              return option.children[2].toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n            } }\r\n          >\r\n            {renderOptionUser()}\r\n          </Select>\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={t(\"room\")}\r\n          name=\"roomCode\"\r\n          rules={[\r\n            { required: true, message: t('form.required') },\r\n          ]}\r\n        >\r\n          <Select \r\n            showSearch \r\n            placeholder = {t('placeholder.room')}\r\n          >\r\n            {renderOptionRoom()}\r\n          </Select>\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={t(\"doctorAssignments.dateBegin\")}\r\n          name=\"dateBegin\"\r\n          rules={[\r\n            { required: true, message: t('form.required') },\r\n          ]}\r\n        >\r\n          <DatePicker format={'YYYY-MM-DD'} showTime={false} placeholder={t('placeholder.date')} />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={t(\"doctorAssignments.dateEnd\")}\r\n          name=\"dateEnd\"\r\n        >\r\n          <DatePicker format={'YYYY-MM-DD'} showTime={false} placeholder={t('placeholder.date')} />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={t(\"note\")}\r\n          name=\"note\"\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item wrapperCol={{ span: 24 }} style={{ textAlign: \"center\" }}>\r\n          <Button onClick={() => redirect(\"frontend.admin.doctorAssignments.index\")} style={{ marginRight: 8 }}>\r\n            <LeftCircleFilled /> {t('cancel')}\r\n          </Button>\r\n\r\n          <Button type=\"primary\" htmlType=\"submit\" loading={loading} style={{ marginRight: 8 }}>\r\n            <SaveFilled /> {t('submit')}\r\n          </Button>\r\n          \r\n          <Button hidden={!deletePer} danger onClick={() => { \r\n              if (confirmRef.current) confirmRef.current.show(doctorAssign.id) \r\n            }}>\r\n            <DeleteFilled /> {t('deleteItem')}\r\n          </Button>\r\n         \r\n        </Form.Item>\r\n      </Form>\r\n      {renderDeleteDialog()}\r\n    </div>\r\n  </Layout>\r\n}\r\n\r\nEdit.getInitialProps = async (ctx: any) => {\r\n  const doctorAssignService = new DoctorAssignService(ctx)\r\n  const roomService = new RoomService(ctx)\r\n  const userService = new UserService(ctx)\r\n  const query = ctx.query;\r\n  let error: any;\r\n\r\n  if (!query.id) {\r\n    //error missing id\r\n    error = {\r\n      code: 9996,\r\n      message: 'missing ID'\r\n    }\r\n  }\r\n\r\n  let [doctorAssignError, doctorAssign] = await to(doctorAssignService.detail({ id: query.id }));\r\n  if(doctorAssignError) doctorAssign = {}\r\n  const [errorRoom, rooms] = await to(roomService.index({ pageSize: -1 }));\r\n  const filters = JSON.stringify({field:\"position\",operator:\"contains\",value:\"Bác sỹ\"})\r\n  const [errorUsers, users] = await to(userService.index({ pageSize: -1, filters: [filters] }));\r\n  return {\r\n    namespacesRequired: ['common', 'pages', 'menu','errors'],\r\n    error: error,\r\n    doctorAssign: doctorAssign,\r\n    doctorAssignError: doctorAssignError,\r\n    rooms: _.get(rooms, \"data\", []),\r\n    users: _.get(users, \"data\", [])\r\n  }\r\n}\r\nEdit.permissions = {\r\n  \"admin.doctorAssignments\": \"U\"\r\n};\r\nexport default Edit"]},"metadata":{},"sourceType":"module"}