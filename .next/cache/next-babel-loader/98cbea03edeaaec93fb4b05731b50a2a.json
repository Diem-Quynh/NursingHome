{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\DATN\\\\nursinghome\\\\pages\\\\admin\\\\nursingAssignments\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport Layout from 'themes/layouts/Admin';\nimport { GridTable, GridTableHelper } from 'themes/components/Table';\nimport ConfirmDialog from 'themes/components/Dialogs/ConfirmDialog';\nimport { Button } from 'antd';\nimport NursingAssignService from 'themes/services/api/NursingAssignmentService';\nimport to from 'await-to-js';\nimport React, { useState } from 'react';\nimport useBaseHook from 'themes/hooks/BaseHooks';\nimport usePermissionHook from \"themes/hooks/PermissionHook\";\nimport { PlusCircleOutlined, DeleteOutlined } from '@ant-design/icons';\n\nvar formaterDate = function formaterDate(value) {\n  value = value ? String(value) : \"\";\n  value = value.substr(0, 10);\n  return \"\".concat(value);\n};\n\nvar Index = function Index(_ref) {\n  _s();\n\n  var nursingAssigns = _ref.nursingAssigns,\n      total = _ref.total;\n\n  var _useBaseHook = useBaseHook(),\n      t = _useBaseHook.t,\n      notify = _useBaseHook.notify,\n      redirect = _useBaseHook.redirect,\n      setStore = _useBaseHook.setStore,\n      getAuth = _useBaseHook.getAuth,\n      getStore = _useBaseHook.getStore;\n\n  var _useState = useState(true),\n      hiddenDeleteBtn = _useState[0],\n      setHiddenDeleteBtn = _useState[1];\n\n  var _useState2 = useState([]),\n      selectedIds = _useState2[0],\n      setSelectedIds = _useState2[1];\n\n  var nursingAssignService = new NursingAssignService();\n  var confirmRef = React.createRef();\n  var tableRef = React.createRef();\n\n  var _usePermissionHook = usePermissionHook(),\n      checkPermission = _usePermissionHook.checkPermission;\n\n  var createPer = checkPermission({\n    \"admin.nursingAssignments\": \"C\"\n  });\n  var deletePer = checkPermission({\n    \"admin.nursingAssignment\": \"D\"\n  });\n  var columns = [{\n    title: t(\"nursingAssignments.nurseCode\"),\n    dataIndex: 'code',\n    key: 'code',\n    sorter: true,\n    render: function render(text, record) {\n      return __jsx(\"a\", {\n        onClick: function onClick() {\n          return redirect('frontend.admin.nursingAssignments.edit', {\n            id: record.id\n          });\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }\n      }, record.code, \" - \", record.nurseName);\n    }\n  }, {\n    title: t('nursingAssignments.patientCode'),\n    dataIndex: 'patientName',\n    sorter: true,\n    key: 'patientName',\n    render: function render(text, record) {\n      return __jsx(\"div\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 46\n        }\n      }, record.patientName, \" - \", record.roomCode, \" - \", record.bedCode);\n    }\n  }, {\n    title: t(\"nursingAssignments.dateBegin\"),\n    dataIndex: 'dateBegin',\n    sorter: true,\n    key: 'dateBegin',\n    render: function render(text, record) {\n      return __jsx(\"div\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 46\n        }\n      }, formaterDate(text));\n    }\n  }, {\n    title: t(\"nursingAssignments.dateEnd\"),\n    dataIndex: 'dateEnd',\n    sorter: true,\n    key: 'dateEnd',\n    render: function render(text, record) {\n      return __jsx(\"div\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 46\n        }\n      }, formaterDate(text));\n    }\n  }, {\n    title: t(\"note\"),\n    dataIndex: 'note',\n    key: 'note'\n  }];\n\n  var onChangeSelection = function onChangeSelection(data) {\n    if (data.length > 0) {\n      setHiddenDeleteBtn(false);\n    } else {\n      setHiddenDeleteBtn(true);\n    }\n\n    setSelectedIds(data);\n  };\n\n  var fetchData = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values) {\n      var _yield$to, _yield$to2, error, nursingAssigns, code, message;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return to(nursingAssignService.index(values));\n\n            case 2:\n              _yield$to = _context.sent;\n              _yield$to2 = _slicedToArray(_yield$to, 2);\n              error = _yield$to2[0];\n              nursingAssigns = _yield$to2[1];\n\n              if (!error) {\n                _context.next = 10;\n                break;\n              }\n\n              code = error.code, message = error.message;\n              notify(t(\"errors:\".concat(code)), t(message), 'error');\n              return _context.abrupt(\"return\", {});\n\n            case 10:\n              return _context.abrupt(\"return\", nursingAssigns);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function fetchData(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var onDelete = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var _yield$to3, _yield$to4, error, result;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return to(nursingAssignService[\"delete\"]({\n                ids: selectedIds\n              }));\n\n            case 2:\n              _yield$to3 = _context2.sent;\n              _yield$to4 = _slicedToArray(_yield$to3, 2);\n              error = _yield$to4[0];\n              result = _yield$to4[1];\n\n              if (!error) {\n                _context2.next = 8;\n                break;\n              }\n\n              return _context2.abrupt(\"return\", notify(t(\"errors:\".concat(error.code)), t(\"\".concat(error.message)), 'error'));\n\n            case 8:\n              notify(t(\"message.recordDeleted\"));\n\n              if (tableRef.current !== null) {\n                tableRef.current.reload();\n              }\n\n              setSelectedIds([]);\n              setHiddenDeleteBtn(true);\n\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function onDelete() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var renderDeleteDialog = function renderDeleteDialog() {\n    return __jsx(ConfirmDialog, {\n      ref: confirmRef,\n      onSubmit: onDelete,\n      title: t('deleteItem'),\n      content: t('message.deleteConfirm'),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 7\n      }\n    });\n  };\n\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 10\n    }\n  }, __jsx(\"div\", {\n    className: \"content\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 5\n    }\n  }, __jsx(Button, {\n    hidden: !createPer,\n    onClick: function onClick() {\n      return redirect(\"frontend.admin.nursingAssignments.create\");\n    },\n    type: \"primary\",\n    className: \"btn-top\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }, __jsx(PlusCircleOutlined, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }), t('create')), __jsx(Button, {\n    danger: true,\n    onClick: function onClick() {\n      if (confirmRef.current) confirmRef.current.show();\n    },\n    className: \"btn-top\",\n    hidden: hiddenDeleteBtn || !deletePer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }, __jsx(DeleteOutlined, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }), t('delete')), __jsx(GridTable, {\n    ref: tableRef,\n    columns: columns,\n    data: nursingAssigns,\n    rowSelection: {\n      selectedRowKeys: selectedIds,\n      onChange: function onChange(data) {\n        return onChangeSelection(data);\n      }\n    },\n    fetchData: fetchData,\n    total: total,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }), renderDeleteDialog()));\n};\n\n_s(Index, \"5QDfb0TJ9H9GSm6KcG8BUe5iqGg=\", false, function () {\n  return [useBaseHook, usePermissionHook];\n});\n\n_c = Index;\n\nIndex.getInitialProps = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(ctx) {\n    var nursingAssignService, defaultOptions, query, filters, _yield$to5, _yield$to6, error, nursingAssigns;\n\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            nursingAssignService = new NursingAssignService(ctx);\n            defaultOptions = {\n              filters: [],\n              sorting: []\n            };\n            query = ctx.query;\n            filters = GridTableHelper.getOptions(query, defaultOptions);\n            _context3.next = 6;\n            return to(nursingAssignService.index(filters));\n\n          case 6:\n            _yield$to5 = _context3.sent;\n            _yield$to6 = _slicedToArray(_yield$to5, 2);\n            error = _yield$to6[0];\n            nursingAssigns = _yield$to6[1];\n            return _context3.abrupt(\"return\", {\n              namespacesRequired: ['common', 'pages', 'menu'],\n              error: error,\n              nursingAssigns: useBaseHook.getData(nursingAssigns, \"data\", []),\n              total: useBaseHook.getData(nursingAssigns, \"total\", 0),\n              defaultQuery: {\n                filters: GridTableHelper.makeQuery(filters)\n              }\n            });\n\n          case 11:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function (_x2) {\n    return _ref4.apply(this, arguments);\n  };\n}();\n\nIndex.permissions = {\n  \"admin.nursingAssignments\": \"R\"\n};\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["E:/DATN/nursinghome/pages/admin/nursingAssignments/index.tsx"],"names":["Layout","GridTable","GridTableHelper","ConfirmDialog","Button","NursingAssignService","to","React","useState","useBaseHook","usePermissionHook","PlusCircleOutlined","DeleteOutlined","formaterDate","value","String","substr","Index","nursingAssigns","total","t","notify","redirect","setStore","getAuth","getStore","hiddenDeleteBtn","setHiddenDeleteBtn","selectedIds","setSelectedIds","nursingAssignService","confirmRef","createRef","tableRef","checkPermission","createPer","deletePer","columns","title","dataIndex","key","sorter","render","text","record","id","code","nurseName","patientName","roomCode","bedCode","onChangeSelection","data","length","fetchData","values","index","error","message","onDelete","ids","result","current","reload","renderDeleteDialog","show","selectedRowKeys","onChange","getInitialProps","ctx","defaultOptions","filters","sorting","query","getOptions","namespacesRequired","getData","defaultQuery","makeQuery","permissions"],"mappings":"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","sourcesContent":["import Layout from 'themes/layouts/Admin'\r\nimport { GridTable, GridTableHelper, FilterInput } from 'themes/components/Table';\r\nimport ConfirmDialog from 'themes/components/Dialogs/ConfirmDialog';\r\nimport { Button } from 'antd';\r\nimport NursingAssignService from 'themes/services/api/NursingAssignmentService';\r\nimport _ from 'lodash'\r\nimport to from 'await-to-js'\r\nimport React, { useState } from 'react';\r\nimport useBaseHook from 'themes/hooks/BaseHooks'\r\nimport usePermissionHook from \"themes/hooks/PermissionHook\";\r\nimport {PlusCircleOutlined, DeleteOutlined} from '@ant-design/icons';\r\n\r\nconst formaterDate = (value: any) => {\r\n  value = value? String(value) : \"\"\r\n  value = value.substr(0,10)\r\n  return `${value}`\r\n}\r\n\r\nconst Index = ({ nursingAssigns, total }: { nursingAssigns: NursingAssignment[], total: number }) => {\r\n  const { t, notify, redirect, setStore, getAuth, getStore } = useBaseHook();\r\n  const [hiddenDeleteBtn, setHiddenDeleteBtn] = useState(true)\r\n  const [selectedIds, setSelectedIds] = useState([])\r\n  const nursingAssignService = new NursingAssignService()\r\n  const confirmRef = React.createRef<ConfirmDialog>()\r\n  const tableRef = React.createRef<GridTable>()\r\n  const { checkPermission } = usePermissionHook();\r\n  const createPer = checkPermission({\r\n    \"admin.nursingAssignments\": \"C\"\r\n  })\r\n  const deletePer = checkPermission({\r\n    \"admin.nursingAssignment\": \"D\"\r\n  })\r\n  const columns = [\r\n    {\r\n      title: t(\"nursingAssignments.nurseCode\"),\r\n      dataIndex: 'code',\r\n      key: 'code',\r\n      sorter: true,\r\n      render: (text: string, record: any) =>\r\n        <a onClick={() => redirect('frontend.admin.nursingAssignments.edit', \r\n        { id: record.id })}>{record.code} - {record.nurseName}</a>\r\n    },\r\n    {\r\n      title: t('nursingAssignments.patientCode'),\r\n      dataIndex: 'patientName',\r\n      sorter: true,\r\n      key: 'patientName',\r\n      render: (text: string, record: any) => <div>{record.patientName} - {record.roomCode} - {record.bedCode}</div>\r\n    },\r\n    {\r\n      title: t(\"nursingAssignments.dateBegin\"),\r\n      dataIndex: 'dateBegin',\r\n      sorter: true,\r\n      key: 'dateBegin',\r\n      render: (text: string, record: any) => <div>{formaterDate(text)}</div>\r\n    },\r\n    {\r\n      title: t(\"nursingAssignments.dateEnd\"),\r\n      dataIndex: 'dateEnd',\r\n      sorter: true,\r\n      key: 'dateEnd',\r\n      render: (text: string, record: any) => <div>{formaterDate(text)}</div>\r\n    },\r\n    {\r\n      title: t(\"note\"),\r\n      dataIndex: 'note',\r\n      key: 'note',\r\n    },\r\n  ]\r\n\r\n  const onChangeSelection = (data: any) => {\r\n    if (data.length > 0) {\r\n      setHiddenDeleteBtn(false)\r\n    }\r\n    else {\r\n      setHiddenDeleteBtn(true)\r\n    }\r\n    setSelectedIds(data)\r\n  }\r\n\r\n  const fetchData = async (values: any) => {\r\n    let [error, nursingAssigns]: any[] = await to(nursingAssignService.index(values))\r\n    if (error) {\r\n      const { code, message } = error\r\n      notify(t(`errors:${code}`), t(message), 'error')\r\n      return {}\r\n    }\r\n    return nursingAssigns\r\n  }\r\n\r\n  const onDelete = async () => {\r\n    let [error, result]: any[] = await to(nursingAssignService.delete({ ids: selectedIds }));\r\n    if (error) {\r\n      return notify(t(`errors:${error.code}`), t(`${error.message}`), 'error')\r\n    }\r\n    notify(t(\"message.recordDeleted\"));\r\n    if (tableRef.current !== null) {\r\n      tableRef.current.reload()\r\n    }\r\n    setSelectedIds([])\r\n    setHiddenDeleteBtn(true)\r\n  }\r\n\r\n  const renderDeleteDialog = () => {\r\n    return (\r\n      <ConfirmDialog\r\n        ref={confirmRef}\r\n        onSubmit={onDelete}\r\n        title={t('deleteItem')}\r\n        content={t('message.deleteConfirm')}\r\n      />\r\n    )\r\n  }\r\n\r\n  return <Layout>\r\n    <div className=\"content\">\r\n      <Button hidden={!createPer} onClick={() => redirect(\"frontend.admin.nursingAssignments.create\")} type=\"primary\" className='btn-top'>\r\n        <PlusCircleOutlined />\r\n        {t('create')}\r\n      </Button>\r\n\r\n      <Button danger onClick={() => { if (confirmRef.current) confirmRef.current.show() }} className='btn-top' hidden={hiddenDeleteBtn || !deletePer}>\r\n        <DeleteOutlined />\r\n        {t('delete')}\r\n      </Button>\r\n      \r\n      <GridTable\r\n        ref={tableRef}\r\n        columns={columns}\r\n        data={nursingAssigns}\r\n        rowSelection={{selectedRowKeys: selectedIds, onChange: (data: any[]) => onChangeSelection(data) }}\r\n        fetchData={fetchData}\r\n        total={total}\r\n      />\r\n      {renderDeleteDialog()}\r\n    </div>\r\n  </Layout>\r\n}\r\n\r\nIndex.getInitialProps = async (ctx: any) => {\r\n  let nursingAssignService = new NursingAssignService(ctx)\r\n  let defaultOptions = {\r\n    filters: [],\r\n    sorting: []\r\n  }\r\n  let query = ctx.query\r\n  let filters = GridTableHelper.getOptions(query, defaultOptions);\r\n  let [error, nursingAssigns]: any[] = await to(nursingAssignService.index(filters))\r\n  return {\r\n    namespacesRequired: ['common', 'pages', 'menu'],\r\n    error: error,\r\n    nursingAssigns: useBaseHook.getData(nursingAssigns, \"data\", []),\r\n    total: useBaseHook.getData(nursingAssigns, \"total\", 0),\r\n    defaultQuery: {\r\n      filters: GridTableHelper.makeQuery(filters)\r\n    }\r\n  }\r\n}\r\nIndex.permissions = {\r\n  \"admin.nursingAssignments\": \"R\"\r\n};\r\nexport default Index"]},"metadata":{},"sourceType":"module"}