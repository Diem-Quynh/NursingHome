{"ast":null,"code":"var _jsxFileName = \"E:\\\\DATN\\\\nursinghome\\\\themes\\\\components\\\\Errors\\\\403.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport useBaseHook from 'themes/hooks/BaseHooks';\nimport { Result, Button } from 'antd';\n\nconst Error = ({\n  permissions\n}) => {\n  const {\n    t,\n    router\n  } = useBaseHook();\n  let subTitle = \"\";\n\n  if (permissions) {\n    subTitle = t(\"pages:errors.403.detail\") + 'root, ';\n\n    for (const iterator of permissions) {\n      const permission = iterator['permission'];\n      const requirePermission = iterator['requirePermission'];\n      const userPermission = iterator['userPermission'];\n      subTitle = subTitle + t('common:or') + ' ' + t(\"pages:errors.403.permissionDetail\", {\n        permission,\n        requirePermission,\n        userPermission\n      });\n    }\n  }\n\n  return __jsx(Result, {\n    status: \"403\",\n    title: t(\"pages:errors.403.title\"),\n    subTitle: __jsx(\"div\", {\n      style: {\n        width: '80%',\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 19\n      }\n    }, t(\"pages:errors.403.description\"), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 103\n      }\n    }), subTitle),\n    extra: __jsx(Button, {\n      type: \"primary\",\n      onClick: () => router.back(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 16\n      }\n    }, t(\"back\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 12\n    }\n  });\n};\n\nError.getInitialProps = () => {\n  return {\n    namespacesRequired: ['common', 'pages', 'menu']\n  };\n};\n\nexport default Error;","map":{"version":3,"sources":["E:/DATN/nursinghome/themes/components/Errors/403.tsx"],"names":["useBaseHook","Result","Button","Error","permissions","t","router","subTitle","iterator","permission","requirePermission","userPermission","width","textAlign","back","getInitialProps","namespacesRequired"],"mappings":";;;AAAA,OAAOA,WAAP,MAAwB,wBAAxB;AACA,SAASC,MAAT,EAAiBC,MAAjB,QAA+B,MAA/B;;AAGA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA4C;AACtD,QAAM;AAAEC,IAAAA,CAAF;AAAKC,IAAAA;AAAL,MAAgBN,WAAW,EAAjC;AACA,MAAIO,QAAQ,GAAG,EAAf;;AACA,MAAIH,WAAJ,EAAiB;AACbG,IAAAA,QAAQ,GAAGF,CAAC,CAAC,yBAAD,CAAD,GAA+B,QAA1C;;AACA,SAAK,MAAMG,QAAX,IAAuBJ,WAAvB,EAAoC;AAChC,YAAMK,UAAU,GAAGD,QAAQ,CAAC,YAAD,CAA3B;AACA,YAAME,iBAAiB,GAAGF,QAAQ,CAAC,mBAAD,CAAlC;AACA,YAAMG,cAAc,GAAGH,QAAQ,CAAC,gBAAD,CAA/B;AACAD,MAAAA,QAAQ,GAAGA,QAAQ,GAAGF,CAAC,CAAC,WAAD,CAAZ,GAA2B,GAA3B,GAAiCA,CAAC,CAAC,mCAAD,EAAsC;AAACI,QAAAA,UAAD;AAAaC,QAAAA,iBAAb;AAAgCC,QAAAA;AAAhC,OAAtC,CAA7C;AACH;AACJ;;AACD,SAAO,MAAC,MAAD;AACH,IAAA,MAAM,EAAC,KADJ;AAEH,IAAA,KAAK,EAAEN,CAAC,CAAC,wBAAD,CAFL;AAGH,IAAA,QAAQ,EAAE;AAAK,MAAA,KAAK,EAAE;AAAEO,QAAAA,KAAK,EAAC,KAAR;AAAeC,QAAAA,SAAS,EAAC;AAAzB,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkDR,CAAC,CAAC,8BAAD,CAAnD,EAAoF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAApF,EAA2FE,QAA3F,CAHP;AAIH,IAAA,KAAK,EAAE,MAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAuB,MAAA,OAAO,EAAE,MAAMD,MAAM,CAACQ,IAAP,EAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsDT,CAAC,CAAC,MAAD,CAAvD,CAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAMH,CAlBD;;AAoBAF,KAAK,CAACY,eAAN,GAAwB,MAAM;AAC1B,SAAO;AACHC,IAAAA,kBAAkB,EAAE,CAAC,QAAD,EAAW,OAAX,EAAoB,MAApB;AADjB,GAAP;AAGH,CAJD;;AAKA,eAAeb,KAAf","sourcesContent":["import useBaseHook from 'themes/hooks/BaseHooks'\r\nimport { Result, Button } from 'antd';\r\nimport { Object } from 'lodash';\r\n\r\nconst Error = ({ permissions } : { permissions?: [] }) => {\r\n    const { t, router } = useBaseHook()\r\n    let subTitle = \"\"\r\n    if (permissions) {\r\n        subTitle = t(\"pages:errors.403.detail\") + 'root, '\r\n        for (const iterator of permissions) {\r\n            const permission = iterator['permission']\r\n            const requirePermission = iterator['requirePermission']\r\n            const userPermission = iterator['userPermission']\r\n            subTitle = subTitle + t('common:or')+ ' ' + t(\"pages:errors.403.permissionDetail\", {permission, requirePermission, userPermission})\r\n        }\r\n    }\r\n    return <Result\r\n        status=\"403\"\r\n        title={t(\"pages:errors.403.title\")}\r\n        subTitle={<div style={{ width:'80%', textAlign:'center' }}>{t(\"pages:errors.403.description\")}<br />{subTitle}</div>}\r\n        extra={<Button type=\"primary\" onClick={() => router.back()}>{t(\"back\")}</Button>}\r\n    />\r\n}\r\n\r\nError.getInitialProps = () => {\r\n    return {\r\n        namespacesRequired: ['common', 'pages', 'menu']\r\n    }\r\n}\r\nexport default Error\r\n"]},"metadata":{},"sourceType":"module"}