{"ast":null,"code":"var __jsx = React.createElement;\nimport { NProgress } from '@tanem/react-nprogress';\nimport React, { useEffect, useState } from 'react';\nimport { useRouter } from 'next/router';\n/* Router.onRouteChangeStart = () => {\r\n  console.log(\"vao...\")\r\n  NProgress.start();\r\n};\r\n\r\nRouter.onRouteChangeComplete = () => {\r\n  console.log(\"vao...2\")\r\n  NProgress.done();\r\n};\r\n\r\nRouter.onRouteChangeError = () => {\r\n  NProgress.done();\r\n};\r\n */\n\nvar Loading = function Loading() {\n  var router = useRouter();\n\n  var _useState = useState(false),\n      isRouteChanging = _useState[0],\n      setIsRouteChanging = _useState[1];\n\n  var onStart = function onStart() {\n    setIsRouteChanging(true);\n  };\n\n  var onEnd = function onEnd() {\n    setIsRouteChanging(false);\n  };\n\n  useEffect(function () {\n    router.events.on('routeChangeStart', onStart);\n    router.events.on('routeChangeComplete', onEnd);\n    router.events.on('routeChangeError', onEnd);\n    return function () {\n      router.events.off('routeChangeStart', onStart);\n      router.events.off('routeChangeComplete', onEnd);\n      router.events.off('routeChangeError', onEnd);\n    };\n  }, []);\n  return __jsx(NProgress, {\n    isAnimating: isRouteChanging,\n    key: \"loading\"\n  }, function (_ref) {\n    var isFinished = _ref.isFinished,\n        progress = _ref.progress,\n        animationDuration = _ref.animationDuration;\n    return __jsx(\"div\", {\n      style: {\n        opacity: isFinished ? 0 : 1,\n        pointerEvents: 'none',\n        transition: \"opacity \".concat(animationDuration, \"ms linear\")\n      }\n    }, __jsx(\"div\", {\n      style: {\n        background: '#29d',\n        height: 2,\n        left: 0,\n        marginLeft: \"\".concat((-1 + progress) * 100, \"%\"),\n        position: 'fixed',\n        top: 0,\n        transition: \"margin-left \".concat(animationDuration, \"ms linear\"),\n        width: '100%',\n        zIndex: 1031\n      }\n    }, __jsx(\"div\", {\n      style: {\n        boxShadow: '0 0 10px #29d, 0 0 5px #29d',\n        display: 'block',\n        height: '100%',\n        opacity: 1,\n        position: 'absolute',\n        right: 0,\n        transform: 'rotate(3deg) translate(0px, -4px)',\n        width: 100\n      }\n    })));\n  });\n};\n\nexport default Loading;","map":{"version":3,"sources":["E:/nursinghome_github/themes/components/Loading/index.tsx"],"names":["NProgress","React","useEffect","useState","useRouter","Loading","router","isRouteChanging","setIsRouteChanging","onStart","onEnd","events","on","off","isFinished","progress","animationDuration","opacity","pointerEvents","transition","background","height","left","marginLeft","position","top","width","zIndex","boxShadow","display","right","transform"],"mappings":";AAAA,SAASA,SAAT,QAA0B,wBAA1B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA;;;;;;;;;;;;;;;AAcA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAClB,MAAMC,MAAM,GAAGF,SAAS,EAAxB;;AADkB,kBAE4BD,QAAQ,CAAC,KAAD,CAFpC;AAAA,MAEXI,eAFW;AAAA,MAEMC,kBAFN;;AAGlB,MAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAClBD,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACH,GAFD;;AAGA,MAAME,KAAK,GAAG,SAARA,KAAQ,GAAM;AAChBF,IAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACH,GAFD;;AAGAN,EAAAA,SAAS,CAAC,YAAM;AACZI,IAAAA,MAAM,CAACK,MAAP,CAAcC,EAAd,CAAiB,kBAAjB,EAAqCH,OAArC;AACAH,IAAAA,MAAM,CAACK,MAAP,CAAcC,EAAd,CAAiB,qBAAjB,EAAwCF,KAAxC;AACAJ,IAAAA,MAAM,CAACK,MAAP,CAAcC,EAAd,CAAiB,kBAAjB,EAAqCF,KAArC;AACA,WAAO,YAAM;AACTJ,MAAAA,MAAM,CAACK,MAAP,CAAcE,GAAd,CAAkB,kBAAlB,EAAsCJ,OAAtC;AACAH,MAAAA,MAAM,CAACK,MAAP,CAAcE,GAAd,CAAkB,qBAAlB,EAAyCH,KAAzC;AACAJ,MAAAA,MAAM,CAACK,MAAP,CAAcE,GAAd,CAAkB,kBAAlB,EAAsCH,KAAtC;AACH,KAJD;AAKH,GATQ,EASN,EATM,CAAT;AAUA,SAAO,MAAC,SAAD;AAAW,IAAA,WAAW,EAAEH,eAAxB;AAAyC,IAAA,GAAG,EAAC;AAA7C,KACF;AAAA,QAAGO,UAAH,QAAGA,UAAH;AAAA,QAAeC,QAAf,QAAeA,QAAf;AAAA,QAAyBC,iBAAzB,QAAyBA,iBAAzB;AAAA,WACG;AACI,MAAA,KAAK,EAAE;AACHC,QAAAA,OAAO,EAAEH,UAAU,GAAG,CAAH,GAAO,CADvB;AAEHI,QAAAA,aAAa,EAAE,MAFZ;AAGHC,QAAAA,UAAU,oBAAaH,iBAAb;AAHP;AADX,OAOI;AACI,MAAA,KAAK,EAAE;AACHI,QAAAA,UAAU,EAAE,MADT;AAEHC,QAAAA,MAAM,EAAE,CAFL;AAGHC,QAAAA,IAAI,EAAE,CAHH;AAIHC,QAAAA,UAAU,YAAK,CAAC,CAAC,CAAD,GAAKR,QAAN,IAAkB,GAAvB,MAJP;AAKHS,QAAAA,QAAQ,EAAE,OALP;AAMHC,QAAAA,GAAG,EAAE,CANF;AAOHN,QAAAA,UAAU,wBAAiBH,iBAAjB,cAPP;AAQHU,QAAAA,KAAK,EAAE,MARJ;AASHC,QAAAA,MAAM,EAAE;AATL;AADX,OAaI;AACI,MAAA,KAAK,EAAE;AACHC,QAAAA,SAAS,EAAE,6BADR;AAEHC,QAAAA,OAAO,EAAE,OAFN;AAGHR,QAAAA,MAAM,EAAE,MAHL;AAIHJ,QAAAA,OAAO,EAAE,CAJN;AAKHO,QAAAA,QAAQ,EAAE,UALP;AAMHM,QAAAA,KAAK,EAAE,CANJ;AAOHC,QAAAA,SAAS,EAAE,mCAPR;AAQHL,QAAAA,KAAK,EAAE;AARJ;AADX,MAbJ,CAPJ,CADH;AAAA,GADE,CAAP;AAsCH,CAzDD;;AA2DA,eAAerB,OAAf","sourcesContent":["import { NProgress } from '@tanem/react-nprogress'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useRouter } from 'next/router';\r\n\r\n/* Router.onRouteChangeStart = () => {\r\n  console.log(\"vao...\")\r\n  NProgress.start();\r\n};\r\n\r\nRouter.onRouteChangeComplete = () => {\r\n  console.log(\"vao...2\")\r\n  NProgress.done();\r\n};\r\n\r\nRouter.onRouteChangeError = () => {\r\n  NProgress.done();\r\n};\r\n */\r\nconst Loading = () => {\r\n    const router = useRouter()\r\n    const [isRouteChanging, setIsRouteChanging] = useState(false)\r\n    const onStart = () => {\r\n        setIsRouteChanging(true)\r\n    }\r\n    const onEnd = () => {\r\n        setIsRouteChanging(false)\r\n    }\r\n    useEffect(() => {\r\n        router.events.on('routeChangeStart', onStart)\r\n        router.events.on('routeChangeComplete', onEnd)\r\n        router.events.on('routeChangeError', onEnd)\r\n        return () => {\r\n            router.events.off('routeChangeStart', onStart)\r\n            router.events.off('routeChangeComplete', onEnd)\r\n            router.events.off('routeChangeError', onEnd)\r\n        }\r\n    }, [])\r\n    return <NProgress isAnimating={isRouteChanging} key=\"loading\">\r\n        {({ isFinished, progress, animationDuration }) => (\r\n            <div\r\n                style={{\r\n                    opacity: isFinished ? 0 : 1,\r\n                    pointerEvents: 'none',\r\n                    transition: `opacity ${animationDuration}ms linear`,\r\n                }}\r\n            >\r\n                <div\r\n                    style={{\r\n                        background: '#29d',\r\n                        height: 2,\r\n                        left: 0,\r\n                        marginLeft: `${(-1 + progress) * 100}%`,\r\n                        position: 'fixed',\r\n                        top: 0,\r\n                        transition: `margin-left ${animationDuration}ms linear`,\r\n                        width: '100%',\r\n                        zIndex: 1031,\r\n                    }}\r\n                >\r\n                    <div\r\n                        style={{\r\n                            boxShadow: '0 0 10px #29d, 0 0 5px #29d',\r\n                            display: 'block',\r\n                            height: '100%',\r\n                            opacity: 1,\r\n                            position: 'absolute',\r\n                            right: 0,\r\n                            transform: 'rotate(3deg) translate(0px, -4px)',\r\n                            width: 100,\r\n                        }}\r\n                    />\r\n                </div>\r\n            </div>\r\n        )}\r\n    </NProgress>\r\n}\r\n\r\nexport default Loading"]},"metadata":{},"sourceType":"module"}