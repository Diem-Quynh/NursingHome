{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\DATN\\\\nursinghome\\\\pages\\\\admin\\\\beds\\\\edit.tsx\";\n\nvar __jsx = React.createElement;\nimport ConfirmDialog from 'themes/components/Dialogs/ConfirmDialog';\nimport React, { useState } from 'react';\nimport Layout from 'themes/layouts/Admin';\nimport { Button, Form, Input, Select, InputNumber, Radio } from 'antd';\nimport BedService from 'themes/services/api/BedService';\nimport RoomService from 'themes/services/api/RoomService';\nimport _ from 'lodash';\nimport to from 'await-to-js';\nimport useBaseHook from 'themes/hooks/BaseHooks';\nimport { DeleteFilled, SaveFilled, LeftCircleFilled } from '@ant-design/icons';\nimport usePermissionHook from \"themes/hooks/PermissionHook\";\nvar Option = Select.Option;\nvar formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 4\n    }\n  },\n  wrapperCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 18\n    }\n  }\n};\n\nvar Edit = function Edit(_ref) {\n  var rooms = _ref.rooms,\n      bed = _ref.bed;\n\n  var _useBaseHook = useBaseHook(),\n      t = _useBaseHook.t,\n      notify = _useBaseHook.notify,\n      redirect = _useBaseHook.redirect,\n      setStore = _useBaseHook.setStore,\n      getAuth = _useBaseHook.getAuth,\n      getStore = _useBaseHook.getStore;\n\n  var _useState = useState(false),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  var _useState2 = useState(false),\n      modalVisible = _useState2[0],\n      setModalVisible = _useState2[1];\n\n  var _Form$useForm = Form.useForm(),\n      _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n      form = _Form$useForm2[0];\n\n  var bedService = new BedService();\n  var confirmRef = React.createRef();\n\n  var _usePermissionHook = usePermissionHook(),\n      checkPermission = _usePermissionHook.checkPermission;\n\n  var deletePer = checkPermission({\n    \"admin.beds\": \"D\"\n  }); //submit form\n\n  var onFinish = function onFinish(values) {\n    var _await$to, _await$to2, error, result;\n\n    return _regeneratorRuntime.async(function onFinish$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setLoading(true);\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(to(bedService.edit({\n              id: bed.id,\n              values: values\n            })));\n\n          case 3:\n            _await$to = _context.sent;\n            _await$to2 = _slicedToArray(_await$to, 2);\n            error = _await$to2[0];\n            result = _await$to2[1];\n            setLoading(false);\n\n            if (!error) {\n              _context.next = 10;\n              break;\n            }\n\n            return _context.abrupt(\"return\", notify(t(\"errors:\".concat(error.code)), t(error.message), 'error'));\n\n          case 10:\n            notify(t(\"message.recordUpdated\"));\n            redirect(\"frontend.admin.beds.index\");\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var onDelete = function onDelete() {\n    var _await$to3, _await$to4, error, result;\n\n    return _regeneratorRuntime.async(function onDelete$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(to(bedService[\"delete\"]({\n              ids: [bed.id]\n            })));\n\n          case 2:\n            _await$to3 = _context2.sent;\n            _await$to4 = _slicedToArray(_await$to3, 2);\n            error = _await$to4[0];\n            result = _await$to4[1];\n\n            if (!error) {\n              _context2.next = 8;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", notify(t(\"errors:\".concat(error.code)), t(\"\".concat(error.message)), 'error'));\n\n          case 8:\n            notify(t('message.recordDeleted'));\n            redirect(\"frontend.admin.beds.index\");\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }; //render option\n\n\n  var renderOption = function renderOption() {\n    var result = [];\n    rooms.map(function (item) {\n      result.push(__jsx(Option, {\n        value: item.id,\n        key: item.id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }\n      }, item.code));\n    });\n    return result;\n  };\n\n  var renderDeleteDialog = function renderDeleteDialog() {\n    return __jsx(ConfirmDialog, {\n      ref: confirmRef,\n      onSubmit: onDelete,\n      title: t('deleteItem'),\n      content: t('message.deleteConfirm'),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }\n    });\n  };\n\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 10\n    }\n  }, __jsx(\"div\", {\n    className: \"content\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }\n  }, __jsx(Form, _extends({}, formItemLayout, {\n    form: form,\n    name: \"createBed\",\n    initialValues: {\n      roomId: bed.roomId,\n      bedId: bed.bedId,\n      status: bed.status,\n      note: bed.note\n    },\n    onFinish: onFinish,\n    scrollToFirstError: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }), __jsx(Form.Item, {\n    label: t(\"beds.roomCode\"),\n    name: \"roomId\",\n    rules: [{\n      required: true,\n      message: t('form.required')\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, __jsx(Select, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, renderOption())), __jsx(Form.Item, {\n    label: t(\"beds.bedId\"),\n    name: \"bedId\",\n    rules: [{\n      required: true,\n      message: t('form.required')\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, __jsx(InputNumber, {\n    style: {\n      width: \"100%\"\n    },\n    min: 1,\n    defaultValue: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  })), __jsx(Form.Item, {\n    label: t(\"status\"),\n    name: \"status\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, __jsx(Radio.Group, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  }, __jsx(Radio, {\n    value: 0,\n    key: 0,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }, t(\"beds.empty\")), __jsx(Radio, {\n    value: 1,\n    key: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }, t(\"beds.full\")))), __jsx(Form.Item, {\n    label: t(\"note\"),\n    name: \"note\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }, __jsx(Input, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }\n  })), __jsx(Form.Item, {\n    wrapperCol: {\n      span: 24\n    },\n    style: {\n      textAlign: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    onClick: function onClick() {\n      return redirect(\"frontend.admin.beds.index\");\n    },\n    style: {\n      marginRight: 8\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 11\n    }\n  }, __jsx(LeftCircleFilled, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  }), \" \", t('cancel')), __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: loading,\n    style: {\n      marginRight: 8\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  }, __jsx(SaveFilled, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  }), \" \", t('submit')), __jsx(Button, {\n    hidden: !deletePer,\n    danger: true,\n    onClick: function onClick() {\n      if (confirmRef.current) confirmRef.current.show(bed.id);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 11\n    }\n  }, __jsx(DeleteFilled, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }), \" \", t('deleteItem')))), renderDeleteDialog()));\n};\n\nEdit.getInitialProps = function _callee(ctx) {\n  var roomService, bedService, query, error, _await$to5, _await$to6, bedError, bed, _await$to7, _await$to8, errorRoom, rooms;\n\n  return _regeneratorRuntime.async(function _callee$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          roomService = new RoomService(ctx);\n          bedService = new BedService(ctx);\n          query = ctx.query;\n\n          if (!query.id) {\n            //error missing id\n            error = {\n              code: 9996,\n              message: 'missing ID'\n            };\n          }\n\n          _context3.next = 6;\n          return _regeneratorRuntime.awrap(to(bedService.detail({\n            id: query.id\n          })));\n\n        case 6:\n          _await$to5 = _context3.sent;\n          _await$to6 = _slicedToArray(_await$to5, 2);\n          bedError = _await$to6[0];\n          bed = _await$to6[1];\n          _context3.next = 12;\n          return _regeneratorRuntime.awrap(to(roomService.index({\n            pageSize: -1\n          })));\n\n        case 12:\n          _await$to7 = _context3.sent;\n          _await$to8 = _slicedToArray(_await$to7, 2);\n          errorRoom = _await$to8[0];\n          rooms = _await$to8[1];\n          return _context3.abrupt(\"return\", {\n            namespacesRequired: ['common', 'pages', 'menu'],\n            error: error,\n            bed: bed,\n            rooms: _.get(rooms, \"data\", [])\n          });\n\n        case 17:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nEdit.permissions = {\n  \"admin.beds\": \"U\"\n};\nexport default Edit;","map":{"version":3,"sources":["E:/DATN/nursinghome/pages/admin/beds/edit.tsx"],"names":["ConfirmDialog","React","useState","Layout","Button","Form","Input","Select","InputNumber","Radio","BedService","RoomService","_","to","useBaseHook","DeleteFilled","SaveFilled","LeftCircleFilled","usePermissionHook","Option","formItemLayout","labelCol","xs","span","sm","wrapperCol","Edit","rooms","bed","t","notify","redirect","setStore","getAuth","getStore","loading","setLoading","modalVisible","setModalVisible","useForm","form","bedService","confirmRef","createRef","checkPermission","deletePer","onFinish","values","edit","id","error","result","code","message","onDelete","ids","renderOption","map","item","push","renderDeleteDialog","roomId","bedId","status","note","required","width","textAlign","marginRight","current","show","getInitialProps","ctx","roomService","query","detail","bedError","index","pageSize","errorRoom","namespacesRequired","get","permissions"],"mappings":"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","sourcesContent":["import ConfirmDialog from 'themes/components/Dialogs/ConfirmDialog';\r\n\r\nimport React, { useState } from 'react'\r\nimport Layout from 'themes/layouts/Admin'\r\nimport { Button, Row, Col, Form, Input, Select, Modal, InputNumber, Radio } from 'antd';\r\nimport BedService from 'themes/services/api/BedService';\r\nimport RoomService from 'themes/services/api/RoomService';\r\nimport _ from 'lodash';\r\nimport to from 'await-to-js'\r\nimport useBaseHook from 'themes/hooks/BaseHooks'\r\nimport { DeleteFilled, SaveFilled, LeftCircleFilled, CopyFilled } from '@ant-design/icons';\r\nimport usePermissionHook from \"themes/hooks/PermissionHook\";\r\n\r\nconst { Option } = Select\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 4 },\r\n  },\r\n  wrapperCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 18 },\r\n  },\r\n};\r\n\r\nconst Edit = ({ rooms, bed }: { rooms: Room[], bed: Bed }) => {\r\n  const { t, notify, redirect, setStore, getAuth, getStore } = useBaseHook();\r\n  const [loading, setLoading] = useState(false);\r\n  const [modalVisible, setModalVisible] = useState(false)\r\n  const [form] = Form.useForm();\r\n  const bedService = new BedService()\r\n  const confirmRef = React.createRef<ConfirmDialog>()\r\n\r\n  const { checkPermission } = usePermissionHook();\r\n  const deletePer = checkPermission({\r\n    \"admin.beds\": \"D\"\r\n  })\r\n  //submit form\r\n  const onFinish = async (values: any): Promise<void> => {\r\n    setLoading(true)\r\n    let [error, result]: any[] = await to(bedService.edit({\r\n      id: bed.id,\r\n      values\r\n    }));\r\n    setLoading(false)\r\n\r\n    if (error) {\r\n      return notify(t(`errors:${error.code}`), t(error.message), 'error')\r\n    }\r\n    notify(t(\"message.recordUpdated\"))\r\n    redirect(\"frontend.admin.beds.index\")\r\n  }\r\n\r\n  const onDelete = async (): Promise<void> => {\r\n    let [error, result]: any[] = await to(bedService.delete({ ids: [bed.id] }));\r\n\r\n    if (error) {\r\n      return notify(t(`errors:${error.code}`), t(`${error.message}`), 'error')\r\n    }\r\n    notify(t('message.recordDeleted'))\r\n    redirect(\"frontend.admin.beds.index\")\r\n  }\r\n\r\n  //render option\r\n  const renderOption = (): JSX.Element[] => {\r\n    let result: JSX.Element[] = [];\r\n    rooms.map(item => {\r\n      result.push(\r\n        <Option value={item.id} key={item.id}>{item.code}</Option>\r\n      )\r\n    })\r\n    return result;\r\n  }\r\n  const renderDeleteDialog = () => {\r\n    return (\r\n      <ConfirmDialog\r\n        ref={confirmRef}\r\n        onSubmit={onDelete}\r\n        title={t('deleteItem')}\r\n        content={t('message.deleteConfirm')}\r\n      />\r\n    )\r\n  }\r\n\r\n  return <Layout>\r\n    <div className=\"content\">\r\n      <Form\r\n        {...formItemLayout}\r\n        form={form}\r\n        name=\"createBed\"\r\n        initialValues={{\r\n          roomId: bed.roomId,\r\n          bedId: bed.bedId,\r\n          status: bed.status,\r\n          note: bed.note\r\n        }}\r\n        onFinish={onFinish}\r\n        scrollToFirstError\r\n      >\r\n        <Form.Item\r\n          label={t(\"beds.roomCode\")}\r\n          name=\"roomId\"\r\n          rules={[\r\n            { required: true, message: t('form.required')}\r\n          ]}\r\n        >\r\n          <Select>\r\n            {renderOption()}\r\n          </Select>\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={t(\"beds.bedId\")}\r\n          name=\"bedId\"\r\n          rules={[\r\n            { required: true, message: t('form.required') },\r\n          ]}\r\n        >\r\n          <InputNumber  style={{ width: \"100%\" }} min={1} defaultValue={1} />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={t(\"status\")}\r\n          name=\"status\"\r\n        >\r\n          <Radio.Group>\r\n            <Radio value={0} key={0}>{t(\"beds.empty\")}</Radio>\r\n            <Radio value={1} key={1}>{t(\"beds.full\")}</Radio>\r\n          </Radio.Group>\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={t(\"note\")}\r\n          name=\"note\"\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item wrapperCol={{ span: 24 }} style={{ textAlign: \"center\" }}>\r\n          <Button onClick={() => redirect(\"frontend.admin.beds.index\")} style={{ marginRight: 8 }}>\r\n            <LeftCircleFilled /> {t('cancel')}\r\n          </Button>\r\n\r\n          <Button type=\"primary\" htmlType=\"submit\" loading={loading} style={{ marginRight: 8 }}>\r\n            <SaveFilled /> {t('submit')}\r\n          </Button>\r\n          \r\n          <Button hidden={!deletePer} danger onClick={() => { \r\n              if (confirmRef.current) confirmRef.current.show(bed.id) \r\n            }}>\r\n            <DeleteFilled /> {t('deleteItem')}\r\n          </Button>\r\n         \r\n        </Form.Item>\r\n      </Form>\r\n      {renderDeleteDialog()}\r\n    </div>\r\n  </Layout>\r\n}\r\n\r\nEdit.getInitialProps = async (ctx: any) => {\r\n  const roomService = new RoomService(ctx)\r\n  const bedService = new BedService(ctx)\r\n  const query = ctx.query;\r\n  let error: any;\r\n\r\n  if (!query.id) {\r\n    //error missing id\r\n    error = {\r\n      code: 9996,\r\n      message: 'missing ID'\r\n    }\r\n  }\r\n\r\n  let [bedError, bed] = await to(bedService.detail({ id: query.id }));\r\n  const [errorRoom, rooms] = await to(roomService.index({ pageSize: -1 }));\r\n  return {\r\n    namespacesRequired: ['common', 'pages', 'menu'],\r\n    error: error,\r\n    bed: bed,\r\n    rooms: _.get(rooms, \"data\", []),\r\n  }\r\n}\r\nEdit.permissions = {\r\n  \"admin.beds\": \"U\"\r\n};\r\nexport default Edit"]},"metadata":{},"sourceType":"module"}