{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport ConfirmDialog from 'themes/components/Dialogs/ConfirmDialog';\nimport React, { useState } from 'react';\nimport Layout from 'themes/layouts/Admin';\nimport { Button, Form, Input, Select, DatePicker } from 'antd';\nimport DoctorAssignService from 'themes/services/api/DoctorAssignmentService';\nimport RoomService from 'themes/services/api/RoomService';\nimport UserService from 'themes/services/api/UserService';\nimport _ from 'lodash';\nimport to from 'await-to-js';\nimport useBaseHook from 'themes/hooks/BaseHooks';\nimport { DeleteFilled, SaveFilled, LeftCircleFilled } from '@ant-design/icons';\nimport usePermissionHook from \"themes/hooks/PermissionHook\";\nimport moment from 'moment';\nconst {\n  Option\n} = Select;\nconst formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 4\n    }\n  },\n  wrapperCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 18\n    }\n  }\n};\n\nconst Edit = ({\n  rooms,\n  users,\n  doctorAssign,\n  doctorAssignError\n}) => {\n  const {\n    t,\n    notify,\n    redirect,\n    setStore,\n    getAuth,\n    getStore\n  } = useBaseHook();\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const [form] = Form.useForm();\n  const doctorAssignService = new DoctorAssignService();\n  const confirmRef = React.createRef();\n  const {\n    checkPermission\n  } = usePermissionHook();\n  const deletePer = checkPermission({\n    \"admin.doctorAssignments\": \"D\"\n  });\n\n  const DisplayError = err => {\n    return notify(t(`errors:${err.code}`), t(err.message), 'error');\n  }; //submit form\n\n\n  const onFinish = async values => {\n    if (doctorAssignError) return DisplayError(doctorAssignError);\n    setLoading(true);\n    let [error, result] = await to(doctorAssignService.edit({\n      id: doctorAssign.id,\n      values\n    }));\n    setLoading(false);\n    if (error) return DisplayError(error);\n    notify(t(\"message.recordUpdated\"));\n    redirect(\"frontend.admin.doctorAssignments.index\");\n  };\n\n  const onDelete = async () => {\n    if (doctorAssignError) return DisplayError(doctorAssignError);\n    let [error, result] = await to(doctorAssignService.delete({\n      ids: [doctorAssign.id]\n    }));\n    if (error) return DisplayError(error);\n    notify(t('message.recordDeleted'));\n    redirect(\"frontend.admin.doctorAssignments.index\");\n  }; //render option\n\n\n  const renderOptionRoom = () => {\n    let result = [];\n    rooms.map(item => {\n      result.push(__jsx(Option, {\n        value: item.code,\n        key: item.code\n      }, item.code));\n    });\n    return result;\n  };\n\n  const renderOptionUser = () => {\n    let result = [];\n    users.map(item => {\n      result.push(__jsx(Option, {\n        value: item.id,\n        key: item.id\n      }, item.code, \" - \", item.fullname));\n    });\n    return result;\n  };\n\n  const renderDeleteDialog = () => {\n    return __jsx(ConfirmDialog, {\n      ref: confirmRef,\n      onSubmit: onDelete,\n      title: t('deleteItem'),\n      content: t('message.deleteConfirm')\n    });\n  };\n\n  return __jsx(Layout, null, __jsx(\"div\", {\n    className: \"content\"\n  }, __jsx(Form, _extends({}, formItemLayout, {\n    form: form,\n    name: \"createPatient\",\n    initialValues: {\n      doctorId: doctorAssign.doctorId,\n      roomCode: doctorAssign.roomCode,\n      dateBegin: doctorAssign.dateBegin ? moment(doctorAssign.dateBegin).subtract(7, 'h') : \"\",\n      dateEnd: doctorAssign.dateEnd ? moment(doctorAssign.dateEnd).subtract(7, 'h') : \"\",\n      note: doctorAssign.note\n    },\n    onFinish: onFinish,\n    scrollToFirstError: true\n  }), __jsx(Form.Item, {\n    label: t(\"doctor\"),\n    name: \"doctorId\",\n    rules: [{\n      required: true,\n      message: t('form.required')\n    }]\n  }, __jsx(Select, {\n    showSearch: true,\n    placeholder: t('placeholder.user'),\n    filterOption: (input, option) => {\n      return option.children[2].toLowerCase().indexOf(input.toLowerCase()) >= 0;\n    }\n  }, renderOptionUser())), __jsx(Form.Item, {\n    label: t(\"room\"),\n    name: \"roomCode\",\n    rules: [{\n      required: true,\n      message: t('form.required')\n    }]\n  }, __jsx(Select, {\n    showSearch: true,\n    placeholder: t('placeholder.room')\n  }, renderOptionRoom())), __jsx(Form.Item, {\n    label: t(\"doctorAssignments.dateBegin\"),\n    name: \"dateBegin\",\n    rules: [{\n      required: true,\n      message: t('form.required')\n    }]\n  }, __jsx(DatePicker, {\n    format: 'YYYY-MM-DD',\n    showTime: false,\n    placeholder: t('placeholder.date')\n  })), __jsx(Form.Item, {\n    label: t(\"doctorAssignments.dateEnd\"),\n    name: \"dateEnd\"\n  }, __jsx(DatePicker, {\n    format: 'YYYY-MM-DD',\n    showTime: false,\n    placeholder: t('placeholder.date')\n  })), __jsx(Form.Item, {\n    label: t(\"note\"),\n    name: \"note\"\n  }, __jsx(Input, null)), __jsx(Form.Item, {\n    wrapperCol: {\n      span: 24\n    },\n    style: {\n      textAlign: \"center\"\n    }\n  }, __jsx(Button, {\n    onClick: () => redirect(\"frontend.admin.doctorAssignments.index\"),\n    style: {\n      marginRight: 8\n    }\n  }, __jsx(LeftCircleFilled, null), \" \", t('cancel')), __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: loading,\n    style: {\n      marginRight: 8\n    }\n  }, __jsx(SaveFilled, null), \" \", t('submit')), __jsx(Button, {\n    hidden: !deletePer,\n    danger: true,\n    onClick: () => {\n      if (confirmRef.current) confirmRef.current.show(doctorAssign.id);\n    }\n  }, __jsx(DeleteFilled, null), \" \", t('deleteItem')))), renderDeleteDialog()));\n};\n\nEdit.getInitialProps = async ctx => {\n  const doctorAssignService = new DoctorAssignService(ctx);\n  const roomService = new RoomService(ctx);\n  const userService = new UserService(ctx);\n  const query = ctx.query;\n  let error;\n\n  if (!query.id) {\n    //error missing id\n    error = {\n      code: 9996,\n      message: 'missing ID'\n    };\n  }\n\n  let [doctorAssignError, doctorAssign] = await to(doctorAssignService.detail({\n    id: query.id\n  }));\n  if (doctorAssignError) doctorAssign = {};\n  const [errorRoom, rooms] = await to(roomService.index({\n    pageSize: -1\n  }));\n  const filters = JSON.stringify({\n    field: \"position\",\n    operator: \"contains\",\n    value: \"Bác sỹ\"\n  });\n  const [errorUsers, users] = await to(userService.index({\n    pageSize: -1,\n    filters: [filters]\n  }));\n  return {\n    namespacesRequired: ['common', 'pages', 'menu', 'errors'],\n    error: error,\n    doctorAssign: doctorAssign,\n    doctorAssignError: doctorAssignError,\n    rooms: _.get(rooms, \"data\", []),\n    users: _.get(users, \"data\", [])\n  };\n};\n\nEdit.permissions = {\n  \"admin.doctorAssignments\": \"U\"\n};\nexport default Edit;","map":{"version":3,"sources":["E:/nursinghome_github/pages/admin/doctorAssignments/edit.tsx"],"names":["ConfirmDialog","React","useState","Layout","Button","Form","Input","Select","DatePicker","DoctorAssignService","RoomService","UserService","_","to","useBaseHook","DeleteFilled","SaveFilled","LeftCircleFilled","usePermissionHook","moment","Option","formItemLayout","labelCol","xs","span","sm","wrapperCol","Edit","rooms","users","doctorAssign","doctorAssignError","t","notify","redirect","setStore","getAuth","getStore","loading","setLoading","form","useForm","doctorAssignService","confirmRef","createRef","checkPermission","deletePer","DisplayError","err","code","message","onFinish","values","error","result","edit","id","onDelete","delete","ids","renderOptionRoom","map","item","push","renderOptionUser","fullname","renderDeleteDialog","doctorId","roomCode","dateBegin","subtract","dateEnd","note","required","input","option","children","toLowerCase","indexOf","textAlign","marginRight","current","show","getInitialProps","ctx","roomService","userService","query","detail","errorRoom","index","pageSize","filters","JSON","stringify","field","operator","value","errorUsers","namespacesRequired","get","permissions"],"mappings":"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","sourcesContent":["import ConfirmDialog from 'themes/components/Dialogs/ConfirmDialog';\r\n\r\nimport React, { useState } from 'react'\r\nimport Layout from 'themes/layouts/Admin'\r\nimport { Button, Row, Col, Form, Input, Select, Modal, InputNumber, Radio, DatePicker } from 'antd';\r\nimport DoctorAssignService from 'themes/services/api/DoctorAssignmentService';\r\nimport RoomService from 'themes/services/api/RoomService';\r\nimport UserService from 'themes/services/api/UserService';\r\nimport _ from 'lodash';\r\nimport to from 'await-to-js'\r\nimport useBaseHook from 'themes/hooks/BaseHooks'\r\nimport { DeleteFilled, SaveFilled, LeftCircleFilled, CopyFilled } from '@ant-design/icons';\r\nimport usePermissionHook from \"themes/hooks/PermissionHook\";\r\nimport moment from 'moment'\r\n\r\nconst { Option } = Select\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 4 },\r\n  },\r\n  wrapperCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 18 },\r\n  },\r\n};\r\n\r\nconst Edit = ({ rooms, users, doctorAssign, doctorAssignError }: \r\n  { rooms: Room[], users : User[], doctorAssign: DoctorAssignment, doctorAssignError: any }) => {\r\n  const { t, notify, redirect, setStore, getAuth, getStore } = useBaseHook();\r\n  const [loading, setLoading] = useState(false);\r\n  const [form] = Form.useForm();\r\n  const doctorAssignService = new DoctorAssignService()\r\n  const confirmRef = React.createRef<ConfirmDialog>()\r\n\r\n  const { checkPermission } = usePermissionHook();\r\n  const deletePer = checkPermission({\r\n    \"admin.doctorAssignments\": \"D\"\r\n  })\r\n\r\n  const DisplayError = (err: any) => {\r\n    return notify(t(`errors:${err.code}`), t(err.message), 'error')\r\n  }\r\n\r\n  //submit form\r\n  const onFinish = async (values: any): Promise<void> => {\r\n    if(doctorAssignError) return DisplayError(doctorAssignError)\r\n    setLoading(true)\r\n    let [error, result]: any[] = await to(doctorAssignService.edit({\r\n      id: doctorAssign.id,\r\n      values\r\n    }));\r\n    setLoading(false)\r\n    if(error) return DisplayError(error)\r\n    notify(t(\"message.recordUpdated\"))\r\n    redirect(\"frontend.admin.doctorAssignments.index\")\r\n  }\r\n\r\n  const onDelete = async (): Promise<void> => {\r\n    if(doctorAssignError) return DisplayError(doctorAssignError)\r\n    let [error, result]: any[] = await to(doctorAssignService.delete({ ids: [doctorAssign.id] }));\r\n    if(error) return DisplayError(error)\r\n    notify(t('message.recordDeleted'))\r\n    redirect(\"frontend.admin.doctorAssignments.index\")\r\n  }\r\n\r\n  //render option\r\n  const renderOptionRoom = (): JSX.Element[] => {\r\n    let result: JSX.Element[] = [];\r\n    rooms.map(item => {\r\n      result.push(\r\n      <Option value={item.code} key={item.code}>{item.code}</Option>\r\n      )\r\n    })\r\n    return result;\r\n  }\r\n\r\n  const renderOptionUser = (): JSX.Element[] => {\r\n    let result: JSX.Element[] = [];\r\n    users.map(item => {\r\n      result.push(\r\n      <Option value={item.id} key={item.id}>{item.code} - {item.fullname}</Option>\r\n      )\r\n    })\r\n    return result;\r\n  }\r\n\r\n  const renderDeleteDialog = () => {\r\n    return (\r\n      <ConfirmDialog\r\n        ref={confirmRef}\r\n        onSubmit={onDelete}\r\n        title={t('deleteItem')}\r\n        content={t('message.deleteConfirm')}\r\n      />\r\n    )\r\n  }\r\n\r\n  return <Layout>\r\n    <div className=\"content\">\r\n      <Form\r\n        {...formItemLayout}\r\n        form={form}\r\n        name=\"createPatient\"\r\n        initialValues={{\r\n          doctorId: doctorAssign.doctorId,\r\n          roomCode: doctorAssign.roomCode,\r\n          dateBegin: doctorAssign.dateBegin ? moment(doctorAssign.dateBegin).subtract(7,'h') : \"\",\r\n          dateEnd: doctorAssign.dateEnd ? moment(doctorAssign.dateEnd).subtract(7,'h') : \"\",\r\n          note: doctorAssign.note\r\n        }}\r\n        onFinish={onFinish}\r\n        scrollToFirstError\r\n      >\r\n        <Form.Item\r\n          label={t(\"doctor\")}\r\n          name=\"doctorId\"\r\n          rules={[\r\n            { required: true, message: t('form.required') },\r\n          ]}\r\n        >\r\n          <Select \r\n            showSearch\r\n            placeholder = {t('placeholder.user')}\r\n            filterOption={ (input: any, option: any) => {\r\n              return option.children[2].toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n            } }\r\n          >\r\n            {renderOptionUser()}\r\n          </Select>\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={t(\"room\")}\r\n          name=\"roomCode\"\r\n          rules={[\r\n            { required: true, message: t('form.required') },\r\n          ]}\r\n        >\r\n          <Select \r\n            showSearch \r\n            placeholder = {t('placeholder.room')}\r\n          >\r\n            {renderOptionRoom()}\r\n          </Select>\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={t(\"doctorAssignments.dateBegin\")}\r\n          name=\"dateBegin\"\r\n          rules={[\r\n            { required: true, message: t('form.required') },\r\n          ]}\r\n        >\r\n          <DatePicker format={'YYYY-MM-DD'} showTime={false} placeholder={t('placeholder.date')} />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={t(\"doctorAssignments.dateEnd\")}\r\n          name=\"dateEnd\"\r\n        >\r\n          <DatePicker format={'YYYY-MM-DD'} showTime={false} placeholder={t('placeholder.date')} />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={t(\"note\")}\r\n          name=\"note\"\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item wrapperCol={{ span: 24 }} style={{ textAlign: \"center\" }}>\r\n          <Button onClick={() => redirect(\"frontend.admin.doctorAssignments.index\")} style={{ marginRight: 8 }}>\r\n            <LeftCircleFilled /> {t('cancel')}\r\n          </Button>\r\n\r\n          <Button type=\"primary\" htmlType=\"submit\" loading={loading} style={{ marginRight: 8 }}>\r\n            <SaveFilled /> {t('submit')}\r\n          </Button>\r\n          \r\n          <Button hidden={!deletePer} danger onClick={() => { \r\n              if (confirmRef.current) confirmRef.current.show(doctorAssign.id) \r\n            }}>\r\n            <DeleteFilled /> {t('deleteItem')}\r\n          </Button>\r\n         \r\n        </Form.Item>\r\n      </Form>\r\n      {renderDeleteDialog()}\r\n    </div>\r\n  </Layout>\r\n}\r\n\r\nEdit.getInitialProps = async (ctx: any) => {\r\n  const doctorAssignService = new DoctorAssignService(ctx)\r\n  const roomService = new RoomService(ctx)\r\n  const userService = new UserService(ctx)\r\n  const query = ctx.query;\r\n  let error: any;\r\n\r\n  if (!query.id) {\r\n    //error missing id\r\n    error = {\r\n      code: 9996,\r\n      message: 'missing ID'\r\n    }\r\n  }\r\n\r\n  let [doctorAssignError, doctorAssign] = await to(doctorAssignService.detail({ id: query.id }));\r\n  if(doctorAssignError) doctorAssign = {}\r\n  const [errorRoom, rooms] = await to(roomService.index({ pageSize: -1 }));\r\n  const filters = JSON.stringify({field:\"position\",operator:\"contains\",value:\"Bác sỹ\"})\r\n  const [errorUsers, users] = await to(userService.index({ pageSize: -1, filters: [filters] }));\r\n  return {\r\n    namespacesRequired: ['common', 'pages', 'menu','errors'],\r\n    error: error,\r\n    doctorAssign: doctorAssign,\r\n    doctorAssignError: doctorAssignError,\r\n    rooms: _.get(rooms, \"data\", []),\r\n    users: _.get(users, \"data\", [])\r\n  }\r\n}\r\nEdit.permissions = {\r\n  \"admin.doctorAssignments\": \"U\"\r\n};\r\nexport default Edit"]},"metadata":{},"sourceType":"module"}