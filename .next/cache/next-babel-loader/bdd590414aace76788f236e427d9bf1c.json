{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _ from 'lodash';\nimport Request from 'themes/modules/Request';\nimport _route from 'themes/route';\nimport Router from 'next/router';\nimport cookies from 'themes/modules/Cookies';\nimport nextCookie from 'next-cookies';\n\nvar BaseApi = /*#__PURE__*/function () {\n  function BaseApi(context) {\n    var _this = this;\n\n    _classCallCheck(this, BaseApi);\n\n    _defineProperty(this, \"cookies\", void 0);\n\n    _defineProperty(this, \"Request\", void 0);\n\n    _defineProperty(this, \"name\", void 0);\n\n    _defineProperty(this, \"getData\", function (obj, path, defaultValue) {\n      return _.get(obj, path, defaultValue);\n    });\n\n    _defineProperty(this, \"globalHandleCallback\", function (response) {\n      return response;\n    });\n\n    _defineProperty(this, \"globalHandleErrorCallback\", function (error) {\n      var status = _.get(error, \"response.status\", -1);\n\n      if (status === -1) {//notify(\"Unable connect to server!\", \"error\")\n      } else if (status === 401) {\n        _this.cookies.remove(\"token\");\n\n        _this.cookies.remove(\"user\");\n\n        if (window && window.location.pathname !== \"/login\") {\n          //notify(\"Login session expired!\", \"error\")\n          _this.redirect(\"frontend.admin.login\");\n        } else {//login screen. không làm gì cả.\n        }\n      }\n\n      return error.response;\n    });\n\n    var cookiesObj = context ? nextCookie(context) : {};\n    this.cookies = cookies(cookiesObj);\n    this.Request = new Request(cookiesObj);\n    this.Request.handleGlobalCallback = this.globalHandleCallback;\n    this.Request.handleGlobalErrorCallback = this.globalHandleErrorCallback;\n    this.name = \"\";\n  }\n\n  _createClass(BaseApi, [{\n    key: \"route\",\n    value: function route(routeName, query) {\n      return _route(routeName, query);\n    }\n  }, {\n    key: \"redirect\",\n    value: function redirect(routeName, query) {\n      var nextRoute = _route(routeName, query);\n\n      Router.push(nextRoute.href, nextRoute.as);\n    }\n  }, {\n    key: \"index\",\n    value: function index(data) {\n      var url;\n      return _regeneratorRuntime.async(function index$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              url = this.route(\"api.\".concat(this.name, \".index\"), data).href;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(this.Request.get(url, data));\n\n            case 3:\n              return _context.abrupt(\"return\", _context.sent);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"create\",\n    value: function create(data) {\n      var url;\n      return _regeneratorRuntime.async(function create$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              url = this.route(\"api.\".concat(this.name, \".store\"), data).href;\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(this.Request.post(url, data));\n\n            case 3:\n              return _context2.abrupt(\"return\", _context2.sent);\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"detail\",\n    value: function detail(data) {\n      var url;\n      return _regeneratorRuntime.async(function detail$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              url = this.route(\"api.\".concat(this.name, \".detail\"), data).href;\n              _context3.next = 3;\n              return _regeneratorRuntime.awrap(this.Request.get(url, data));\n\n            case 3:\n              return _context3.abrupt(\"return\", _context3.sent);\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"edit\",\n    value: function edit(data) {\n      var url;\n      return _regeneratorRuntime.async(function edit$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              url = this.route(\"api.\".concat(this.name, \".update\"), data).href;\n              _context4.next = 3;\n              return _regeneratorRuntime.awrap(this.Request.put(url, data));\n\n            case 3:\n              return _context4.abrupt(\"return\", _context4.sent);\n\n            case 4:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(data) {\n      var url;\n      return _regeneratorRuntime.async(function _delete$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              url = this.route(\"api.\".concat(this.name, \".delete\"), data).href;\n              _context5.next = 3;\n              return _regeneratorRuntime.awrap(this.Request[\"delete\"](url, data));\n\n            case 3:\n              return _context5.abrupt(\"return\", _context5.sent);\n\n            case 4:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }]);\n\n  return BaseApi;\n}();\n\nexport default BaseApi;","map":{"version":3,"sources":["E:/Đồ Án/salonadmin/themes/services/api/BaseService.ts"],"names":["_","Request","route","Router","cookies","nextCookie","BaseApi","context","obj","path","defaultValue","get","response","error","status","remove","window","location","pathname","redirect","cookiesObj","handleGlobalCallback","globalHandleCallback","handleGlobalErrorCallback","globalHandleErrorCallback","name","routeName","query","nextRoute","push","href","as","data","url","post","put"],"mappings":"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","sourcesContent":["import _ from 'lodash'\r\nimport Request from 'themes/modules/Request'\r\nimport route from 'themes/route'\r\nimport Router from 'next/router'\r\nimport cookies from 'themes/modules/Cookies';\r\nimport nextCookie from 'next-cookies'\r\nimport { notification } from 'antd';\r\nimport Cookies from 'universal-cookie';\r\n\r\n\r\nclass BaseApi{\r\n  cookies: Cookies\r\n  Request: Request\r\n  name: string\r\n\r\n  constructor(context?: Context) {\r\n    const cookiesObj = context ? nextCookie(context): {}\r\n    this.cookies = cookies(cookiesObj);\r\n    this.Request = new Request(cookiesObj)\r\n    this.Request.handleGlobalCallback = this.globalHandleCallback\r\n    this.Request.handleGlobalErrorCallback = this.globalHandleErrorCallback\r\n    this.name = \"\";\r\n  }\r\n\r\n  getData = (obj: any, path: string, defaultValue: any) => {\r\n    return _.get(obj, path, defaultValue)\r\n  }\r\n  globalHandleCallback = (response: Response) => {\r\n    return response\r\n  }\r\n\r\n  globalHandleErrorCallback = (error: any) => {\r\n    let status = _.get(error, \"response.status\", -1);\r\n    if(status === -1){\r\n      //notify(\"Unable connect to server!\", \"error\")\r\n    }\r\n    else if (status === 401) {\r\n      this.cookies.remove(\"token\")\r\n      this.cookies.remove(\"user\")\r\n      if (window && window.location.pathname !== \"/login\"){\r\n        //notify(\"Login session expired!\", \"error\")\r\n        this.redirect(\"frontend.admin.login\")\r\n      }\r\n      else{\r\n        //login screen. không làm gì cả.\r\n      }\r\n    }\r\n    return error.response\r\n  }\r\n\r\n  route(routeName: string, query?: any){\r\n    return route(routeName, query)\r\n  }\r\n\r\n  redirect(routeName: string, query?: any){\r\n    let nextRoute = route(routeName, query)\r\n    Router.push(nextRoute.href, nextRoute.as)\r\n  }\r\n\r\n  async index(data?: any){\r\n    const url = this.route(`api.${this.name}.index`, data).href\r\n    return await this.Request.get(url, data)\r\n  }\r\n\r\n  async create(data: any){\r\n    const url = this.route(`api.${this.name}.store`,data).href\r\n    return await this.Request.post(url, data)\r\n  }\r\n\r\n  async detail(data: any){\r\n    const url = this.route(`api.${this.name}.detail`, data).href\r\n    return await this.Request.get(url, data)\r\n  }\r\n\r\n  async edit(data: any){\r\n    const url = this.route(`api.${this.name}.update`, data).href\r\n    return await this.Request.put(url, data)\r\n  }\r\n\r\n  async delete(data: any){\r\n    const url = this.route(`api.${this.name}.delete`, data).href\r\n    return await this.Request.delete(url, data)\r\n  }\r\n\r\n}\r\n\r\nexport default BaseApi"]},"metadata":{},"sourceType":"module"}