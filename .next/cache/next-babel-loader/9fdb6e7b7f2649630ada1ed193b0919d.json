{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\DATN\\\\nursinghome\\\\pages\\\\admin\\\\healthStatuses\\\\edit.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport ConfirmDialog from 'themes/components/Dialogs/ConfirmDialog';\nimport React, { useState } from 'react';\nimport Layout from 'themes/layouts/Admin';\nimport { Button, Form, Input, Select, DatePicker, InputNumber } from 'antd';\nimport HealthService from 'themes/services/api/HealthStatusService';\nimport PatientService from 'themes/services/api/PatientService';\nimport UserService from 'themes/services/api/UserService';\nimport _ from 'lodash';\nimport to from 'await-to-js';\nimport useBaseHook from 'themes/hooks/BaseHooks';\nimport { DeleteFilled, SaveFilled, LeftCircleFilled } from '@ant-design/icons';\nimport usePermissionHook from \"themes/hooks/PermissionHook\";\nimport moment from 'moment';\nvar Option = Select.Option;\nvar formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 4\n    }\n  },\n  wrapperCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 18\n    }\n  }\n};\n\nvar Edit = function Edit(_ref) {\n  _s();\n\n  var patients = _ref.patients,\n      users = _ref.users,\n      health = _ref.health,\n      healthError = _ref.healthError;\n\n  var _useBaseHook = useBaseHook(),\n      t = _useBaseHook.t,\n      notify = _useBaseHook.notify,\n      redirect = _useBaseHook.redirect,\n      setStore = _useBaseHook.setStore,\n      getAuth = _useBaseHook.getAuth,\n      getStore = _useBaseHook.getStore;\n\n  var _useState = useState(false),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  var _Form$useForm = Form.useForm(),\n      _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n      form = _Form$useForm2[0];\n\n  var healthService = new HealthService();\n  var confirmRef = React.createRef();\n\n  var _usePermissionHook = usePermissionHook(),\n      checkPermission = _usePermissionHook.checkPermission;\n\n  var deletePer = checkPermission({\n    \"admin.healthStatuses\": \"D\"\n  });\n\n  var DisplayError = function DisplayError(err) {\n    return notify(t(\"errors:\".concat(err.code)), t(err.message), 'error');\n  };\n\n  var bloodPressure = function bloodPressure(param) {\n    var blood = {\n      bloodPressureUpper: '',\n      bloodPressureLower: ''\n    };\n\n    if (param) {\n      var index = health.bloodPressure.indexOf('/');\n      var bloodPressureUpper = health.bloodPressure.slice(0, index);\n      var bloodPressureLower = health.bloodPressure.slice(index + 1);\n      blood = {\n        bloodPressureUpper: bloodPressureUpper,\n        bloodPressureLower: bloodPressureLower\n      };\n    }\n\n    return blood;\n  };\n\n  var blood = bloodPressure(health.bloodPressure); //submit form\n\n  var onFinish = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values) {\n      var _yield$to, _yield$to2, error, result;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!healthError) {\n                _context.next = 2;\n                break;\n              }\n\n              return _context.abrupt(\"return\", DisplayError(healthError));\n\n            case 2:\n              setLoading(true);\n              _context.next = 5;\n              return to(healthService.edit({\n                id: health.id,\n                values: values\n              }));\n\n            case 5:\n              _yield$to = _context.sent;\n              _yield$to2 = _slicedToArray(_yield$to, 2);\n              error = _yield$to2[0];\n              result = _yield$to2[1];\n              setLoading(false);\n\n              if (!error) {\n                _context.next = 12;\n                break;\n              }\n\n              return _context.abrupt(\"return\", DisplayError(error));\n\n            case 12:\n              notify(t(\"message.recordUpdated\"));\n              redirect(\"frontend.admin.healthStatuses.index\");\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onFinish(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var onDelete = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var _yield$to3, _yield$to4, error, result;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!healthError) {\n                _context2.next = 2;\n                break;\n              }\n\n              return _context2.abrupt(\"return\", DisplayError(healthError));\n\n            case 2:\n              _context2.next = 4;\n              return to(healthService[\"delete\"]({\n                ids: [health.id]\n              }));\n\n            case 4:\n              _yield$to3 = _context2.sent;\n              _yield$to4 = _slicedToArray(_yield$to3, 2);\n              error = _yield$to4[0];\n              result = _yield$to4[1];\n\n              if (!error) {\n                _context2.next = 10;\n                break;\n              }\n\n              return _context2.abrupt(\"return\", DisplayError(error));\n\n            case 10:\n              notify(t('message.recordDeleted'));\n              redirect(\"frontend.admin.healthStatuses.index\");\n\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function onDelete() {\n      return _ref3.apply(this, arguments);\n    };\n  }(); //render option\n\n\n  var renderOptionPatient = function renderOptionPatient() {\n    var result = [];\n    patients.map(function (item) {\n      result.push(__jsx(Option, {\n        value: item.id,\n        key: item.id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 7\n        }\n      }, item.code, \" - \", item.fullname, \" - \", item.roomCode, \" - \", item.bedCode));\n    });\n    return result;\n  };\n\n  var renderOptionUser = function renderOptionUser() {\n    var result = [];\n    users.map(function (item) {\n      result.push(__jsx(Option, {\n        value: item.id,\n        key: item.id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 7\n        }\n      }, item.code, \" - \", item.fullname));\n    });\n    return result;\n  };\n\n  var renderDeleteDialog = function renderDeleteDialog() {\n    return __jsx(ConfirmDialog, {\n      ref: confirmRef,\n      onSubmit: onDelete,\n      title: t('deleteItem'),\n      content: t('message.deleteConfirm'),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 7\n      }\n    });\n  };\n\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 10\n    }\n  }, __jsx(\"div\", {\n    className: \"content\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }\n  }, __jsx(Form, _extends({}, formItemLayout, {\n    form: form,\n    name: \"createPatient\",\n    initialValues: {\n      patientId: health.patientId,\n      date: health.date ? moment(health.date).subtract(7, 'h') : \"\",\n      weight: health.weight,\n      bloodPressureUpper: blood.bloodPressureUpper,\n      bloodPressureLower: blood.bloodPressureLower,\n      bloodSugar: health.bloodSugar,\n      heartRate: health.heartRate,\n      doctorId: health.doctorId,\n      note: health.note\n    },\n    onFinish: onFinish,\n    scrollToFirstError: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }), __jsx(Form.Item, {\n    label: t(\"patient\"),\n    name: \"patientId\",\n    rules: [{\n      required: true,\n      message: t('form.required')\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }, __jsx(Select, {\n    showSearch: true,\n    placeholder: t('placeholder.patient'),\n    filterOption: function filterOption(input, option) {\n      return option.children[0].toLowerCase().indexOf(input.toLowerCase()) >= 0;\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }\n  }, renderOptionPatient())), __jsx(Form.Item, {\n    label: t(\"healthStatuses.date\"),\n    name: \"date\",\n    rules: [{\n      required: true,\n      message: t('form.required')\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }\n  }, __jsx(DatePicker, {\n    format: 'YYYY-MM-DD',\n    showTime: false,\n    placeholder: t('placeholder.date'),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 11\n    }\n  })), __jsx(Form.Item, {\n    label: t(\"healthStatuses.weight\") + ' (Kg)',\n    name: \"weight\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }\n  }, __jsx(InputNumber, {\n    min: 0,\n    max: 300,\n    step: 0.1,\n    style: {\n      width: '100%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 11\n    }\n  })), __jsx(Form.Item, {\n    label: t(\"healthStatuses.bloodPressure\") + \" (mmHg)\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }\n  }, __jsx(Form.Item, {\n    name: \"bloodPressureUpper\",\n    style: {\n      display: 'inline-block',\n      width: 'calc(20% - 8px)'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 11\n    }\n  }, __jsx(InputNumber, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }\n  })), __jsx(\"span\", {\n    style: {\n      padding: \"0 50px\",\n      fontSize: \"25px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 11\n    }\n  }, \"/\"), __jsx(Form.Item, {\n    name: \"bloodPressureLower\",\n    style: {\n      display: 'inline-block',\n      width: 'calc(20% - 8px)'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 11\n    }\n  }, __jsx(InputNumber, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }\n  }))), __jsx(Form.Item, {\n    label: t(\"healthStatuses.bloodSugar\") + \" (mg/dL)\",\n    name: \"bloodSugar\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 9\n    }\n  }, __jsx(InputNumber, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 11\n    }\n  })), __jsx(Form.Item, {\n    label: t(\"healthStatuses.heartRate\") + \" (BPM)\",\n    name: \"heartRate\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 9\n    }\n  }, __jsx(InputNumber, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 11\n    }\n  })), __jsx(Form.Item, {\n    label: t(\"doctor\"),\n    name: \"doctorId\",\n    rules: [{\n      required: true,\n      message: t('form.required')\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 9\n    }\n  }, __jsx(Select, {\n    showSearch: true,\n    placeholder: t('placeholder.user'),\n    filterOption: function filterOption(input, option) {\n      return option.children[2].toLowerCase().indexOf(input.toLowerCase()) >= 0;\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 11\n    }\n  }, renderOptionUser())), __jsx(Form.Item, {\n    label: t(\"note\"),\n    name: \"note\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 9\n    }\n  }, __jsx(Input, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 11\n    }\n  })), __jsx(Form.Item, {\n    wrapperCol: {\n      span: 24\n    },\n    style: {\n      textAlign: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    onClick: function onClick() {\n      return redirect(\"frontend.admin.healthStatuses.index\");\n    },\n    style: {\n      marginRight: 8\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 11\n    }\n  }, __jsx(LeftCircleFilled, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 13\n    }\n  }), \" \", t('cancel')), __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: loading,\n    style: {\n      marginRight: 8\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 11\n    }\n  }, __jsx(SaveFilled, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 13\n    }\n  }), \" \", t('submit')), __jsx(Button, {\n    hidden: !deletePer,\n    danger: true,\n    onClick: function onClick() {\n      if (confirmRef.current) confirmRef.current.show(health.id);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 11\n    }\n  }, __jsx(DeleteFilled, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 13\n    }\n  }), \" \", t('deleteItem')))), renderDeleteDialog()));\n};\n\n_s(Edit, \"oiPFiu7LL36iJ95s6EItlchEklo=\", false, function () {\n  return [useBaseHook, Form.useForm, usePermissionHook];\n});\n\n_c = Edit;\n\nEdit.getInitialProps = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(ctx) {\n    var healthService, patientService, userService, query, error, _yield$to5, _yield$to6, healthError, health, _yield$to7, _yield$to8, errorPatient, patients, filters, _yield$to9, _yield$to10, errorUsers, users;\n\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            healthService = new HealthService(ctx);\n            patientService = new PatientService(ctx);\n            userService = new UserService(ctx);\n            query = ctx.query;\n\n            if (!query.id) {\n              //error missing id\n              error = {\n                code: 9996,\n                message: 'missing ID'\n              };\n            }\n\n            _context3.next = 7;\n            return to(healthService.detail({\n              id: query.id\n            }));\n\n          case 7:\n            _yield$to5 = _context3.sent;\n            _yield$to6 = _slicedToArray(_yield$to5, 2);\n            healthError = _yield$to6[0];\n            health = _yield$to6[1];\n            if (healthError) health = {};\n            _context3.next = 14;\n            return to(patientService.index({\n              pageSize: -1\n            }));\n\n          case 14:\n            _yield$to7 = _context3.sent;\n            _yield$to8 = _slicedToArray(_yield$to7, 2);\n            errorPatient = _yield$to8[0];\n            patients = _yield$to8[1];\n            filters = JSON.stringify({\n              field: \"position\",\n              operator: \"contains\",\n              value: \"Bác sỹ\"\n            });\n            _context3.next = 21;\n            return to(userService.index({\n              pageSize: -1,\n              filters: [filters]\n            }));\n\n          case 21:\n            _yield$to9 = _context3.sent;\n            _yield$to10 = _slicedToArray(_yield$to9, 2);\n            errorUsers = _yield$to10[0];\n            users = _yield$to10[1];\n            return _context3.abrupt(\"return\", {\n              namespacesRequired: ['common', 'pages', 'menu', 'errors'],\n              error: error,\n              health: health,\n              healthError: healthError,\n              patients: _.get(patients, \"data\", []),\n              users: _.get(users, \"data\", [])\n            });\n\n          case 26:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function (_x2) {\n    return _ref4.apply(this, arguments);\n  };\n}();\n\nEdit.permissions = {\n  \"admin.healthStatuses\": \"U\"\n};\nexport default Edit;\n\nvar _c;\n\n$RefreshReg$(_c, \"Edit\");","map":{"version":3,"sources":["E:/DATN/nursinghome/pages/admin/healthStatuses/edit.tsx"],"names":["ConfirmDialog","React","useState","Layout","Button","Form","Input","Select","DatePicker","InputNumber","HealthService","PatientService","UserService","_","to","useBaseHook","DeleteFilled","SaveFilled","LeftCircleFilled","usePermissionHook","moment","Option","formItemLayout","labelCol","xs","span","sm","wrapperCol","Edit","patients","users","health","healthError","t","notify","redirect","setStore","getAuth","getStore","loading","setLoading","useForm","form","healthService","confirmRef","createRef","checkPermission","deletePer","DisplayError","err","code","message","bloodPressure","param","blood","bloodPressureUpper","bloodPressureLower","index","indexOf","slice","onFinish","values","edit","id","error","result","onDelete","ids","renderOptionPatient","map","item","push","fullname","roomCode","bedCode","renderOptionUser","renderDeleteDialog","patientId","date","subtract","weight","bloodSugar","heartRate","doctorId","note","required","input","option","children","toLowerCase","width","display","padding","fontSize","textAlign","marginRight","current","show","getInitialProps","ctx","patientService","userService","query","detail","pageSize","errorPatient","filters","JSON","stringify","field","operator","value","errorUsers","namespacesRequired","get","permissions"],"mappings":"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","sourcesContent":["import ConfirmDialog from 'themes/components/Dialogs/ConfirmDialog';\r\n\r\nimport React, { useState } from 'react'\r\nimport Layout from 'themes/layouts/Admin'\r\nimport { Button, Form, Input, Select, DatePicker, InputNumber } from 'antd';\r\nimport HealthService from 'themes/services/api/HealthStatusService';\r\nimport PatientService from 'themes/services/api/PatientService';\r\nimport UserService from 'themes/services/api/UserService';\r\nimport _ from 'lodash';\r\nimport to from 'await-to-js'\r\nimport useBaseHook from 'themes/hooks/BaseHooks'\r\nimport { DeleteFilled, SaveFilled, LeftCircleFilled, CopyFilled } from '@ant-design/icons';\r\nimport usePermissionHook from \"themes/hooks/PermissionHook\";\r\nimport moment from 'moment'\r\n\r\nconst { Option } = Select\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 4 },\r\n  },\r\n  wrapperCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 18 },\r\n  },\r\n};\r\n\r\nconst Edit = ({ patients, users, health, healthError }: { patients: Patient[], users : User[], health: HealthStatus, healthError: any }) => {\r\n  const { t, notify, redirect, setStore, getAuth, getStore } = useBaseHook();\r\n  const [loading, setLoading] = useState(false);\r\n  const [form] = Form.useForm();\r\n  const healthService = new HealthService()\r\n  const confirmRef = React.createRef<ConfirmDialog>()\r\n\r\n  const { checkPermission } = usePermissionHook();\r\n  const deletePer = checkPermission({\r\n    \"admin.healthStatuses\": \"D\"\r\n  })\r\n  const DisplayError = (err: any) => {\r\n    return notify(t(`errors:${err.code}`), t(err.message), 'error')\r\n  }\r\n\r\n  const bloodPressure = (param: string) => {\r\n    let blood = {bloodPressureUpper: '', bloodPressureLower: ''}\r\n    if(param) {\r\n      const index = health.bloodPressure.indexOf('/')\r\n      const bloodPressureUpper = health.bloodPressure.slice(0,index)\r\n      const bloodPressureLower = health.bloodPressure.slice(index + 1)\r\n      blood = {bloodPressureUpper: bloodPressureUpper, bloodPressureLower: bloodPressureLower}\r\n    }\r\n    return blood\r\n  }\r\n  const blood = bloodPressure(health.bloodPressure)\r\n\r\n  //submit form\r\n  const onFinish = async (values: any): Promise<void> => {\r\n    if(healthError) return DisplayError(healthError)\r\n    setLoading(true)\r\n    let [error, result]: any[] = await to(healthService.edit({\r\n      id: health.id,\r\n      values\r\n    }));\r\n    setLoading(false)\r\n    if(error) return DisplayError(error)\r\n    notify(t(\"message.recordUpdated\"))\r\n    redirect(\"frontend.admin.healthStatuses.index\")\r\n  }\r\n\r\n  const onDelete = async (): Promise<void> => {\r\n    if(healthError) return DisplayError(healthError)\r\n    let [error, result]: any[] = await to(healthService.delete({ ids: [health.id] }));\r\n    if(error) return DisplayError(error)\r\n    notify(t('message.recordDeleted'))\r\n    redirect(\"frontend.admin.healthStatuses.index\")\r\n  }\r\n\r\n  //render option\r\n  const renderOptionPatient = (): JSX.Element[] => {\r\n    let result: JSX.Element[] = [];\r\n    patients.map(item => {\r\n      result.push(\r\n      <Option value={item.id} key={item.id}>{item.code} - {item.fullname} - {item.roomCode} - {item.bedCode}</Option>\r\n      )\r\n    })\r\n    return result;\r\n  }\r\n\r\n  const renderOptionUser = (): JSX.Element[] => {\r\n    let result: JSX.Element[] = [];\r\n    users.map(item => {\r\n      result.push(\r\n      <Option value={item.id} key={item.id}>{item.code} - {item.fullname}</Option>\r\n      )\r\n    })\r\n    return result;\r\n  }\r\n\r\n  const renderDeleteDialog = () => {\r\n    return (\r\n      <ConfirmDialog\r\n        ref={confirmRef}\r\n        onSubmit={onDelete}\r\n        title={t('deleteItem')}\r\n        content={t('message.deleteConfirm')}\r\n      />\r\n    )\r\n  }\r\n\r\n  return <Layout>\r\n    <div className=\"content\">\r\n      <Form\r\n        {...formItemLayout}\r\n        form={form}\r\n        name=\"createPatient\"\r\n        initialValues={{\r\n          patientId: health.patientId,\r\n          date: health.date ? moment(health.date).subtract(7,'h') : \"\",\r\n          weight: health.weight,\r\n          bloodPressureUpper: blood.bloodPressureUpper,\r\n          bloodPressureLower: blood.bloodPressureLower,\r\n          bloodSugar: health.bloodSugar,\r\n          heartRate: health.heartRate,\r\n          doctorId: health.doctorId,\r\n          note: health.note\r\n        }}\r\n        onFinish={onFinish}\r\n        scrollToFirstError\r\n      >\r\n        <Form.Item\r\n          label={t(\"patient\")}\r\n          name=\"patientId\"\r\n          rules={[\r\n            { required: true, message: t('form.required') },\r\n          ]}\r\n        >\r\n          <Select \r\n            showSearch\r\n            placeholder = {t('placeholder.patient')}\r\n            filterOption={ (input: any, option: any) => {\r\n              return option.children[0].toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n            } }\r\n          >\r\n            {renderOptionPatient()}\r\n          </Select>\r\n        </Form.Item>\r\n        \r\n        <Form.Item\r\n          label={t(\"healthStatuses.date\")}\r\n          name=\"date\"\r\n          rules={[\r\n            { required: true, message: t('form.required') },\r\n          ]}\r\n        >\r\n          <DatePicker format={'YYYY-MM-DD'} showTime={false} placeholder={t('placeholder.date')} />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={t(\"healthStatuses.weight\") + ' (Kg)'}\r\n          name=\"weight\"\r\n        >\r\n          <InputNumber min={0} max={300} step={0.1}  style={{ width:'100%' }} />\r\n        </Form.Item>\r\n\r\n        {/* <Form.Item\r\n          label={t(\"healthStatuses.bloodPressure\") + \" (mmHg)\"}\r\n          name=\"bloodPressure\"\r\n        >\r\n          <Input />\r\n        </Form.Item> */}\r\n\r\n        <Form.Item label={t(\"healthStatuses.bloodPressure\") + \" (mmHg)\"}>\r\n          <Form.Item\r\n            name=\"bloodPressureUpper\"\r\n            style={{ display: 'inline-block', width: 'calc(20% - 8px)' }}\r\n          >\r\n            <InputNumber />\r\n          </Form.Item>\r\n\r\n          <span style={{ padding:\"0 50px\", fontSize:\"25px\"  }}>/</span>\r\n\r\n          <Form.Item\r\n            name=\"bloodPressureLower\"\r\n            style={{ display: 'inline-block', width: 'calc(20% - 8px)' }}\r\n          >\r\n            <InputNumber />\r\n          </Form.Item>\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={t(\"healthStatuses.bloodSugar\") + \" (mg/dL)\"}\r\n          name=\"bloodSugar\"\r\n        >\r\n          <InputNumber />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={t(\"healthStatuses.heartRate\") + \" (BPM)\"}\r\n          name=\"heartRate\"\r\n        >\r\n          <InputNumber />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={t(\"doctor\")}\r\n          name=\"doctorId\"\r\n          rules={[\r\n            { required: true, message: t('form.required') },\r\n          ]}\r\n        >\r\n          <Select\r\n            showSearch\r\n            placeholder = {t('placeholder.user')}\r\n            filterOption={ (input: any, option: any) => {\r\n              return option.children[2].toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n            } }\r\n          >\r\n            {renderOptionUser()}\r\n          </Select>\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={t(\"note\")}\r\n          name=\"note\"\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item wrapperCol={{ span: 24 }} style={{ textAlign: \"center\" }}>\r\n          <Button onClick={() => redirect(\"frontend.admin.healthStatuses.index\")} style={{ marginRight: 8 }}>\r\n            <LeftCircleFilled /> {t('cancel')}\r\n          </Button>\r\n\r\n          <Button type=\"primary\" htmlType=\"submit\" loading={loading} style={{ marginRight: 8 }}>\r\n            <SaveFilled /> {t('submit')}\r\n          </Button>\r\n          \r\n          <Button hidden={!deletePer} danger onClick={() => { \r\n              if (confirmRef.current) confirmRef.current.show(health.id) \r\n            }}>\r\n            <DeleteFilled /> {t('deleteItem')}\r\n          </Button>\r\n         \r\n        </Form.Item>\r\n      </Form>\r\n      {renderDeleteDialog()}\r\n    </div>\r\n  </Layout>\r\n}\r\n\r\nEdit.getInitialProps = async (ctx: any) => {\r\n  const healthService = new HealthService(ctx)\r\n  const patientService = new PatientService(ctx)\r\n  const userService = new UserService(ctx)\r\n  const query = ctx.query;\r\n  let error: any;\r\n\r\n  if (!query.id) {\r\n    //error missing id\r\n    error = {\r\n      code: 9996,\r\n      message: 'missing ID'\r\n    }\r\n  }\r\n\r\n  let [healthError, health] = await to(healthService.detail({ id: query.id }));\r\n  if(healthError) health = {}\r\n  const [errorPatient, patients] = await to(patientService.index({ pageSize: -1 }));\r\n  const filters = JSON.stringify({field:\"position\",operator:\"contains\",value:\"Bác sỹ\"})\r\n  const [errorUsers, users] = await to(userService.index({ pageSize: -1, filters: [filters] }));\r\n  return {\r\n    namespacesRequired: ['common', 'pages', 'menu','errors'],\r\n    error: error,\r\n    health: health,\r\n    healthError: healthError,\r\n    patients: _.get(patients, \"data\", []),\r\n    users: _.get(users, \"data\", [])\r\n  }\r\n}\r\nEdit.permissions = {\r\n  \"admin.healthStatuses\": \"U\"\r\n};\r\nexport default Edit"]},"metadata":{},"sourceType":"module"}