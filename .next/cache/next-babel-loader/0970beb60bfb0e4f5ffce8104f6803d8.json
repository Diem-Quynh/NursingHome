{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport ConfirmDialog from 'themes/components/Dialogs/ConfirmDialog';\nimport React, { useState } from 'react';\nimport Layout from 'themes/layouts/Admin';\nimport { Button, Form, Input, Select, Typography } from 'antd';\nimport UserGroupService from 'themes/services/api/UserGroupService';\nimport to from 'await-to-js';\nimport useBaseHook from 'themes/hooks/BaseHooks';\nimport { LeftCircleFilled, SaveFilled, DeleteFilled } from '@ant-design/icons';\nimport usePermissionHook from \"themes/hooks/PermissionHook\";\nvar Title = Typography.Title,\n    Text = Typography.Text;\nvar Option = Select.Option;\nvar formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 4\n    }\n  },\n  wrapperCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 18\n    }\n  }\n};\n\nvar Edit = function Edit(_ref) {\n  _s();\n\n  var group = _ref.group,\n      groupError = _ref.groupError;\n\n  var _useBaseHook = useBaseHook(),\n      t = _useBaseHook.t,\n      notify = _useBaseHook.notify,\n      redirect = _useBaseHook.redirect,\n      router = _useBaseHook.router;\n\n  var _useState = useState(false),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  var _Form$useForm = Form.useForm(),\n      _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n      form = _Form$useForm2[0];\n\n  var userGroupService = new UserGroupService();\n  var confirmRef = React.createRef();\n\n  var _usePermissionHook = usePermissionHook(),\n      checkPermission = _usePermissionHook.checkPermission;\n\n  var deletePer = checkPermission({\n    \"root\": \"D\"\n  });\n\n  var DisplayError = function DisplayError(err) {\n    return notify(t(\"errors:\".concat(err.code)), t(err.message), 'error');\n  }; //submit form\n\n\n  var onFinish = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values) {\n      var _yield$to, _yield$to2, error, result;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!groupError) {\n                _context.next = 2;\n                break;\n              }\n\n              return _context.abrupt(\"return\", DisplayError(groupError));\n\n            case 2:\n              setLoading(true);\n              _context.next = 5;\n              return to(userGroupService.edit({\n                id: group.id,\n                values: values\n              }));\n\n            case 5:\n              _yield$to = _context.sent;\n              _yield$to2 = _slicedToArray(_yield$to, 2);\n              error = _yield$to2[0];\n              result = _yield$to2[1];\n              setLoading(false);\n\n              if (!error) {\n                _context.next = 12;\n                break;\n              }\n\n              return _context.abrupt(\"return\", DisplayError(error));\n\n            case 12:\n              notify(t(\"message.recordUpdated\"));\n              redirect(\"frontend.admin.userGroups.index\");\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onFinish(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var onDelete = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var _yield$to3, _yield$to4, error, result;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!groupError) {\n                _context2.next = 2;\n                break;\n              }\n\n              return _context2.abrupt(\"return\", DisplayError(groupError));\n\n            case 2:\n              _context2.next = 4;\n              return to(userGroupService[\"delete\"]({\n                ids: [group.id]\n              }));\n\n            case 4:\n              _yield$to3 = _context2.sent;\n              _yield$to4 = _slicedToArray(_yield$to3, 2);\n              error = _yield$to4[0];\n              result = _yield$to4[1];\n\n              if (!error) {\n                _context2.next = 10;\n                break;\n              }\n\n              return _context2.abrupt(\"return\", DisplayError(error));\n\n            case 10:\n              notify(t('message.recordDeleted'));\n              redirect(\"frontend.admin.userGroups.index\");\n\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function onDelete() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var renderDeleteDialog = function renderDeleteDialog() {\n    return __jsx(ConfirmDialog, {\n      ref: confirmRef,\n      onSubmit: onDelete,\n      title: t('deleteItem'),\n      content: t('message.deleteConfirm')\n    });\n  };\n\n  return __jsx(Layout, null, __jsx(\"div\", {\n    className: \"content\"\n  }, __jsx(Form, _extends({}, formItemLayout, {\n    form: form,\n    name: \"createUserGroup\",\n    initialValues: {\n      name: group.name,\n      description: group.description\n    },\n    onFinish: onFinish,\n    scrollToFirstError: true\n  }), __jsx(Form.Item, {\n    label: t(\"name\"),\n    name: \"name\",\n    rules: [{\n      required: true,\n      message: t('form.required')\n    }]\n  }, __jsx(Input, null)), __jsx(Form.Item, {\n    label: t(\"description\"),\n    name: \"description\"\n  }, __jsx(Input, null)), __jsx(Form.Item, {\n    wrapperCol: {\n      span: 24\n    },\n    style: {\n      textAlign: \"center\"\n    }\n  }, __jsx(Button, {\n    onClick: function onClick() {\n      return router.back();\n    },\n    style: {\n      marginRight: 8\n    }\n  }, __jsx(LeftCircleFilled, null), \" \", t('cancel')), __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: loading,\n    style: {\n      marginRight: 8\n    }\n  }, __jsx(SaveFilled, null), \" \", t('submit')), __jsx(Button, {\n    hidden: !deletePer,\n    danger: true,\n    onClick: function onClick() {\n      if (confirmRef.current) confirmRef.current.show(group.id);\n    }\n  }, __jsx(DeleteFilled, null), \" \", t('deleteItem')))), renderDeleteDialog()));\n};\n\n_s(Edit, \"zV3R9aC/xqZABokzhw7Tf8+F8F8=\", false, function () {\n  return [useBaseHook, Form.useForm, usePermissionHook];\n});\n\n_c = Edit;\n\nEdit.getInitialProps = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(ctx) {\n    var userGroupService, query, error, _yield$to5, _yield$to6, groupError, group;\n\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            userGroupService = new UserGroupService(ctx);\n            query = ctx.query;\n\n            if (!query.id) {\n              //error missing id\n              error = {\n                code: 9996,\n                message: 'missing ID'\n              };\n            }\n\n            _context3.next = 5;\n            return to(userGroupService.detail({\n              id: query.id\n            }));\n\n          case 5:\n            _yield$to5 = _context3.sent;\n            _yield$to6 = _slicedToArray(_yield$to5, 2);\n            groupError = _yield$to6[0];\n            group = _yield$to6[1];\n            if (groupError) group = {};\n            return _context3.abrupt(\"return\", {\n              namespacesRequired: ['common', 'pages', 'menu', 'errors'],\n              error: error,\n              group: group,\n              groupError: groupError\n            });\n\n          case 11:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function (_x2) {\n    return _ref4.apply(this, arguments);\n  };\n}();\n\nEdit.permissions = {\n  \"root\": \"U\"\n};\nexport default Edit;\n\nvar _c;\n\n$RefreshReg$(_c, \"Edit\");","map":{"version":3,"sources":["E:/nursinghome_github/pages/admin/userGroups/edit.tsx"],"names":["ConfirmDialog","React","useState","Layout","Button","Form","Input","Select","Typography","UserGroupService","to","useBaseHook","LeftCircleFilled","SaveFilled","DeleteFilled","usePermissionHook","Title","Text","Option","formItemLayout","labelCol","xs","span","sm","wrapperCol","Edit","group","groupError","t","notify","redirect","router","loading","setLoading","useForm","form","userGroupService","confirmRef","createRef","checkPermission","deletePer","DisplayError","err","code","message","onFinish","values","edit","id","error","result","onDelete","ids","renderDeleteDialog","name","description","required","textAlign","back","marginRight","current","show","getInitialProps","ctx","query","detail","namespacesRequired","permissions"],"mappings":"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","sourcesContent":["import ConfirmDialog from 'themes/components/Dialogs/ConfirmDialog';\r\n\r\nimport React, { useState } from 'react'\r\nimport Layout from 'themes/layouts/Admin'\r\nimport { Button, Row, Col, Form, Input, Select, Typography } from 'antd';\r\nimport UserGroupService from 'themes/services/api/UserGroupService';\r\nimport _ from 'lodash';\r\nimport to from 'await-to-js'\r\nimport useBaseHook from 'themes/hooks/BaseHooks'\r\nimport { LeftCircleFilled, SaveFilled, DeleteFilled } from '@ant-design/icons';\r\nimport BreadCrumb from 'themes/components/Breadcumb'\r\nimport usePermissionHook from \"themes/hooks/PermissionHook\";\r\nconst { Title, Text } = Typography;\r\n\r\nconst { Option } = Select\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 4 },\r\n  },\r\n  wrapperCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 18 },\r\n  },\r\n};\r\n\r\n\r\nconst Edit = ({ group, groupError }: { group: UserGroup, groupError: any }) => {\r\n  const { t, notify, redirect, router } = useBaseHook();\r\n  const [loading, setLoading] = useState(false);\r\n  const [form] = Form.useForm();\r\n  const userGroupService = new UserGroupService()\r\n  const confirmRef = React.createRef<ConfirmDialog>()\r\n  const { checkPermission } = usePermissionHook();\r\n  const deletePer = checkPermission({\r\n    \"root\": \"D\"\r\n  })\r\n  const DisplayError = (err: any) => {\r\n    return notify(t(`errors:${err.code}`), t(err.message), 'error')\r\n  }\r\n  //submit form\r\n  const onFinish = async (values: any): Promise<void> => {\r\n    if(groupError) return DisplayError(groupError)\r\n    setLoading(true)\r\n    let [error, result]: any[] = await to(userGroupService.edit({\r\n      id: group.id,\r\n      values\r\n    }));\r\n    setLoading(false)\r\n    if (error) return DisplayError(error)\r\n    notify(t(\"message.recordUpdated\"))\r\n    redirect(\"frontend.admin.userGroups.index\")\r\n  }\r\n\r\n  const onDelete = async (): Promise<void> => {\r\n    if(groupError) return DisplayError(groupError)\r\n    let [error, result]: any[] = await to(userGroupService.delete({ ids: [group.id] }));\r\n    if (error) return DisplayError(error)\r\n    notify(t('message.recordDeleted'))\r\n    redirect(\"frontend.admin.userGroups.index\")\r\n  }\r\n\r\n  const renderDeleteDialog = () => {\r\n    return (\r\n      <ConfirmDialog\r\n        ref={confirmRef}\r\n        onSubmit={onDelete}\r\n        title={t('deleteItem')}\r\n        content={t('message.deleteConfirm')}\r\n      />\r\n    )\r\n  }\r\n\r\n\r\n  return <Layout>\r\n    <div className=\"content\">\r\n      <Form\r\n        {...formItemLayout}\r\n        form={form}\r\n        name=\"createUserGroup\"\r\n        initialValues={{\r\n          name: group.name,\r\n          description: group.description,\r\n        }}\r\n        onFinish={onFinish}\r\n        scrollToFirstError\r\n      >\r\n        <Form.Item\r\n          label={t(\"name\")}\r\n          name=\"name\"\r\n          rules={[\r\n            { required: true, message: t('form.required') },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label={t(\"description\")}\r\n          name=\"description\"\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item wrapperCol={{ span: 24 }} style={{ textAlign: \"center\" }}>\r\n          <Button onClick={() => router.back()} style={{ marginRight: 8 }}>\r\n            <LeftCircleFilled /> {t('cancel')}\r\n          </Button>\r\n          <Button type=\"primary\" htmlType=\"submit\" loading={loading} style={{ marginRight: 8 }}>\r\n            <SaveFilled /> {t('submit')}\r\n          </Button>\r\n          <Button hidden={!deletePer} danger onClick={() => { if (confirmRef.current) confirmRef.current.show(group.id) }}>\r\n            <DeleteFilled /> {t('deleteItem')}\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n      {renderDeleteDialog()}\r\n    </div>\r\n  </Layout>\r\n}\r\n\r\nEdit.getInitialProps = async (ctx: any) => {\r\n  const userGroupService = new UserGroupService(ctx)\r\n  const query = ctx.query;\r\n  let error: any;\r\n\r\n  if (!query.id) {\r\n    //error missing id\r\n    error = {\r\n      code: 9996,\r\n      message: 'missing ID'\r\n    }\r\n  }\r\n\r\n  let [groupError, group] = await to(userGroupService.detail({ id: query.id }));\r\n  if(groupError) group = {}\r\n  return {\r\n    namespacesRequired: ['common', 'pages', 'menu','errors'],\r\n    error: error,\r\n    group: group,\r\n    groupError: groupError\r\n  }\r\n}\r\nEdit.permissions = {\r\n  \"root\": \"U\"\r\n}\r\nexport default Edit"]},"metadata":{},"sourceType":"module"}