{"ast":null,"code":"var _jsxFileName = \"E:\\\\DATN\\\\nursinghome\\\\pages\\\\admin\\\\users\\\\edit.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport ConfirmDialog from 'themes/components/Dialogs/ConfirmDialog';\nimport React, { useState } from 'react';\nimport Layout from 'themes/layouts/Admin';\nimport { Button, Form, Input, Select, Modal, Radio, DatePicker } from 'antd';\nimport UserService from 'themes/services/api/UserService';\nimport UserGroupService from 'themes/services/api/UserGroupService';\nimport _ from 'lodash';\nimport to from 'await-to-js';\nimport useBaseHook from 'themes/hooks/BaseHooks';\nimport { DeleteFilled, SaveFilled, LeftCircleFilled, CopyFilled } from '@ant-design/icons';\nimport usePermissionHook from \"themes/hooks/PermissionHook\";\nimport moment from 'moment';\nconst {\n  Option\n} = Select;\nconst formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 4\n    }\n  },\n  wrapperCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 18\n    }\n  }\n};\n\nconst Edit = ({\n  groups,\n  user\n}) => {\n  const {\n    t,\n    notify,\n    redirect,\n    setStore,\n    getAuth,\n    getStore\n  } = useBaseHook();\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: modalVisible,\n    1: setModalVisible\n  } = useState(false);\n  const [form] = Form.useForm();\n  const userService = new UserService();\n  const confirmRef = React.createRef();\n  const {\n    checkPermission\n  } = usePermissionHook();\n  const deletePer = checkPermission({\n    \"admin.users\": \"D\"\n  }); //submit form\n\n  const onFinish = async values => {\n    setLoading(true);\n\n    let {\n      rePassword\n    } = values,\n        otherValues = _objectWithoutProperties(values, [\"rePassword\"]);\n\n    let [error, result] = await to(userService.edit(_objectSpread({\n      id: user.id\n    }, otherValues)));\n    setLoading(false);\n\n    if (error) {\n      return notify(t(`errors:${error.code}`), t(error.message), 'error');\n    }\n\n    notify(t(\"message.recordUpdated\"));\n    redirect(\"frontend.admin.users.index\");\n  };\n\n  const onDelete = async () => {\n    let [error, result] = await to(userService.delete({\n      ids: [user.id]\n    }));\n\n    if (error) {\n      return notify(t(`errors:${error.code}`), t(`${error.message}`), 'error');\n    }\n\n    notify(t('message.recordDeleted'));\n    redirect(\"frontend.admin.users.index\");\n  };\n\n  const onChangePassword = async data => {\n    console.log(data);\n    setModalVisible(false);\n    let values = {\n      id: user.id,\n      password: data.password\n    };\n    let [error, result] = await to(userService.updatePassword(values));\n\n    if (error) {\n      return notify(t(`errors:${error.code}`), t(error.message), 'error');\n    }\n\n    notify(t(\"message.recordUpdated\"));\n  }; //validate input password\n\n\n  const validatorPassword = ({\n    getFieldValue\n  }) => ({\n    validator: (rule, value) => {\n      if (!value || getFieldValue('password') === value) {\n        return Promise.resolve();\n      }\n\n      return Promise.reject(t('form.rePassword'));\n    }\n  }); //render option\n\n\n  const renderOption = () => {\n    let result = [];\n    groups.map(item => {\n      result.push(__jsx(Option, {\n        value: item.id,\n        key: item.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }\n      }, item.name));\n    });\n    return result;\n  };\n\n  const renderDeleteDialog = () => {\n    return __jsx(ConfirmDialog, {\n      ref: confirmRef,\n      onSubmit: onDelete,\n      title: t('deleteItem'),\n      content: t('message.deleteConfirm'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 7\n      }\n    });\n  };\n\n  const renderChangePassModal = () => {\n    const [formChangePassword] = Form.useForm();\n    return __jsx(Form, {\n      form: formChangePassword,\n      name: \"formChangePassword\",\n      initialValues: {\n        password: \"\",\n        repassword: \"\"\n      },\n      onFinish: onChangePassword,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }\n    }, __jsx(Modal, {\n      closable: false,\n      visible: modalVisible,\n      onCancel: () => setModalVisible(false),\n      onOk: () => {\n        formChangePassword.submit();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 7\n      }\n    }, __jsx(Form.Item, {\n      label: t(\"password\"),\n      labelCol: {\n        span: 5\n      },\n      wrapperCol: {\n        span: 19\n      },\n      name: \"password\",\n      rules: [{\n        required: true,\n        message: t('form.required')\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }\n    }, __jsx(Input.Password, {\n      placeholder: t(\"password\"),\n      type: \"password\",\n      autoFocus: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }\n    })), __jsx(Form.Item, {\n      label: t(\"rePassword\"),\n      labelCol: {\n        span: 5\n      },\n      wrapperCol: {\n        span: 19\n      },\n      name: \"repassword\",\n      rules: [{\n        required: true,\n        message: t('form.required')\n      }, validatorPassword],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }\n    }, __jsx(Input.Password, {\n      placeholder: t(\"rePassword\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }\n    }))));\n  };\n\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 10\n    }\n  }, __jsx(\"div\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 5\n    }\n  }, __jsx(Form, _extends({}, formItemLayout, {\n    form: form,\n    name: \"createUser\",\n    initialValues: {\n      code: user.code,\n      fullname: user.fullname,\n      position: user.position,\n      birthday: user.birthday.toString(),\n      gender: user.gender,\n      address: user.address,\n      cardId: user.cardId,\n      email: user.email,\n      phone: user.phone,\n      username: user.username,\n      groupId: user.groupId\n    },\n    onFinish: onFinish,\n    scrollToFirstError: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }\n  }), __jsx(Form.Item, {\n    label: t(\"code\"),\n    name: \"code\",\n    rules: [{\n      required: true,\n      message: t('form.required'),\n      whitespace: true\n    }, {\n      max: 10,\n      message: t('form.maxLength', {\n        length: 10\n      })\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }\n  }, __jsx(Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 11\n    }\n  })), __jsx(Form.Item, {\n    label: t(\"fullname\"),\n    name: \"fullname\",\n    rules: [{\n      required: true,\n      message: t('form.required')\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 9\n    }\n  }, __jsx(Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 11\n    }\n  })), __jsx(Form.Item, {\n    label: t(\"position\"),\n    name: \"position\",\n    rules: [{\n      required: true,\n      message: t('form.required')\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 9\n    }\n  }, __jsx(Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 11\n    }\n  })), __jsx(Form.Item, {\n    label: t(\"birthday\"),\n    name: \"birthday\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 9\n    }\n  }, __jsx(DatePicker, {\n    format: 'YYYY-MM-DD',\n    showTime: false,\n    defaultValue: moment(user.birthday),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 11\n    }\n  })), __jsx(Form.Item, {\n    label: t(\"gender\"),\n    name: \"gender\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 9\n    }\n  }, __jsx(Radio.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 11\n    }\n  }, __jsx(Radio, {\n    value: 0,\n    key: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 13\n    }\n  }, t(\"male\")), __jsx(Radio, {\n    value: 1,\n    key: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 13\n    }\n  }, t(\"female\")))), __jsx(Form.Item, {\n    label: t(\"address\"),\n    name: \"address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 9\n    }\n  }, __jsx(Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 11\n    }\n  })), __jsx(Form.Item, {\n    label: t(\"cardId\"),\n    name: \"cardId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 9\n    }\n  }, __jsx(Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 11\n    }\n  })), __jsx(Form.Item, {\n    label: t(\"email\"),\n    name: \"email\",\n    rules: [{\n      type: 'email',\n      message: t('form.email')\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 9\n    }\n  }, __jsx(Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 11\n    }\n  })), __jsx(Form.Item, {\n    label: t(\"phone\"),\n    name: \"phone\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 9\n    }\n  }, __jsx(Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 11\n    }\n  })), __jsx(Form.Item, {\n    label: t(\"username\"),\n    name: \"username\",\n    rules: [{\n      required: true,\n      message: t('form.required'),\n      whitespace: true\n    }, {\n      max: 15,\n      message: t('form.maxLength', {\n        length: 15\n      })\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 9\n    }\n  }, __jsx(Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 11\n    }\n  })), __jsx(Form.Item, {\n    label: t(\"userGroup\"),\n    name: \"groupId\",\n    rules: [{\n      required: true,\n      message: t('form.required')\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 9\n    }\n  }, __jsx(Select, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 11\n    }\n  }, renderOption())), __jsx(Form.Item, {\n    wrapperCol: {\n      span: 24\n    },\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    onClick: () => redirect(\"frontend.admin.users.index\"),\n    style: {\n      marginRight: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 11\n    }\n  }, __jsx(LeftCircleFilled, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 13\n    }\n  }), \" \", t('cancel')), __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: loading,\n    style: {\n      marginRight: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 11\n    }\n  }, __jsx(SaveFilled, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 13\n    }\n  }), \" \", t('submit')), __jsx(Button, {\n    onClick: () => {\n      setModalVisible(true);\n    },\n    style: {\n      marginRight: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 11\n    }\n  }, __jsx(CopyFilled, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 13\n    }\n  }), \" \", t('changePassword')), __jsx(Button, {\n    hidden: !deletePer,\n    danger: true,\n    onClick: () => {\n      if (confirmRef.current) confirmRef.current.show(user.id);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 11\n    }\n  }, __jsx(DeleteFilled, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 13\n    }\n  }), \" \", t('deleteItem')))), renderDeleteDialog(), renderChangePassModal()));\n};\n\nEdit.getInitialProps = async ctx => {\n  const userGroupService = new UserGroupService(ctx);\n  const userService = new UserService(ctx);\n  const query = ctx.query;\n  let error;\n\n  if (!query.id) {\n    //error missing id\n    error = {\n      code: 9996,\n      message: 'missing ID'\n    };\n  }\n\n  let [userError, user] = await to(userService.detail({\n    id: query.id\n  }));\n  const [errorGroup, groups] = await to(userGroupService.index({\n    pageSize: -1\n  }));\n  return {\n    namespacesRequired: ['common', 'pages', 'menu'],\n    error: error,\n    user: user,\n    groups: _.get(groups, \"data\", [])\n  };\n};\n\nEdit.permissions = {\n  \"admin.users\": \"U\"\n};\nexport default Edit;","map":{"version":3,"sources":["E:/DATN/nursinghome/pages/admin/users/edit.tsx"],"names":["ConfirmDialog","React","useState","Layout","Button","Form","Input","Select","Modal","Radio","DatePicker","UserService","UserGroupService","_","to","useBaseHook","DeleteFilled","SaveFilled","LeftCircleFilled","CopyFilled","usePermissionHook","moment","Option","formItemLayout","labelCol","xs","span","sm","wrapperCol","Edit","groups","user","t","notify","redirect","setStore","getAuth","getStore","loading","setLoading","modalVisible","setModalVisible","form","useForm","userService","confirmRef","createRef","checkPermission","deletePer","onFinish","values","rePassword","otherValues","error","result","edit","id","code","message","onDelete","delete","ids","onChangePassword","data","console","log","password","updatePassword","validatorPassword","getFieldValue","validator","rule","value","Promise","resolve","reject","renderOption","map","item","push","name","renderDeleteDialog","renderChangePassModal","formChangePassword","repassword","submit","required","fullname","position","birthday","toString","gender","address","cardId","email","phone","username","groupId","whitespace","max","length","type","textAlign","marginRight","current","show","getInitialProps","ctx","userGroupService","query","userError","detail","errorGroup","index","pageSize","namespacesRequired","get","permissions"],"mappings":"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","sourcesContent":["import ConfirmDialog from 'themes/components/Dialogs/ConfirmDialog';\r\n\r\nimport React, { useState } from 'react'\r\nimport Layout from 'themes/layouts/Admin'\r\nimport { Button, Row, Col, Form, Input, Select, Modal, Radio, DatePicker } from 'antd';\r\nimport UserService from 'themes/services/api/UserService';\r\nimport UserGroupService from 'themes/services/api/UserGroupService';\r\nimport _ from 'lodash';\r\nimport to from 'await-to-js'\r\nimport useBaseHook from 'themes/hooks/BaseHooks'\r\nimport { DeleteFilled, SaveFilled, LeftCircleFilled, CopyFilled } from '@ant-design/icons';\r\nimport usePermissionHook from \"themes/hooks/PermissionHook\";\r\nimport moment from 'moment'\r\n\r\nconst { Option } = Select\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 4 },\r\n  },\r\n  wrapperCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 18 },\r\n  },\r\n};\r\n\r\nconst Edit = ({ groups, user }: { groups: UserGroup[], user: User }) => {\r\n  const { t, notify, redirect, setStore, getAuth, getStore } = useBaseHook();\r\n  const [loading, setLoading] = useState(false);\r\n  const [modalVisible, setModalVisible] = useState(false)\r\n  const [form] = Form.useForm();\r\n  const userService = new UserService()\r\n  const confirmRef = React.createRef<ConfirmDialog>()\r\n\r\n  const { checkPermission } = usePermissionHook();\r\n  const deletePer = checkPermission({\r\n    \"admin.users\": \"D\"\r\n  })\r\n  //submit form\r\n  const onFinish = async (values: any): Promise<void> => {\r\n    setLoading(true)\r\n    let { rePassword, ...otherValues } = values;\r\n    let [error, result]: any[] = await to(userService.edit({\r\n      id: user.id,\r\n      ...otherValues\r\n    }));\r\n    setLoading(false)\r\n\r\n    if (error) {\r\n      return notify(t(`errors:${error.code}`), t(error.message), 'error')\r\n    }\r\n    notify(t(\"message.recordUpdated\"))\r\n    redirect(\"frontend.admin.users.index\")\r\n  }\r\n\r\n  const onDelete = async (): Promise<void> => {\r\n    let [error, result]: any[] = await to(userService.delete({ ids: [user.id] }));\r\n\r\n    if (error) {\r\n      return notify(t(`errors:${error.code}`), t(`${error.message}`), 'error')\r\n    }\r\n    notify(t('message.recordDeleted'))\r\n    redirect(\"frontend.admin.users.index\")\r\n  }\r\n  \r\n  const onChangePassword = async (data: any): Promise<void> => {\r\n    console.log(data)\r\n    setModalVisible(false)\r\n    let values = { id: user.id, password: data.password }\r\n\r\n    let [error, result]: any[] = await to(userService.updatePassword(values));\r\n    if (error) {\r\n      return notify(t(`errors:${error.code}`), t(error.message), 'error')\r\n    }\r\n\r\n    notify(t(\"message.recordUpdated\"))\r\n  }\r\n\r\n  //validate input password\r\n  const validatorPassword = ({ getFieldValue }: { getFieldValue: Function }) => ({\r\n    validator: (rule: any, value: any) => {\r\n      if (!value || getFieldValue('password') === value) {\r\n        return Promise.resolve();\r\n      }\r\n      return Promise.reject(t('form.rePassword'));\r\n    }\r\n  })\r\n\r\n  //render option\r\n  const renderOption = (): JSX.Element[] => {\r\n    let result: JSX.Element[] = [];\r\n    groups.map(item => {\r\n      result.push(\r\n        <Option value={item.id} key={item.id}>{item.name}</Option>\r\n      )\r\n    })\r\n    return result;\r\n  }\r\n  const renderDeleteDialog = () => {\r\n    return (\r\n      <ConfirmDialog\r\n        ref={confirmRef}\r\n        onSubmit={onDelete}\r\n        title={t('deleteItem')}\r\n        content={t('message.deleteConfirm')}\r\n      />\r\n    )\r\n  }\r\n\r\n  const renderChangePassModal = () => {\r\n    const [formChangePassword] = Form.useForm()\r\n    return (<Form form={formChangePassword} name=\"formChangePassword\"\r\n      initialValues={{\r\n        password: \"\",\r\n        repassword: \"\",\r\n      }}\r\n      onFinish={onChangePassword}\r\n    >\r\n      <Modal\r\n        closable={false}\r\n        visible={modalVisible}\r\n        onCancel={() => setModalVisible(false)}\r\n        onOk={() => { formChangePassword.submit(); }}\r\n      >\r\n        <Form.Item\r\n          label={t(\"password\")}\r\n          labelCol={{ span: 5 }}\r\n          wrapperCol={{ span: 19 }}\r\n          name=\"password\"\r\n          rules={[\r\n            { required: true, message: t('form.required') }\r\n          ]}\r\n        >\r\n          <Input.Password\r\n            placeholder={t(\"password\")}\r\n            type=\"password\"\r\n            autoFocus={true}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label={t(\"rePassword\")}\r\n          labelCol={{ span: 5 }}\r\n          wrapperCol={{ span: 19 }}\r\n          name=\"repassword\"\r\n          rules={[\r\n            { required: true, message: t('form.required') },\r\n            validatorPassword\r\n          ]}\r\n        >\r\n          <Input.Password\r\n            placeholder={t(\"rePassword\")}\r\n          />\r\n        </Form.Item>\r\n      </Modal>\r\n    </Form>\r\n    )\r\n  }\r\n\r\n  return <Layout>\r\n    <div className=\"content\">\r\n      <Form\r\n        {...formItemLayout}\r\n        form={form}\r\n        name=\"createUser\"\r\n        initialValues={{\r\n          code: user.code,\r\n          fullname: user.fullname,\r\n          position: user.position,\r\n          birthday: user.birthday.toString(),\r\n          gender: user.gender,\r\n          address: user.address,\r\n          cardId: user.cardId,\r\n          email: user.email,\r\n          phone: user.phone,\r\n          username: user.username,\r\n          groupId: user.groupId\r\n        }}\r\n        onFinish={onFinish}\r\n        scrollToFirstError\r\n      >\r\n        <Form.Item\r\n          label={t(\"code\")}\r\n          name=\"code\"\r\n          rules={[\r\n            { required: true, message: t('form.required'), whitespace: true },\r\n            { max: 10, message: t('form.maxLength', { length: 10 }) }\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={t(\"fullname\")}\r\n          name=\"fullname\"\r\n          rules={[\r\n            { required: true, message: t('form.required') },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        \r\n        <Form.Item\r\n          label={t(\"position\")}\r\n          name=\"position\"\r\n          rules={[\r\n            { required: true, message: t('form.required') },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={t(\"birthday\")}\r\n          name=\"birthday\"\r\n        >\r\n          <DatePicker format={'YYYY-MM-DD'} showTime={false} defaultValue={moment(user.birthday)}/>\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={t(\"gender\")}\r\n          name=\"gender\"\r\n        >\r\n          <Radio.Group>\r\n            <Radio value={0} key={0}>{t(\"male\")}</Radio>\r\n            <Radio value={1} key={1}>{t(\"female\")}</Radio>\r\n          </Radio.Group>\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={t(\"address\")}\r\n          name=\"address\"\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={t(\"cardId\")}\r\n          name=\"cardId\"\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={t(\"email\")}\r\n          name=\"email\"\r\n          rules={[\r\n            { type: 'email', message: t('form.email') }\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={t(\"phone\")}\r\n          name=\"phone\"\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={t(\"username\")}\r\n          name=\"username\"\r\n          rules={[\r\n            { required: true, message: t('form.required'), whitespace: true },\r\n            { max: 15, message: t('form.maxLength', { length: 15 }) }\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={t(\"userGroup\")}\r\n          name=\"groupId\"\r\n          rules={[\r\n            { required: true, message: t('form.required') },\r\n          ]}\r\n        >\r\n          <Select>\r\n            {renderOption()}\r\n          </Select>\r\n        </Form.Item>\r\n\r\n        <Form.Item wrapperCol={{ span: 24 }} style={{ textAlign: \"center\" }}>\r\n          <Button onClick={() => redirect(\"frontend.admin.users.index\")} style={{ marginRight: 8 }}>\r\n            <LeftCircleFilled /> {t('cancel')}\r\n          </Button>\r\n\r\n          <Button type=\"primary\" htmlType=\"submit\" loading={loading} style={{ marginRight: 8 }}>\r\n            <SaveFilled /> {t('submit')}\r\n          </Button>\r\n          <Button onClick={() => { setModalVisible(true) }} style={{ marginRight: 8 }}>\r\n            <CopyFilled /> {t('changePassword')}\r\n          </Button>\r\n          \r\n          <Button hidden={!deletePer} danger onClick={() => { if (confirmRef.current) confirmRef.current.show(user.id) }}>\r\n            <DeleteFilled /> {t('deleteItem')}\r\n          </Button>\r\n         \r\n        </Form.Item>\r\n      </Form>\r\n      {renderDeleteDialog()}\r\n      {renderChangePassModal()}\r\n    </div>\r\n  </Layout>\r\n}\r\n\r\nEdit.getInitialProps = async (ctx: any) => {\r\n  const userGroupService = new UserGroupService(ctx)\r\n  const userService = new UserService(ctx)\r\n  const query = ctx.query;\r\n  let error: any;\r\n\r\n  if (!query.id) {\r\n    //error missing id\r\n    error = {\r\n      code: 9996,\r\n      message: 'missing ID'\r\n    }\r\n  }\r\n\r\n  let [userError, user] = await to(userService.detail({ id: query.id }));\r\n  const [errorGroup, groups] = await to(userGroupService.index({ pageSize: -1 }));\r\n  return {\r\n    namespacesRequired: ['common', 'pages', 'menu'],\r\n    error: error,\r\n    user: user,\r\n    groups: _.get(groups, \"data\", []),\r\n  }\r\n}\r\nEdit.permissions = {\r\n  \"admin.users\": \"U\"\r\n};\r\nexport default Edit"]},"metadata":{},"sourceType":"module"}