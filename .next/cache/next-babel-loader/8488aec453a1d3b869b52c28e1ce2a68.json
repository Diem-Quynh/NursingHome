{"ast":null,"code":"var _jsxFileName = \"E:\\\\DATN\\\\nursinghome\\\\themes\\\\layouts\\\\admin\\\\Menu.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { Fragment } from 'react';\nimport { Menu } from 'antd';\nconst {\n  SubMenu\n} = Menu;\nimport sidebar from 'themes/sidebar';\nimport { getSidebarSelecteds } from 'themes/route';\nimport _routes from 'themes/_routes.json';\nimport useBaseHook from 'themes/hooks/BaseHooks';\nimport usePermissionHook from 'themes/hooks/PermissionHook';\n\nconst MenuComponent = props => {\n  const {\n    router,\n    t,\n    redirect\n  } = useBaseHook({\n    lang: ['menu']\n  });\n  const {\n    checkPermission\n  } = usePermissionHook();\n\n  const getRouteName = () => {\n    const routePath = router.pathname;\n    const routeData = _routes;\n\n    for (let routeName in routeData) {\n      let routeElement = routeData[routeName];\n      if (!routeElement.action) continue;\n      if (routeElement.action.substr(5) === routePath) return routeName;\n    }\n  };\n\n  const generateMenus = data => {\n    return data.map(item => {\n      if (item.children) {\n        if (item.type === \"group\") {\n          let children = generateMenus(item.children);\n          if (!children.length) return;\n          return __jsx(Menu.ItemGroup, {\n            key: item.routeName,\n            title: __jsx(Fragment, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 17\n              }\n            }, item.icon ? item.icon : '', __jsx(\"span\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 19\n              }\n            }, t(item.routeName))),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 13\n            }\n          }, children);\n        } else {\n          return __jsx(SubMenu, {\n            key: item.routeName,\n            title: __jsx(Fragment, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 17\n              }\n            }, item.icon ? item.icon : '', __jsx(\"span\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 19\n              }\n            }, t(item.routeName))),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 13\n            }\n          }, generateMenus(item.children));\n        }\n      }\n\n      if (!checkPermission(item.permissions)) return;\n      return __jsx(Menu.Item, {\n        key: item.routeName,\n        onClick: () => redirect(item.routeName),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }\n      }, item.icon ? item.icon : '', __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }\n      }, t(item.routeName)));\n    }).filter(menu => menu);\n  };\n\n  const {\n    theme,\n    onCollapseChange,\n    isMobile,\n    tReady\n  } = props,\n        otherProps = _objectWithoutProperties(props, [\"theme\", \"onCollapseChange\", \"isMobile\", \"tReady\"]);\n\n  const currentRouteName = getRouteName();\n  const breadcums = getSidebarSelecteds(currentRouteName);\n  let routerNames = breadcums.map(breadcum => breadcum.routeName);\n  const selectedKeys = routerNames.pop();\n  return __jsx(Menu, _extends({\n    mode: \"inline\",\n    theme: theme,\n    defaultOpenKeys: routerNames,\n    selectedKeys: selectedKeys,\n    onClick: isMobile ? () => {\n      onCollapseChange(true);\n    } : undefined\n  }, otherProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 10\n    }\n  }), generateMenus(sidebar));\n};\n\nexport default MenuComponent;","map":{"version":3,"sources":["E:/DATN/nursinghome/themes/layouts/admin/Menu.tsx"],"names":["React","Fragment","Menu","SubMenu","sidebar","getSidebarSelecteds","_routes","useBaseHook","usePermissionHook","MenuComponent","props","router","t","redirect","lang","checkPermission","getRouteName","routePath","pathname","routeData","routeName","routeElement","action","substr","generateMenus","data","map","item","children","type","length","icon","permissions","filter","menu","theme","onCollapseChange","isMobile","tReady","otherProps","currentRouteName","breadcums","routerNames","breadcum","selectedKeys","pop","undefined"],"mappings":";;;;;;;;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,QAAqB,MAArB;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAcD,IAApB;AACA,OAAOE,OAAP,MAAoB,gBAApB;AACA,SAASC,mBAAT,QAAoC,cAApC;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,iBAAP,MAA8B,6BAA9B;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAgB;AACpC,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,CAAV;AAAaC,IAAAA;AAAb,MAA0BN,WAAW,CAAC;AAAEO,IAAAA,IAAI,EAAE,CAAC,MAAD;AAAR,GAAD,CAA3C;AACA,QAAM;AAACC,IAAAA;AAAD,MAAoBP,iBAAiB,EAA3C;;AACA,QAAMQ,YAAY,GAAG,MAAM;AACzB,UAAMC,SAAS,GAAGN,MAAM,CAACO,QAAzB;AACA,UAAMC,SAAc,GAAGb,OAAvB;;AACA,SAAK,IAAIc,SAAT,IAAsBD,SAAtB,EAAiC;AAC/B,UAAIE,YAAY,GAAGF,SAAS,CAACC,SAAD,CAA5B;AACA,UAAI,CAACC,YAAY,CAACC,MAAlB,EAA0B;AAC1B,UAAID,YAAY,CAACC,MAAb,CAAoBC,MAApB,CAA2B,CAA3B,MAAkCN,SAAtC,EAAiD,OAAOG,SAAP;AAClD;AACF,GARD;;AAUA,QAAMI,aAAa,GAAIC,IAAD,IAAe;AACnC,WAAOA,IAAI,CAACC,GAAL,CAAUC,IAAD,IAAe;AAC7B,UAAIA,IAAI,CAACC,QAAT,EAAmB;AACjB,YAAID,IAAI,CAACE,IAAL,KAAc,OAAlB,EAA2B;AACzB,cAAID,QAAQ,GAAGJ,aAAa,CAACG,IAAI,CAACC,QAAN,CAA5B;AACA,cAAI,CAACA,QAAQ,CAACE,MAAd,EAAsB;AACtB,iBACE,MAAC,IAAD,CAAM,SAAN;AACE,YAAA,GAAG,EAAEH,IAAI,CAACP,SADZ;AAEE,YAAA,KAAK,EACH,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACGO,IAAI,CAACI,IAAL,GAAWJ,IAAI,CAACI,IAAhB,GAAsB,EADzB,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAOnB,CAAC,CAACe,IAAI,CAACP,SAAN,CAAR,CAFF,CAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aASGQ,QATH,CADF;AAaD,SAhBD,MAiBK;AACH,iBACE,MAAC,OAAD;AACE,YAAA,GAAG,EAAED,IAAI,CAACP,SADZ;AAEE,YAAA,KAAK,EACH,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACGO,IAAI,CAACI,IAAL,GAAWJ,IAAI,CAACI,IAAhB,GAAsB,EADzB,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAOnB,CAAC,CAACe,IAAI,CAACP,SAAN,CAAR,CAFF,CAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aASGI,aAAa,CAACG,IAAI,CAACC,QAAN,CAThB,CADF;AAaD;AACF;;AACD,UAAG,CAACb,eAAe,CAACY,IAAI,CAACK,WAAN,CAAnB,EAAuC;AACvC,aACE,MAAC,IAAD,CAAM,IAAN;AAAW,QAAA,GAAG,EAAEL,IAAI,CAACP,SAArB;AAAgC,QAAA,OAAO,EAAE,MAAMP,QAAQ,CAACc,IAAI,CAACP,SAAN,CAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEGO,IAAI,CAACI,IAAL,GAAWJ,IAAI,CAACI,IAAhB,GAAsB,EAFzB,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOnB,CAAC,CAACe,IAAI,CAACP,SAAN,CAAR,CAHF,CADF;AAOD,KA3CM,EA2CJa,MA3CI,CA2CIC,IAAD,IAAcA,IA3CjB,CAAP;AA4CD,GA7CD;;AA+CA,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,gBAAT;AAA2BC,IAAAA,QAA3B;AAAqCC,IAAAA;AAArC,MAA+D5B,KAArE;AAAA,QAAsD6B,UAAtD,4BAAqE7B,KAArE;;AACA,QAAM8B,gBAAgB,GAAGxB,YAAY,EAArC;AACA,QAAMyB,SAAS,GAAGpC,mBAAmB,CAACmC,gBAAD,CAArC;AACA,MAAIE,WAAW,GAAGD,SAAS,CAACf,GAAV,CAAeiB,QAAD,IAAmBA,QAAQ,CAACvB,SAA1C,CAAlB;AACA,QAAMwB,YAAY,GAAGF,WAAW,CAACG,GAAZ,EAArB;AACA,SAAO,MAAC,IAAD;AACL,IAAA,IAAI,EAAC,QADA;AAEL,IAAA,KAAK,EAAEV,KAFF;AAGL,IAAA,eAAe,EAAEO,WAHZ;AAIL,IAAA,YAAY,EAAEE,YAJT;AAKL,IAAA,OAAO,EACLP,QAAQ,GACJ,MAAM;AACND,MAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACD,KAHK,GAIJU;AAVD,KAYDP,UAZC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAcJf,aAAa,CAACpB,OAAD,CAdT,CAAP;AAgBD,CAjFD;;AAmFA,eAAeK,aAAf","sourcesContent":["\r\nimport React, { Fragment } from 'react';\r\nimport { Menu } from 'antd';\r\nconst { SubMenu } = Menu\r\nimport sidebar from 'themes/sidebar'\r\nimport { getSidebarSelecteds } from 'themes/route'\r\nimport _routes from 'themes/_routes.json'\r\nimport useBaseHook from 'themes/hooks/BaseHooks'\r\nimport usePermissionHook from 'themes/hooks/PermissionHook'\r\n\r\nconst MenuComponent = (props: any) => {\r\n  const { router, t, redirect } = useBaseHook({ lang: ['menu'] })\r\n  const {checkPermission} = usePermissionHook()\r\n  const getRouteName = () => {\r\n    const routePath = router.pathname\r\n    const routeData: any = _routes\r\n    for (let routeName in routeData) {\r\n      let routeElement = routeData[routeName]\r\n      if (!routeElement.action) continue;\r\n      if (routeElement.action.substr(5) === routePath) return routeName\r\n    }\r\n  }\r\n\r\n  const generateMenus = (data: any) => {\r\n    return data.map((item: any) => {\r\n      if (item.children) {\r\n        if (item.type === \"group\") {\r\n          let children = generateMenus(item.children)\r\n          if (!children.length) return;\r\n          return (\r\n            <Menu.ItemGroup\r\n              key={item.routeName}\r\n              title={\r\n                <Fragment>\r\n                  {item.icon? item.icon: ''}\r\n                  <span>{t(item.routeName)}</span>\r\n                </Fragment>\r\n              }\r\n            >\r\n              {children}\r\n            </Menu.ItemGroup>\r\n          );\r\n        }\r\n        else {\r\n          return (\r\n            <SubMenu\r\n              key={item.routeName}\r\n              title={\r\n                <Fragment>\r\n                  {item.icon? item.icon: ''}\r\n                  <span>{t(item.routeName)}</span>\r\n                </Fragment>\r\n              }\r\n            >\r\n              {generateMenus(item.children)}\r\n            </SubMenu>\r\n          );\r\n        }\r\n      }\r\n      if(!checkPermission(item.permissions)) return\r\n      return (\r\n        <Menu.Item key={item.routeName} onClick={() => redirect(item.routeName)}\r\n        >\r\n          {item.icon? item.icon: ''}\r\n          <span>{t(item.routeName)}</span>\r\n        </Menu.Item>\r\n      );\r\n    }).filter((menu:any) => menu);\r\n  }\r\n\r\n  const { theme, onCollapseChange, isMobile, tReady, ...otherProps } = props\r\n  const currentRouteName = getRouteName()\r\n  const breadcums = getSidebarSelecteds(currentRouteName)\r\n  let routerNames = breadcums.map((breadcum: any) => breadcum.routeName)\r\n  const selectedKeys = routerNames.pop()\r\n  return <Menu\r\n    mode=\"inline\"\r\n    theme={theme}\r\n    defaultOpenKeys={routerNames}\r\n    selectedKeys={selectedKeys}\r\n    onClick={\r\n      isMobile\r\n        ? () => {\r\n          onCollapseChange(true)\r\n        }\r\n        : undefined\r\n    }\r\n    {...otherProps}\r\n  >\r\n    {generateMenus(sidebar)}\r\n  </Menu>\r\n}\r\n\r\nexport default MenuComponent"]},"metadata":{},"sourceType":"module"}