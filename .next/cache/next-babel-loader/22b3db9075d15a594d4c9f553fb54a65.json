{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nimport Layout from 'themes/layouts/Login';\nimport { LockOutlined, UserOutlined } from '@ant-design/icons';\nimport { Button } from 'antd';\nimport { Form, Input } from 'antd';\nimport UserService from 'themes/services/api/UserService';\nimport to from 'await-to-js';\nimport useBaseHooks from 'themes/hooks/BaseHooks';\n\nvar Login = function Login() {\n  _s();\n\n  var _useBaseHooks = useBaseHooks(),\n      t = _useBaseHooks.t,\n      getAuth = _useBaseHooks.getAuth,\n      getPublicRuntimeConfig = _useBaseHooks.getPublicRuntimeConfig,\n      notify = _useBaseHooks.notify;\n\n  var publicRuntimeConfig = getPublicRuntimeConfig();\n  var auth = getAuth();\n\n  var _useState = useState(false),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  var _Form$useForm = Form.useForm(),\n      _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n      form = _Form$useForm2[0];\n\n  var userService = new UserService();\n\n  var onFinish = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values) {\n      var _yield$to, _yield$to2, error, result;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setLoading(true);\n              _context.next = 3;\n              return to(userService.login({\n                data: values\n              }));\n\n            case 3:\n              _yield$to = _context.sent;\n              _yield$to2 = _slicedToArray(_yield$to, 2);\n              error = _yield$to2[0];\n              result = _yield$to2[1];\n              setLoading(false);\n\n              if (!error) {\n                _context.next = 10;\n                break;\n              }\n\n              return _context.abrupt(\"return\", notify(t('message.loginFailed'), t(\"errors:\".concat(error.code)), 'error'));\n\n            case 10:\n              notify(t('message.loginSuccess'));\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onFinish(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(Layout, null, __jsx(\"div\", {\n    className: \"logo\"\n  }, __jsx(\"div\", {\n    className: \"img\"\n  }, __jsx(\"img\", {\n    src: publicRuntimeConfig.LOGO\n  })), __jsx(\"div\", {\n    className: \"sitename\"\n  }, t('admincp'))), __jsx(Form, {\n    onFinish: onFinish,\n    form: form,\n    name: \"loginForm\",\n    layout: \"horizontal\",\n    initialValues: {\n      username: \"\",\n      password: \"\"\n    }\n  }, __jsx(Form.Item, {\n    name: \"username\",\n    rules: [{\n      required: true,\n      message: t('form.required')\n    }]\n  }, __jsx(Input, {\n    placeholder: t('username'),\n    prefix: __jsx(UserOutlined, {\n      style: {\n        color: 'rgba(0,0,0,.25)'\n      }\n    })\n  })), __jsx(Form.Item, {\n    name: \"password\",\n    rules: [{\n      required: true,\n      message: t('form.required')\n    }]\n  }, __jsx(Input.Password, {\n    placeholder: t('password'),\n    prefix: __jsx(LockOutlined, {\n      style: {\n        color: 'rgba(0,0,0,.25)'\n      }\n    })\n  })), __jsx(Form.Item, null, __jsx(Button, {\n    className: \"btnLogin\",\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: loading\n  }, \" \", t('login')))));\n};\n\n_s(Login, \"CpbS2kjp3uurfapsRtfvOdx6TCY=\", false, function () {\n  return [useBaseHooks, Form.useForm];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["E:/DATN/nursinghome/pages/admin/login/index.tsx"],"names":["useState","Layout","LockOutlined","UserOutlined","Button","Form","Input","UserService","to","useBaseHooks","Login","t","getAuth","getPublicRuntimeConfig","notify","publicRuntimeConfig","auth","loading","setLoading","useForm","form","userService","onFinish","values","login","data","error","result","code","LOGO","username","password","required","message","color"],"mappings":"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","sourcesContent":["import { useState } from 'react'\r\nimport Layout from 'themes/layouts/Login'\r\nimport { LockOutlined, UserOutlined } from '@ant-design/icons';\r\nimport { Button } from 'antd';\r\nimport { Form, Input } from 'antd'\r\n\r\nimport UserService from 'themes/services/api/UserService'\r\nimport to from 'await-to-js'\r\nimport useBaseHooks from 'themes/hooks/BaseHooks';\r\n\r\nconst Login = () => {\r\n  const { t, getAuth, getPublicRuntimeConfig, notify } = useBaseHooks()\r\n  const publicRuntimeConfig = getPublicRuntimeConfig()\r\n  const auth = getAuth();\r\n\r\n  const [loading, setLoading] = useState(false)\r\n  const [form] = Form.useForm()\r\n  const userService = new UserService()\r\n  const onFinish = async (values: any) => {\r\n\r\n    setLoading(true)\r\n    let [error, result]: any[] = await to(userService.login({ data: values }))\r\n    setLoading(false)\r\n    if (error) {\r\n      return notify(t('message.loginFailed'), t(`errors:${error.code}`), 'error')\r\n    }\r\n\r\n    notify(t('message.loginSuccess'))\r\n  }\r\n\r\n  return <Layout>\r\n    <div className=\"logo\">\r\n      <div className=\"img\">\r\n        <img src={publicRuntimeConfig.LOGO}></img>\r\n      </div>\r\n      <div className=\"sitename\">{t('admincp')}</div>\r\n    </div>\r\n    <Form\r\n      onFinish={onFinish}\r\n      form={form}\r\n      name=\"loginForm\"\r\n      layout=\"horizontal\"\r\n      initialValues={{\r\n        username: \"\",\r\n        password: \"\",\r\n      }}\r\n    >\r\n      <Form.Item name=\"username\" rules={[{ required: true, message: t('form.required') }]} >\r\n        <Input placeholder={t('username')} prefix={<UserOutlined style={{ color: 'rgba(0,0,0,.25)' }} />} />\r\n      </Form.Item>\r\n      <Form.Item name=\"password\" rules={[{ required: true, message: t('form.required') }]}>\r\n        <Input.Password placeholder={t('password')} prefix={<LockOutlined style={{ color: 'rgba(0,0,0,.25)' }} />} />\r\n      </Form.Item>\r\n      <Form.Item>\r\n        <Button className=\"btnLogin\" type=\"primary\" htmlType=\"submit\" loading={loading}> {t('login')}</Button>\r\n      </Form.Item>\r\n    </Form>\r\n  </Layout>\r\n}\r\n\r\nexport default Login"]},"metadata":{},"sourceType":"module"}