{"ast":null,"code":"var _jsxFileName = \"E:\\\\DATN\\\\nursinghome\\\\pages\\\\_document.jsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport Document, { Head, Main, NextScript } from 'next/document';\n\nconst Route = require('themes/_routes.json');\n\nclass MyDocument extends Document {\n  render() {\n    return __jsx(\"html\", {\n      lang: \"en\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 7\n      }\n    }, __jsx(Head, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }\n    }, __jsx(\"meta\", {\n      charSet: \"utf-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 11\n      }\n    }), __jsx(\"meta\", {\n      name: \"viewport\",\n      content: \"minimum-scale=1,maximum-scale=1, initial-scale=1, width=device-width, shrink-to-fit=no\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 11\n      }\n    }), __jsx(\"meta\", {\n      name: \"theme-color\",\n      content: \"#fff\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }\n    }), __jsx(\"meta\", {\n      name: \"mobile-web-app-capable\",\n      content: \"yes\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }\n    }), __jsx(\"meta\", {\n      name: \"apple-mobile-web-app-capable\",\n      content: \"yes\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }\n    }), __jsx(\"link\", {\n      rel: \"manifest\",\n      href: \"/manifest.json\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }\n    }), __jsx(\"link\", {\n      rel: \"stylesheet\",\n      href: \"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }\n    }), __jsx(\"script\", {\n      dangerouslySetInnerHTML: {\n        __html: `const Routes = ${JSON.stringify(Route.routes)};`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }\n    })), __jsx(\"body\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }, __jsx(Main, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }\n    }), __jsx(NextScript, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nMyDocument.getInitialProps = async ctx => {\n  // Resolution order\n  //\n  // On the server:\n  // 1. app.getInitialProps\n  // 2. page.getInitialProps\n  // 3. document.getInitialProps\n  // 4. app.render\n  // 5. page.render\n  // 6. document.render\n  //\n  // On the server with error:\n  // 1. document.getInitialProps\n  // 2. app.render\n  // 3. page.render\n  // 4. document.render\n  //\n  // On the client\n  // 1. app.getInitialProps\n  // 2. page.getInitialProps\n  // 3. app.render\n  // 4. page.render\n  // Render app and page and get the context of the page with collected side effects.\n  const originalRenderPage = ctx.renderPage;\n\n  ctx.renderPage = () => originalRenderPage({});\n\n  const initialProps = await Document.getInitialProps(ctx);\n  return _objectSpread(_objectSpread({}, initialProps), {}, {\n    // Styles fragment is rendered after the app and page rendering finish.\n    styles: [__jsx(React.Fragment, {\n      key: \"styles\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }\n    }, initialProps.styles)]\n  });\n};\n\nexport default MyDocument;","map":{"version":3,"sources":["E:/DATN/nursinghome/pages/_document.jsx"],"names":["React","Document","Head","Main","NextScript","Route","require","MyDocument","render","__html","JSON","stringify","routes","getInitialProps","ctx","originalRenderPage","renderPage","initialProps","styles"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,IAAmBC,IAAnB,EAAyBC,IAAzB,EAA+BC,UAA/B,QAAiD,eAAjD;;AACA,MAAMC,KAAK,GAAGC,OAAO,CAAC,qBAAD,CAArB;;AAEA,MAAMC,UAAN,SAAyBN,QAAzB,CAAkC;AAChCO,EAAAA,MAAM,GAAG;AACP,WACE;AAAM,MAAA,IAAI,EAAC,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,OAAO,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAGE;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,OAAO,EAAC,wFAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAQE;AAAM,MAAA,IAAI,EAAC,aAAX;AAAyB,MAAA,OAAO,EAAC,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,EAUE;AAAM,MAAA,IAAI,EAAC,wBAAX;AAAoC,MAAA,OAAO,EAAC,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF,EAWE;AAAM,MAAA,IAAI,EAAC,8BAAX;AAA0C,MAAA,OAAO,EAAC,KAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF,EAcE;AAAM,MAAA,GAAG,EAAC,UAAV;AAAsB,MAAA,IAAI,EAAC,gBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdF,EAeE;AACE,MAAA,GAAG,EAAC,YADN;AAEE,MAAA,IAAI,EAAC,6EAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfF,EAmBE;AAAQ,MAAA,uBAAuB,EAAE;AAAEC,QAAAA,MAAM,EAAG,kBAAiBC,IAAI,CAACC,SAAL,CAAeN,KAAK,CAACO,MAArB,CAA6B;AAAzD,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnBF,CADF,EAsBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAtBF,CADF;AA6BD;;AA/B+B;;AAkClCL,UAAU,CAACM,eAAX,GAA6B,MAAMC,GAAN,IAAa;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,QAAMC,kBAAkB,GAAGD,GAAG,CAACE,UAA/B;;AAEAF,EAAAA,GAAG,CAACE,UAAJ,GAAiB,MACfD,kBAAkB,CAAC,EAAD,CADpB;;AAIA,QAAME,YAAY,GAAG,MAAMhB,QAAQ,CAACY,eAAT,CAAyBC,GAAzB,CAA3B;AACA,yCACKG,YADL;AAEE;AACAC,IAAAA,MAAM,EAAE,CACN,MAAC,KAAD,CAAO,QAAP;AAAgB,MAAA,GAAG,EAAC,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,YAAY,CAACC,MADhB,CADM;AAHV;AASD,CAxCD;;AA0CA,eAAeX,UAAf","sourcesContent":["import React from 'react';\r\nimport Document, { Head, Main, NextScript } from 'next/document';\r\nconst Route = require('themes/_routes.json')\r\n\r\nclass MyDocument extends Document {\r\n  render() {\r\n    return (\r\n      <html lang=\"en\">\r\n        <Head>\r\n          <meta charSet=\"utf-8\" />\r\n          {/* Use minimum-scale=1 to enable GPU rasterization */}\r\n          <meta\r\n            name=\"viewport\"\r\n            content=\"minimum-scale=1,maximum-scale=1, initial-scale=1, width=device-width, shrink-to-fit=no\"\r\n          />\r\n          {/* PWA primary color */}\r\n          <meta name=\"theme-color\" content=\"#fff\" />\r\n          \r\n          <meta name=\"mobile-web-app-capable\" content=\"yes\"/>\r\n          <meta name=\"apple-mobile-web-app-capable\" content=\"yes\" />\r\n\r\n          {/* hidden Reader View in IOS */}\r\n          <link rel=\"manifest\"  href=\"/manifest.json\"></link>\r\n          <link\r\n            rel=\"stylesheet\"\r\n            href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\"\r\n          />\r\n          <script dangerouslySetInnerHTML={{ __html: `const Routes = ${JSON.stringify(Route.routes)};` }} />\r\n        </Head>\r\n        <body>\r\n          <Main />\r\n          <NextScript />\r\n        </body>\r\n      </html>\r\n    );\r\n  }\r\n}\r\n\r\nMyDocument.getInitialProps = async ctx => {\r\n  // Resolution order\r\n  //\r\n  // On the server:\r\n  // 1. app.getInitialProps\r\n  // 2. page.getInitialProps\r\n  // 3. document.getInitialProps\r\n  // 4. app.render\r\n  // 5. page.render\r\n  // 6. document.render\r\n  //\r\n  // On the server with error:\r\n  // 1. document.getInitialProps\r\n  // 2. app.render\r\n  // 3. page.render\r\n  // 4. document.render\r\n  //\r\n  // On the client\r\n  // 1. app.getInitialProps\r\n  // 2. page.getInitialProps\r\n  // 3. app.render\r\n  // 4. page.render\r\n\r\n  // Render app and page and get the context of the page with collected side effects.\r\n  const originalRenderPage = ctx.renderPage;\r\n\r\n  ctx.renderPage = () =>\r\n    originalRenderPage({\r\n    });\r\n\r\n  const initialProps = await Document.getInitialProps(ctx);\r\n  return {\r\n    ...initialProps,\r\n    // Styles fragment is rendered after the app and page rendering finish.\r\n    styles: [\r\n      <React.Fragment key=\"styles\">\r\n        {initialProps.styles}\r\n      </React.Fragment>,\r\n    ],\r\n  };\r\n};\r\n\r\nexport default MyDocument;\r\n"]},"metadata":{},"sourceType":"module"}