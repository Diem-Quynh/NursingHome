{"ast":null,"code":"var _jsxFileName = \"E:\\\\DATN\\\\nursinghome\\\\pages\\\\admin\\\\userGroups\\\\role.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport Layout from 'themes/layouts/Admin';\nimport { Button, Typography, Checkbox } from 'antd';\nimport { Table } from 'antd';\nimport UserPermissionService from 'themes/services/api/UserPermissionService';\nimport UserGroupPermissionService from 'themes/services/api/UserGroupPermissionService';\nimport to from 'await-to-js';\nimport useBaseHook from 'themes/hooks/BaseHooks';\nimport { LeftCircleFilled, SaveFilled } from '@ant-design/icons';\nconst {\n  Title,\n  Text\n} = Typography;\n\nconst Role = ({\n  permissionCategories,\n  groupId\n}) => {\n  let result = {};\n  const {\n    t,\n    notify,\n    redirect,\n    router\n  } = useBaseHook();\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const userGroupPermissionService = new UserGroupPermissionService();\n\n  const onFinish = async values => {\n    setLoading(true);\n    let [error, result] = await to(userGroupPermissionService.update({\n      permissions: values,\n      groupId: groupId\n    }));\n    setLoading(false);\n\n    if (error) {\n      return notify(t(`errors:${error.code}`), t(error.message), 'error');\n    }\n\n    notify(t(\"message.recordCreated\"));\n    redirect(\"frontend.admin.userGroups.index\");\n  };\n\n  const renderCheckbox = (row, permission) => {\n    function onChange(e) {\n      e.target.checked ? row.value += permission : row.value -= permission;\n      result[row.key] = row.value;\n      console.log(result);\n    }\n\n    const checked = (row.value & permission) === permission;\n    const disabled = (row.avalibleValue & permission) !== permission;\n    return __jsx(Checkbox, {\n      defaultChecked: checked,\n      disabled: disabled,\n      onChange: onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 12\n      }\n    });\n  };\n\n  const renderPermissionCategory = category => {\n    const columns = [{\n      title: \"#\",\n      dataIndex: 'user_permissions.id',\n      key: 'id',\n      width: '5%'\n    }, {\n      title: category.name,\n      dataIndex: 'name',\n      key: 'name'\n    }, {\n      title: t(\"create\"),\n      dataIndex: 'value',\n      key: 'valueC',\n      width: '10%',\n      render: (value, row) => renderCheckbox(row, 8)\n    }, {\n      title: t(\"view\"),\n      dataIndex: 'value',\n      key: 'valueR',\n      width: '10%',\n      render: (value, row) => renderCheckbox(row, 4)\n    }, {\n      title: t(\"edit\"),\n      dataIndex: 'value',\n      key: 'valueU',\n      width: '10%',\n      render: (value, row) => renderCheckbox(row, 2)\n    }, {\n      title: t(\"delete\"),\n      dataIndex: 'value',\n      key: 'valueD',\n      width: '10%',\n      render: (value, row) => renderCheckbox(row, 1)\n    }];\n    return __jsx(Table, {\n      size: \"small\",\n      key: category.id,\n      columns: columns,\n      dataSource: category.permissions,\n      pagination: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 12\n      }\n    });\n  };\n\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 10\n    }\n  }, __jsx(\"div\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }\n  }, permissionCategories.map(g => renderPermissionCategory(g)), __jsx(\"div\", {\n    style: {\n      marginTop: \"24px\",\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, __jsx(Button, {\n    onClick: () => onFinish(result),\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: loading,\n    style: {\n      marginRight: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, __jsx(SaveFilled, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }), \" \", t('submit')), __jsx(Button, {\n    onClick: () => router.back(),\n    style: {\n      marginRight: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, __jsx(LeftCircleFilled, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }), \" \", t('cancel')))));\n};\n\nRole.getInitialProps = async ctx => {\n  const userPermissionService = new UserPermissionService(ctx);\n  const query = ctx.query;\n  let error;\n\n  if (!query.id) {\n    error = {\n      code: 9996,\n      message: 'missing ID'\n    };\n  }\n\n  let [userError, permissionCategories] = await to(userPermissionService.getByGroupId({\n    groupId: query.id\n  }));\n  console.log(permissionCategories, 'index');\n  return {\n    namespacesRequired: ['common', 'pages', 'menu', 'errors'],\n    error: error,\n    permissionCategories: permissionCategories,\n    groupId: query.id\n  };\n};\n\nRole.permissions = {\n  \"admin.userGroups\": \"U\"\n};\nexport default Role;","map":{"version":3,"sources":["E:/DATN/nursinghome/pages/admin/userGroups/role.tsx"],"names":["React","useState","Layout","Button","Typography","Checkbox","Table","UserPermissionService","UserGroupPermissionService","to","useBaseHook","LeftCircleFilled","SaveFilled","Title","Text","Role","permissionCategories","groupId","result","t","notify","redirect","router","loading","setLoading","userGroupPermissionService","onFinish","values","error","update","permissions","code","message","renderCheckbox","row","permission","onChange","e","target","checked","value","key","console","log","disabled","avalibleValue","renderPermissionCategory","category","columns","title","dataIndex","width","name","render","id","map","g","marginTop","textAlign","marginRight","back","getInitialProps","ctx","userPermissionService","query","userError","getByGroupId","namespacesRequired"],"mappings":"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","sourcesContent":["import ConfirmDialog from 'themes/components/Dialogs/ConfirmDialog';\r\n\r\nimport React, { useState } from 'react'\r\nimport Layout from 'themes/layouts/Admin'\r\nimport { Button, Row, Col, Form, Input, Select, Typography, Checkbox } from 'antd';\r\nimport { Table } from 'antd';\r\nimport { AppstoreOutlined, MailOutlined, SettingOutlined } from '@ant-design/icons';\r\nimport UserPermissionService from 'themes/services/api/UserPermissionService';\r\nimport UserGroupPermissionService from 'themes/services/api/UserGroupPermissionService';\r\nimport _ from 'lodash';\r\nimport to from 'await-to-js'\r\nimport useBaseHook from 'themes/hooks/BaseHooks'\r\nimport { LeftCircleFilled, SaveFilled, DeleteFilled } from '@ant-design/icons';\r\nimport BreadCrumb from 'themes/components/Breadcumb'\r\nimport { getInputClassName } from 'antd/lib/input/Input';\r\nconst { Title, Text } = Typography;\r\n\r\nconst Role = ({ permissionCategories, groupId }: { permissionCategories: PermissionCategories[], groupId: number }) => {\r\n  let result: any = {}\r\n  const { t, notify, redirect, router } = useBaseHook();\r\n  const [loading, setLoading] = useState(false);\r\n  const userGroupPermissionService = new UserGroupPermissionService()\r\n\r\n  const onFinish = async (values: any): Promise<void> => {\r\n    setLoading(true)\r\n    let [error, result]: any[] = await to(userGroupPermissionService.update({\r\n      permissions: values,\r\n      groupId: groupId\r\n    }));\r\n    setLoading(false)\r\n\r\n    if (error) {\r\n      return notify(t(`errors:${error.code}`), t(error.message), 'error')\r\n    }\r\n    notify(t(\"message.recordCreated\"))\r\n    redirect(\"frontend.admin.userGroups.index\")\r\n  }\r\n\r\n  const renderCheckbox = (row: any, permission: number) => {\r\n    function onChange(e: any) {\r\n      e.target.checked ? row.value += permission : row.value -= permission;\r\n      result[row.key] = row.value\r\n      console.log(result)\r\n    }\r\n    const checked = (row.value & permission) === permission\r\n    const disabled = (row.avalibleValue & permission) !== permission\r\n    return <Checkbox defaultChecked={checked} disabled={disabled} onChange={onChange}></Checkbox>\r\n  }\r\n\r\n  const renderPermissionCategory = (category: any) => {\r\n    const columns = [\r\n      {\r\n        title: \"#\",\r\n        dataIndex: 'user_permissions.id',\r\n        key: 'id',\r\n        width: '5%',\r\n      },\r\n      {\r\n        title: category.name,\r\n        dataIndex: 'name',\r\n        key: 'name',\r\n\r\n      },\r\n      {\r\n        title: t(\"create\"),\r\n        dataIndex: 'value',\r\n        key: 'valueC',\r\n        width: '10%',\r\n        render: (value: any, row: any) => renderCheckbox(row, 8)\r\n      },\r\n      {\r\n        title: t(\"view\"),\r\n        dataIndex: 'value',\r\n        key: 'valueR',\r\n        width: '10%',\r\n        render: (value: any, row: any) => renderCheckbox(row, 4)\r\n      },\r\n      {\r\n        title: t(\"edit\"),\r\n        dataIndex: 'value',\r\n        key: 'valueU',\r\n        width: '10%',\r\n        render: (value: any, row: any) => renderCheckbox(row, 2)\r\n      },\r\n      {\r\n        title: t(\"delete\"),\r\n        dataIndex: 'value',\r\n        key: 'valueD',\r\n        width: '10%',\r\n        render: (value: any, row: any) => renderCheckbox(row, 1)\r\n      }\r\n    ];\r\n    return <Table size=\"small\" key={category.id} columns={columns} dataSource={category.permissions} pagination={false} />\r\n  }\r\n  return <Layout>\r\n    <div className=\"content\">\r\n      {permissionCategories.map((g: any) => renderPermissionCategory(g))}\r\n      <div style={{ marginTop: \"24px\", textAlign: \"center\"}}>\r\n        <Button onClick={() => onFinish(result)} type=\"primary\" htmlType=\"submit\" loading={loading} style={{ marginRight: 8 }}>\r\n          <SaveFilled /> {t('submit')}\r\n        </Button>\r\n        <Button onClick={() => router.back()} style={{ marginRight: 8 }}>\r\n          <LeftCircleFilled /> {t('cancel')}\r\n        </Button>\r\n      </div>\r\n    </div>\r\n\r\n  </Layout>\r\n}\r\n\r\nRole.getInitialProps = async (ctx: any) => {\r\n  const userPermissionService = new UserPermissionService(ctx)\r\n  const query = ctx.query;\r\n  let error: any;\r\n\r\n  if (!query.id) {\r\n    error = {\r\n      code: 9996,\r\n      message: 'missing ID'\r\n    }\r\n  }\r\n\r\n  let [userError, permissionCategories] = await to(userPermissionService.getByGroupId({ groupId: query.id }));\r\n  console.log(permissionCategories,'index')\r\n  return {\r\n    namespacesRequired: ['common', 'pages', 'menu','errors'],\r\n    error: error,\r\n    permissionCategories: permissionCategories,\r\n    groupId: query.id\r\n  }\r\n}\r\nRole.permissions = {\r\n  \"admin.userGroups\": \"U\"\r\n}\r\nexport default Role"]},"metadata":{},"sourceType":"module"}