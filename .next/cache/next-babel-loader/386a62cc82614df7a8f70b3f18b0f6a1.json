{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _s = $RefreshSig$(),\n    _this = this,\n    _jsxFileName = \"E:\\\\DATN\\\\nursinghome\\\\pages\\\\admin\\\\patients\\\\index.tsx\",\n    _s2 = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport Layout from 'themes/layouts/Admin';\nimport { GridTable, GridTableHelper } from 'themes/components/Table';\nimport ConfirmDialog from 'themes/components/Dialogs/ConfirmDialog';\nimport { Button } from 'antd';\nimport PatientService from 'themes/services/api/PatientService';\nimport to from 'await-to-js';\nimport React, { useState } from 'react';\nimport useBaseHook from 'themes/hooks/BaseHooks';\nimport usePermissionHook from \"themes/hooks/PermissionHook\";\nimport { PlusCircleOutlined, DeleteOutlined } from '@ant-design/icons';\n\nvar formaterGender = function formaterGender(value) {\n  _s();\n\n  var _useBaseHook = useBaseHook(),\n      t = _useBaseHook.t;\n\n  value = Math.round(Number(value));\n  value = value == 0 ? t('male') : t('female');\n  return \"\".concat(value);\n};\n\n_s(formaterGender, \"p5XxPb9pOs/ntIUYwYvkhnBHVkY=\", false, function () {\n  return [useBaseHook];\n});\n\nvar formaterDate = function formaterDate(value) {\n  value = value ? String(value) : \"\";\n  value = value.substr(0, 10);\n  return \"\".concat(value);\n};\n\nvar Index = function Index(_ref) {\n  _s2();\n\n  var patients = _ref.patients,\n      total = _ref.total;\n\n  var _useBaseHook2 = useBaseHook(),\n      t = _useBaseHook2.t,\n      notify = _useBaseHook2.notify,\n      redirect = _useBaseHook2.redirect,\n      setStore = _useBaseHook2.setStore,\n      getAuth = _useBaseHook2.getAuth,\n      getStore = _useBaseHook2.getStore;\n\n  var _useState = useState(true),\n      hiddenDeleteBtn = _useState[0],\n      setHiddenDeleteBtn = _useState[1];\n\n  var _useState2 = useState([]),\n      selectedIds = _useState2[0],\n      setSelectedIds = _useState2[1];\n\n  var patientService = new PatientService();\n  var confirmRef = React.createRef();\n  var tableRef = React.createRef();\n\n  var _usePermissionHook = usePermissionHook(),\n      checkPermission = _usePermissionHook.checkPermission;\n\n  var createPer = checkPermission({\n    \"admin.patients\": \"C\"\n  });\n  var deletePer = checkPermission({\n    \"admin.patients\": \"D\"\n  });\n  var columns = [{\n    title: t(\"fullname\"),\n    dataIndex: 'fullname',\n    key: 'fullname',\n    sorter: true,\n    filterable: true,\n    fixed: 'left',\n    render: function render(text, record) {\n      return __jsx(\"a\", {\n        onClick: function onClick() {\n          return redirect('frontend.admin.patients.edit', {\n            id: record.id\n          });\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }\n      }, record.fullname);\n    }\n  }, {\n    title: t('room'),\n    dataIndex: 'roomCode',\n    sorter: true,\n    filterable: true,\n    key: 'beds.roomCode',\n    fixed: 'left',\n    render: function render(text, record) {\n      return __jsx(\"div\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 46\n        }\n      }, record.roomCode, \" - \", record.bedCode);\n    }\n  }, {\n    title: t('birthday'),\n    dataIndex: 'birthday',\n    key: 'birthday',\n    filterDate: true,\n    render: function render(text, record) {\n      return __jsx(\"div\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 46\n        }\n      }, formaterDate(text));\n    }\n  }, {\n    title: t(\"gender\"),\n    dataIndex: 'gender',\n    key: 'gender',\n    filterCheck: true,\n    text: {\n      0: t('male'),\n      1: t('female')\n    },\n    width: '7%',\n    render: function render(text, record) {\n      return __jsx(\"div\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 46\n        }\n      }, formaterGender(text));\n    }\n  }, {\n    title: t(\"address\"),\n    dataIndex: 'address',\n    key: 'address',\n    filterable: true\n  }, {\n    title: t(\"cardId\"),\n    dataIndex: 'cardId',\n    key: 'cardId',\n    filterable: true\n  }, {\n    title: t(\"phone\"),\n    dataIndex: 'phone',\n    key: 'phone',\n    filterable: true\n  }, {\n    title: t(\"patients.medicalHistory\"),\n    dataIndex: 'medicalHistory',\n    key: 'medicalHistory',\n    filterable: true\n  }, {\n    title: t(\"patients.dateIn\"),\n    dataIndex: 'dateIn',\n    sorter: true,\n    filterable: true,\n    key: 'dateIn',\n    render: function render(text, record) {\n      return __jsx(\"div\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 46\n        }\n      }, formaterDate(text));\n    }\n  }, {\n    title: t(\"patients.dateOut\"),\n    dataIndex: 'dateOut',\n    sorter: true,\n    filterable: true,\n    key: 'dateOut',\n    render: function render(text, record) {\n      return __jsx(\"div\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 46\n        }\n      }, formaterDate(text));\n    }\n  }];\n\n  var onChangeSelection = function onChangeSelection(data) {\n    if (data.length > 0) {\n      setHiddenDeleteBtn(false);\n    } else {\n      setHiddenDeleteBtn(true);\n    }\n\n    setSelectedIds(data);\n  };\n\n  var fetchData = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values) {\n      var _yield$to, _yield$to2, error, patients, code, message;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return to(patientService.index(values));\n\n            case 2:\n              _yield$to = _context.sent;\n              _yield$to2 = _slicedToArray(_yield$to, 2);\n              error = _yield$to2[0];\n              patients = _yield$to2[1];\n\n              if (!error) {\n                _context.next = 10;\n                break;\n              }\n\n              code = error.code, message = error.message;\n              notify(t(\"errors:\".concat(code)), t(message), 'error');\n              return _context.abrupt(\"return\", {});\n\n            case 10:\n              return _context.abrupt(\"return\", patients);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function fetchData(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var onDelete = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var _yield$to3, _yield$to4, error, result;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return to(patientService[\"delete\"]({\n                ids: selectedIds\n              }));\n\n            case 2:\n              _yield$to3 = _context2.sent;\n              _yield$to4 = _slicedToArray(_yield$to3, 2);\n              error = _yield$to4[0];\n              result = _yield$to4[1];\n\n              if (!error) {\n                _context2.next = 8;\n                break;\n              }\n\n              return _context2.abrupt(\"return\", notify(t(\"errors:\".concat(error.code)), t(\"\".concat(error.message)), 'error'));\n\n            case 8:\n              notify(t(\"message.recordDeleted\"));\n\n              if (tableRef.current !== null) {\n                tableRef.current.reload();\n              }\n\n              setSelectedIds([]);\n              setHiddenDeleteBtn(true);\n\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function onDelete() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var renderDeleteDialog = function renderDeleteDialog() {\n    return __jsx(ConfirmDialog, {\n      ref: confirmRef,\n      onSubmit: onDelete,\n      title: t('deleteItem'),\n      content: t('message.deleteConfirm'),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 7\n      }\n    });\n  };\n\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 10\n    }\n  }, __jsx(\"div\", {\n    className: \"content\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 5\n    }\n  }, __jsx(Button, {\n    hidden: !createPer,\n    onClick: function onClick() {\n      return redirect(\"frontend.admin.patients.create\");\n    },\n    type: \"primary\",\n    className: \"btn-top\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }\n  }, __jsx(PlusCircleOutlined, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }\n  }), t('create')), __jsx(Button, {\n    danger: true,\n    onClick: function onClick() {\n      if (confirmRef.current) confirmRef.current.show();\n    },\n    className: \"btn-top\",\n    hidden: hiddenDeleteBtn || !deletePer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }\n  }, __jsx(DeleteOutlined, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }\n  }), t('delete')), __jsx(GridTable, {\n    ref: tableRef,\n    columns: columns,\n    data: patients,\n    rowSelection: {\n      selectedRowKeys: selectedIds,\n      onChange: function onChange(data) {\n        return onChangeSelection(data);\n      }\n    },\n    fetchData: fetchData,\n    total: total,\n    scroll: {\n      x: 1400\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }\n  }), renderDeleteDialog()));\n};\n\n_s2(Index, \"5QDfb0TJ9H9GSm6KcG8BUe5iqGg=\", false, function () {\n  return [useBaseHook, usePermissionHook];\n});\n\n_c = Index;\n\nIndex.getInitialProps = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(ctx) {\n    var patientService, defaultOptions, query, filters, _yield$to5, _yield$to6, error, patients;\n\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            patientService = new PatientService(ctx);\n            defaultOptions = {\n              filters: [],\n              sorting: []\n            };\n            query = ctx.query;\n            filters = GridTableHelper.getOptions(query, defaultOptions);\n            _context3.next = 6;\n            return to(patientService.index(filters));\n\n          case 6:\n            _yield$to5 = _context3.sent;\n            _yield$to6 = _slicedToArray(_yield$to5, 2);\n            error = _yield$to6[0];\n            patients = _yield$to6[1];\n            return _context3.abrupt(\"return\", {\n              namespacesRequired: ['common', 'pages', 'menu', 'errors'],\n              error: error,\n              patients: useBaseHook.getData(patients, \"data\", []),\n              total: useBaseHook.getData(patients, \"total\", 0),\n              defaultQuery: {\n                filters: GridTableHelper.makeQuery(filters)\n              }\n            });\n\n          case 11:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function (_x2) {\n    return _ref4.apply(this, arguments);\n  };\n}();\n\nIndex.permissions = {\n  \"admin.patients\": \"R\"\n};\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["E:/DATN/nursinghome/pages/admin/patients/index.tsx"],"names":["Layout","GridTable","GridTableHelper","ConfirmDialog","Button","PatientService","to","React","useState","useBaseHook","usePermissionHook","PlusCircleOutlined","DeleteOutlined","formaterGender","value","t","Math","round","Number","formaterDate","String","substr","Index","patients","total","notify","redirect","setStore","getAuth","getStore","hiddenDeleteBtn","setHiddenDeleteBtn","selectedIds","setSelectedIds","patientService","confirmRef","createRef","tableRef","checkPermission","createPer","deletePer","columns","title","dataIndex","key","sorter","filterable","fixed","render","text","record","id","fullname","roomCode","bedCode","filterDate","filterCheck","width","onChangeSelection","data","length","fetchData","values","index","error","code","message","onDelete","ids","result","current","reload","renderDeleteDialog","show","selectedRowKeys","onChange","x","getInitialProps","ctx","defaultOptions","filters","sorting","query","getOptions","namespacesRequired","getData","defaultQuery","makeQuery","permissions"],"mappings":"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","sourcesContent":["import Layout from 'themes/layouts/Admin'\r\nimport { GridTable, GridTableHelper, FilterInput } from 'themes/components/Table';\r\nimport ConfirmDialog from 'themes/components/Dialogs/ConfirmDialog';\r\nimport { Button } from 'antd';\r\nimport PatientService from 'themes/services/api/PatientService';\r\nimport _ from 'lodash'\r\nimport to from 'await-to-js'\r\nimport React, { useState } from 'react';\r\nimport useBaseHook from 'themes/hooks/BaseHooks'\r\nimport usePermissionHook from \"themes/hooks/PermissionHook\";\r\nimport {PlusCircleOutlined, DeleteOutlined} from '@ant-design/icons';\r\n\r\nconst formaterGender = (value: any) => {\r\n  const { t } = useBaseHook();\r\n  value = Math.round(Number(value))\r\n  value = (value == 0 ? t('male') : t('female'))\r\n  return `${value}`\r\n}\r\n\r\nconst formaterDate = (value: any) => {\r\n  value = value? String(value) : \"\"\r\n  value = value.substr(0,10)\r\n  return `${value}`\r\n}\r\n\r\nconst Index = ({ patients, total }: { patients: Patient[], total: number }) => {\r\n  const { t, notify, redirect, setStore, getAuth, getStore } = useBaseHook();\r\n  const [hiddenDeleteBtn, setHiddenDeleteBtn] = useState(true)\r\n  const [selectedIds, setSelectedIds] = useState([])\r\n  const patientService = new PatientService()\r\n  const confirmRef = React.createRef<ConfirmDialog>()\r\n  const tableRef = React.createRef<GridTable>()\r\n  const { checkPermission } = usePermissionHook();\r\n  const createPer = checkPermission({\r\n    \"admin.patients\": \"C\"\r\n  })\r\n  const deletePer = checkPermission({\r\n    \"admin.patients\": \"D\"\r\n  })\r\n  const columns = [\r\n    {\r\n      title: t(\"fullname\"),\r\n      dataIndex: 'fullname',\r\n      key: 'fullname',\r\n      sorter:true,\r\n      filterable: true,\r\n      fixed: 'left',\r\n      render: (text: string, record: any) =>\r\n        <a onClick={() => redirect('frontend.admin.patients.edit', { id: record.id })}>{record.fullname}</a>\r\n    },\r\n    {\r\n      title: t('room'),\r\n      dataIndex: 'roomCode',\r\n      sorter:true,\r\n      filterable: true,\r\n      key: 'beds.roomCode',\r\n      fixed:'left',\r\n      render: (text: string, record: any) => <div>{record.roomCode} - {record.bedCode}</div>\r\n    },\r\n    {\r\n      title: t('birthday'),\r\n      dataIndex: 'birthday',\r\n      key: 'birthday',\r\n      filterDate: true,\r\n      render: (text: string, record: any) => <div>{formaterDate(text)}</div>\r\n    },\r\n    {\r\n      title: t(\"gender\"),\r\n      dataIndex: 'gender',\r\n      key: 'gender',\r\n      filterCheck: true,\r\n      text: {0:t('male'), 1:t('female')},\r\n      width: '7%',\r\n      render: (text: string, record: any) => <div>{formaterGender(text)}</div>\r\n    },\r\n    {\r\n      title: t(\"address\"),\r\n      dataIndex: 'address',\r\n      key: 'address',\r\n      filterable: true,\r\n    },\r\n    {\r\n      title: t(\"cardId\"),\r\n      dataIndex: 'cardId',\r\n      key: 'cardId',\r\n      filterable: true,\r\n    },\r\n    {\r\n      title: t(\"phone\"),\r\n      dataIndex: 'phone',\r\n      key: 'phone',\r\n      filterable: true,\r\n    },\r\n    {\r\n      title: t(\"patients.medicalHistory\"),\r\n      dataIndex: 'medicalHistory',\r\n      key: 'medicalHistory',\r\n      filterable: true,\r\n    },\r\n    {\r\n      title: t(\"patients.dateIn\"),\r\n      dataIndex: 'dateIn',\r\n      sorter:true,\r\n      filterable: true,\r\n      key: 'dateIn',\r\n      render: (text: string, record: any) => <div>{formaterDate(text)}</div>\r\n    },\r\n    {\r\n      title: t(\"patients.dateOut\"),\r\n      dataIndex: 'dateOut',\r\n      sorter:true,\r\n      filterable: true,\r\n      key: 'dateOut',\r\n      render: (text: string, record: any) => <div>{formaterDate(text)}</div>\r\n    },\r\n  ]\r\n\r\n  const onChangeSelection = (data: any) => {\r\n    if (data.length > 0) {\r\n      setHiddenDeleteBtn(false)\r\n    }\r\n    else {\r\n      setHiddenDeleteBtn(true)\r\n    }\r\n    setSelectedIds(data)\r\n  }\r\n\r\n  const fetchData = async (values: any) => {\r\n    let [error, patients]: any[] = await to(patientService.index(values))\r\n    if (error) {\r\n      const { code, message } = error\r\n      notify(t(`errors:${code}`), t(message), 'error')\r\n      return {}\r\n    }\r\n    return patients\r\n  }\r\n\r\n  const onDelete = async () => {\r\n    let [error, result]: any[] = await to(patientService.delete({ ids: selectedIds }));\r\n    if (error) {\r\n      return notify(t(`errors:${error.code}`), t(`${error.message}`), 'error')\r\n    }\r\n    notify(t(\"message.recordDeleted\"));\r\n    if (tableRef.current !== null) {\r\n      tableRef.current.reload()\r\n    }\r\n    setSelectedIds([])\r\n    setHiddenDeleteBtn(true)\r\n  }\r\n\r\n  const renderDeleteDialog = () => {\r\n    return (\r\n      <ConfirmDialog\r\n        ref={confirmRef}\r\n        onSubmit={onDelete}\r\n        title={t('deleteItem')}\r\n        content={t('message.deleteConfirm')}\r\n      />\r\n    )\r\n  }\r\n\r\n  return <Layout>\r\n    <div className=\"content\">\r\n      <Button hidden={!createPer} onClick={() => redirect(\"frontend.admin.patients.create\")} type=\"primary\" className='btn-top'>\r\n        <PlusCircleOutlined />\r\n        {t('create')}\r\n      </Button>\r\n\r\n      <Button danger onClick={() => { if (confirmRef.current) confirmRef.current.show() }} className='btn-top' hidden={hiddenDeleteBtn || !deletePer}>\r\n        <DeleteOutlined />\r\n        {t('delete')}\r\n      </Button>\r\n      \r\n      <GridTable\r\n        ref={tableRef}\r\n        columns={columns}\r\n        data={patients}\r\n        rowSelection={{selectedRowKeys: selectedIds, onChange: (data: any[]) => onChangeSelection(data) }}\r\n        fetchData={fetchData}\r\n        total={total}\r\n        scroll={{ x:1400 }}\r\n      />\r\n      {renderDeleteDialog()}\r\n    </div>\r\n  </Layout>\r\n}\r\n\r\nIndex.getInitialProps = async (ctx: any) => {\r\n  let patientService = new PatientService(ctx)\r\n  let defaultOptions = {\r\n    filters: [],\r\n    sorting: []\r\n  }\r\n  let query = ctx.query\r\n  let filters = GridTableHelper.getOptions(query, defaultOptions);\r\n  let [error, patients]: any[] = await to(patientService.index(filters))\r\n  return {\r\n    namespacesRequired: ['common', 'pages', 'menu', 'errors'],\r\n    error: error,\r\n    patients: useBaseHook.getData(patients, \"data\", []),\r\n    total: useBaseHook.getData(patients, \"total\", 0),\r\n    defaultQuery: {\r\n      filters: GridTableHelper.makeQuery(filters)\r\n    }\r\n  }\r\n}\r\nIndex.permissions = {\r\n  \"admin.patients\": \"R\"\r\n};\r\nexport default Index"]},"metadata":{},"sourceType":"module"}