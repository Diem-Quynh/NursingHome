{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport ConfirmDialog from 'themes/components/Dialogs/ConfirmDialog';\nimport React, { useState } from 'react';\nimport Layout from 'themes/layouts/Admin';\nimport { Button, Form, Input, Select, Modal, Radio, DatePicker } from 'antd';\nimport UserService from 'themes/services/api/UserService';\nimport UserGroupService from 'themes/services/api/UserGroupService';\nimport _ from 'lodash';\nimport to from 'await-to-js';\nimport useBaseHook from 'themes/hooks/BaseHooks';\nimport { DeleteFilled, SaveFilled, LeftCircleFilled, CopyFilled } from '@ant-design/icons';\nimport usePermissionHook from \"themes/hooks/PermissionHook\";\nimport moment from 'moment';\nconst {\n  Option\n} = Select;\nconst formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 4\n    }\n  },\n  wrapperCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 18\n    }\n  }\n};\n\nconst Edit = ({\n  groups,\n  user,\n  userError\n}) => {\n  const {\n    t,\n    notify,\n    redirect,\n    setStore,\n    getAuth,\n    getStore\n  } = useBaseHook();\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: modalVisible,\n    1: setModalVisible\n  } = useState(false);\n  const [form] = Form.useForm();\n  const userService = new UserService();\n  const confirmRef = React.createRef();\n  const {\n    checkPermission\n  } = usePermissionHook();\n  const deletePer = checkPermission({\n    \"admin.users\": \"D\"\n  });\n\n  const DisplayError = err => {\n    return notify(t(`errors:${err.code}`), t(err.message), 'error');\n  }; //submit form\n\n\n  const onFinish = async values => {\n    if (userError) {\n      return DisplayError(userError);\n    }\n\n    setLoading(true);\n\n    let {\n      rePassword\n    } = values,\n        otherValues = _objectWithoutProperties(values, [\"rePassword\"]);\n\n    let [error, result] = await to(userService.edit(_objectSpread({\n      id: user.id\n    }, otherValues)));\n    setLoading(false);\n\n    if (error) {\n      return DisplayError(error);\n    }\n\n    notify(t(\"message.recordUpdated\"));\n    redirect(\"frontend.admin.users.index\");\n  };\n\n  const onDelete = async () => {\n    if (userError) {\n      return DisplayError(userError);\n    }\n\n    let [error, result] = await to(userService.delete({\n      ids: [user.id]\n    }));\n\n    if (error) {\n      return DisplayError(error);\n    }\n\n    notify(t('message.recordDeleted'));\n    redirect(\"frontend.admin.users.index\");\n  };\n\n  const onChangePassword = async data => {\n    setModalVisible(false);\n\n    if (userError) {\n      return DisplayError(userError);\n    }\n\n    let values = {\n      id: user.id,\n      password: data.password\n    };\n    let [error, result] = await to(userService.updatePassword(values));\n\n    if (error) {\n      return DisplayError(error);\n    }\n\n    notify(t(\"message.recordUpdated\"));\n  }; //validate input password\n\n\n  const validatorPassword = ({\n    getFieldValue\n  }) => ({\n    validator: (rule, value) => {\n      if (!value || getFieldValue('password') === value) {\n        return Promise.resolve();\n      }\n\n      return Promise.reject(t('form.rePassword'));\n    }\n  }); //render option\n\n\n  const renderOption = () => {\n    let result = [];\n    groups.map(item => {\n      result.push(__jsx(Option, {\n        value: item.id,\n        key: item.id\n      }, item.name));\n    });\n    return result;\n  };\n\n  const renderDeleteDialog = () => {\n    return __jsx(ConfirmDialog, {\n      ref: confirmRef,\n      onSubmit: onDelete,\n      title: t('deleteItem'),\n      content: t('message.deleteConfirm')\n    });\n  };\n\n  const renderChangePassModal = () => {\n    const [formChangePassword2] = Form.useForm();\n    return __jsx(Form, {\n      form: formChangePassword2,\n      name: \"formChangePassword2\",\n      initialValues: {\n        password: \"\",\n        repassword: \"\"\n      },\n      onFinish: onChangePassword\n    }, __jsx(Modal, {\n      closable: false,\n      visible: modalVisible,\n      onCancel: () => setModalVisible(false),\n      onOk: () => {\n        formChangePassword2.submit();\n      }\n    }, __jsx(Form.Item, {\n      label: t(\"password\"),\n      labelCol: {\n        span: 7\n      },\n      wrapperCol: {\n        span: 17\n      },\n      name: \"password\",\n      rules: [{\n        required: true,\n        message: t('form.required')\n      }]\n    }, __jsx(Input.Password, {\n      placeholder: t(\"password\"),\n      type: \"password\",\n      autoFocus: true\n    })), __jsx(Form.Item, {\n      label: t(\"rePassword\"),\n      labelCol: {\n        span: 7\n      },\n      wrapperCol: {\n        span: 17\n      },\n      name: \"repassword\",\n      rules: [{\n        required: true,\n        message: t('form.required')\n      }, validatorPassword]\n    }, __jsx(Input.Password, {\n      placeholder: t(\"rePassword\")\n    }))));\n  };\n\n  return __jsx(Layout, {\n    disabledSearch: true\n  }, __jsx(\"div\", {\n    className: \"content\"\n  }, __jsx(Form, _extends({}, formItemLayout, {\n    form: form,\n    name: \"createUser\",\n    initialValues: {\n      code: user.code,\n      fullname: user.fullname,\n      position: user.position,\n      birthday: user.birthday ? moment(user.birthday).subtract(7, 'h') : \"\",\n      gender: user.gender,\n      address: user.address,\n      cardId: user.cardId,\n      email: user.email,\n      phone: user.phone,\n      username: user.username,\n      groupId: user.groupId\n    },\n    onFinish: onFinish,\n    scrollToFirstError: true\n  }), __jsx(Form.Item, {\n    label: t(\"code\"),\n    name: \"code\",\n    rules: [{\n      required: true,\n      message: t('form.required'),\n      whitespace: false\n    }, {\n      max: 8,\n      message: t('form.maxLength', {\n        length: 8\n      })\n    }]\n  }, __jsx(Input, null)), __jsx(Form.Item, {\n    label: t(\"fullname\"),\n    name: \"fullname\",\n    rules: [{\n      required: true,\n      message: t('form.required')\n    }]\n  }, __jsx(Input, null)), __jsx(Form.Item, {\n    label: t(\"position\"),\n    name: \"position\",\n    rules: [{\n      required: true,\n      message: t('form.required')\n    }]\n  }, __jsx(Input, null)), __jsx(Form.Item, {\n    label: t(\"userGroup\"),\n    name: \"groupId\" // rules={[\n    //   { required: true, message: t('form.required') },\n    // ]}\n\n  }, __jsx(Select, {\n    showSearch: true,\n    placeholder: t('placeholder.group'),\n    filterOption: (input, option) => {\n      return option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n    }\n  }, renderOption())), __jsx(Form.Item, {\n    label: t(\"username\"),\n    name: \"username\" // rules={[\n    //   { required: true, message: t('form.required'), whitespace: true },\n    //   { max: 15, message: t('form.maxLength', { length: 15 }) }\n    // ]}\n\n  }, __jsx(Input, null)), __jsx(Form.Item, {\n    label: t(\"birthday\"),\n    name: \"birthday\"\n  }, __jsx(DatePicker, {\n    format: 'YYYY-MM-DD',\n    placeholder: t('placeholder.date'),\n    showTime: false\n  })), __jsx(Form.Item, {\n    label: t(\"gender\"),\n    name: \"gender\"\n  }, __jsx(Radio.Group, null, __jsx(Radio, {\n    value: 0,\n    key: 0\n  }, t(\"male\")), __jsx(Radio, {\n    value: 1,\n    key: 1\n  }, t(\"female\")))), __jsx(Form.Item, {\n    label: t(\"address\"),\n    name: \"address\"\n  }, __jsx(Input, null)), __jsx(Form.Item, {\n    label: t(\"cardId\"),\n    name: \"cardId\",\n    rules: [{\n      pattern: /^[0-9]+$/g,\n      message: t('form.number')\n    }, {\n      max: 12,\n      message: t('form.maxLength', {\n        length: 12\n      })\n    }]\n  }, __jsx(Input, null)), __jsx(Form.Item, {\n    label: t(\"email\"),\n    name: \"email\",\n    rules: [{\n      type: 'email',\n      message: t('form.email')\n    }]\n  }, __jsx(Input, null)), __jsx(Form.Item, {\n    label: t(\"phone\"),\n    name: \"phone\",\n    rules: [{\n      pattern: /^[0-9]+$/g,\n      message: t('form.number')\n    }, {\n      max: 12,\n      message: t('form.maxLength', {\n        length: 12\n      })\n    }]\n  }, __jsx(Input, null)), __jsx(Form.Item, {\n    wrapperCol: {\n      span: 24\n    },\n    style: {\n      textAlign: \"center\"\n    }\n  }, __jsx(Button, {\n    onClick: () => redirect(\"frontend.admin.users.index\"),\n    style: {\n      marginRight: 8\n    }\n  }, __jsx(LeftCircleFilled, null), \" \", t('cancel')), __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: loading,\n    style: {\n      marginRight: 8\n    }\n  }, __jsx(SaveFilled, null), \" \", t('submit')), __jsx(Button, {\n    onClick: () => {\n      setModalVisible(true);\n    },\n    style: {\n      marginRight: 8\n    }\n  }, __jsx(CopyFilled, null), \" \", t('changePassword')), __jsx(Button, {\n    hidden: !deletePer,\n    danger: true,\n    onClick: () => {\n      if (confirmRef.current) confirmRef.current.show(user.id);\n    }\n  }, __jsx(DeleteFilled, null), \" \", t('deleteItem')))), renderDeleteDialog(), renderChangePassModal()));\n};\n\nEdit.getInitialProps = async ctx => {\n  const userGroupService = new UserGroupService(ctx);\n  const userService = new UserService(ctx);\n  const query = ctx.query;\n  let error;\n\n  if (!query.id) {\n    //error missing id\n    error = {\n      code: 9996,\n      message: 'missing ID'\n    };\n  }\n\n  let [userError, user] = await to(userService.detail({\n    id: query.id\n  }));\n  if (userError) user = {};\n  const [errorGroup, groups] = await to(userGroupService.index({\n    pageSize: -1\n  }));\n  return {\n    namespacesRequired: ['common', 'pages', 'menu', 'errors'],\n    error: error,\n    user: user,\n    userError: userError,\n    groups: _.get(groups, \"data\", [])\n  };\n};\n\nEdit.permissions = {\n  \"admin.users\": \"U\"\n};\nexport default Edit;","map":{"version":3,"sources":["E:/DATN/nursinghome/pages/admin/users/edit.tsx"],"names":["ConfirmDialog","React","useState","Layout","Button","Form","Input","Select","Modal","Radio","DatePicker","UserService","UserGroupService","_","to","useBaseHook","DeleteFilled","SaveFilled","LeftCircleFilled","CopyFilled","usePermissionHook","moment","Option","formItemLayout","labelCol","xs","span","sm","wrapperCol","Edit","groups","user","userError","t","notify","redirect","setStore","getAuth","getStore","loading","setLoading","modalVisible","setModalVisible","form","useForm","userService","confirmRef","createRef","checkPermission","deletePer","DisplayError","err","code","message","onFinish","values","rePassword","otherValues","error","result","edit","id","onDelete","delete","ids","onChangePassword","data","password","updatePassword","validatorPassword","getFieldValue","validator","rule","value","Promise","resolve","reject","renderOption","map","item","push","name","renderDeleteDialog","renderChangePassModal","formChangePassword2","repassword","submit","required","fullname","position","birthday","subtract","gender","address","cardId","email","phone","username","groupId","whitespace","max","length","input","option","children","toLowerCase","indexOf","pattern","type","textAlign","marginRight","current","show","getInitialProps","ctx","userGroupService","query","detail","errorGroup","index","pageSize","namespacesRequired","get","permissions"],"mappings":"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","sourcesContent":["import ConfirmDialog from 'themes/components/Dialogs/ConfirmDialog';\r\n\r\nimport React, { useState } from 'react'\r\nimport Layout from 'themes/layouts/Admin'\r\nimport { Button, Row, Col, Form, Input, Select, Modal, Radio, DatePicker } from 'antd';\r\nimport UserService from 'themes/services/api/UserService';\r\nimport UserGroupService from 'themes/services/api/UserGroupService';\r\nimport _ from 'lodash';\r\nimport to from 'await-to-js'\r\nimport useBaseHook from 'themes/hooks/BaseHooks'\r\nimport { DeleteFilled, SaveFilled, LeftCircleFilled, CopyFilled } from '@ant-design/icons';\r\nimport usePermissionHook from \"themes/hooks/PermissionHook\";\r\nimport moment from 'moment'\r\n\r\nconst { Option } = Select\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 4 },\r\n  },\r\n  wrapperCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 18 },\r\n  },\r\n};\r\n\r\nconst Edit = ({ groups, user, userError }: { groups: UserGroup[], user: User, userError:any }) => {\r\n  const { t, notify, redirect, setStore, getAuth, getStore } = useBaseHook();\r\n  const [loading, setLoading] = useState(false);\r\n  const [modalVisible, setModalVisible] = useState(false)\r\n  const [form] = Form.useForm();\r\n  const userService = new UserService()\r\n  const confirmRef = React.createRef<ConfirmDialog>()\r\n\r\n  const { checkPermission } = usePermissionHook();\r\n  const deletePer = checkPermission({\r\n    \"admin.users\": \"D\"\r\n  })\r\n  const DisplayError = (err: any) => {\r\n    return notify(t(`errors:${err.code}`), t(err.message), 'error')\r\n  }\r\n\r\n  //submit form\r\n  const onFinish = async (values: any): Promise<void> => {\r\n    if(userError) { return DisplayError(userError) }\r\n    setLoading(true)\r\n    let { rePassword, ...otherValues } = values;\r\n    let [error, result]: any[] = await to(userService.edit({\r\n      id: user.id,\r\n      ...otherValues\r\n    }));\r\n    setLoading(false)\r\n\r\n    if (error) { return DisplayError(error) }\r\n    notify(t(\"message.recordUpdated\"))\r\n    redirect(\"frontend.admin.users.index\")\r\n  }\r\n\r\n  const onDelete = async (): Promise<void> => {\r\n    if(userError) { return DisplayError(userError) }\r\n    let [error, result]: any[] = await to(userService.delete({ ids: [user.id] }));\r\n\r\n    if (error) { return DisplayError(error) }\r\n    notify(t('message.recordDeleted'))\r\n    redirect(\"frontend.admin.users.index\")\r\n  }\r\n  \r\n  const onChangePassword = async (data: any): Promise<void> => {\r\n    setModalVisible(false)\r\n    if(userError) { return DisplayError(userError) }\r\n    let values = { id: user.id, password: data.password }\r\n\r\n    let [error, result]: any[] = await to(userService.updatePassword(values));\r\n    if (error) { return DisplayError(error) }\r\n\r\n    notify(t(\"message.recordUpdated\"))\r\n  }\r\n\r\n  //validate input password\r\n  const validatorPassword = ({ getFieldValue }: { getFieldValue: Function }) => ({\r\n    validator: (rule: any, value: any) => {\r\n      if (!value || getFieldValue('password') === value) {\r\n        return Promise.resolve();\r\n      }\r\n      return Promise.reject(t('form.rePassword'));\r\n    }\r\n  })\r\n\r\n  //render option\r\n  const renderOption = (): JSX.Element[] => {\r\n    let result: JSX.Element[] = [];\r\n    groups.map(item => {\r\n      result.push(\r\n        <Option value={item.id} key={item.id}>{item.name}</Option>\r\n      )\r\n    })\r\n    return result;\r\n  }\r\n  const renderDeleteDialog = () => {\r\n    return (\r\n      <ConfirmDialog\r\n        ref={confirmRef}\r\n        onSubmit={onDelete}\r\n        title={t('deleteItem')}\r\n        content={t('message.deleteConfirm')}\r\n      />\r\n    )\r\n  }\r\n\r\n  const renderChangePassModal = () => {\r\n    const [formChangePassword2] = Form.useForm()\r\n    return (<Form form={formChangePassword2} name=\"formChangePassword2\"\r\n      initialValues={{\r\n        password: \"\",\r\n        repassword: \"\",\r\n      }}\r\n      onFinish={onChangePassword}\r\n    >\r\n      <Modal\r\n        closable={false}\r\n        visible={modalVisible}\r\n        onCancel={() => setModalVisible(false)}\r\n        onOk={() => { formChangePassword2.submit(); }}\r\n      >\r\n        <Form.Item\r\n          label={t(\"password\")}\r\n          labelCol={{ span: 7 }}\r\n          wrapperCol={{ span: 17 }}\r\n          name=\"password\"\r\n          rules={[\r\n            { required: true, message: t('form.required') }\r\n          ]}\r\n        >\r\n          <Input.Password\r\n            placeholder={t(\"password\")}\r\n            type=\"password\"\r\n            autoFocus={true}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label={t(\"rePassword\")}\r\n          labelCol={{ span: 7 }}\r\n          wrapperCol={{ span: 17 }}\r\n          name=\"repassword\"\r\n          rules={[\r\n            { required: true, message: t('form.required') },\r\n            validatorPassword\r\n          ]}\r\n        >\r\n          <Input.Password\r\n            placeholder={t(\"rePassword\")}\r\n          />\r\n        </Form.Item>\r\n      </Modal>\r\n    </Form>\r\n    )\r\n  }\r\n\r\n  return <Layout disabledSearch = {true} >\r\n    <div className=\"content\">\r\n      <Form\r\n        {...formItemLayout}\r\n        form={form}\r\n        name=\"createUser\"\r\n        initialValues={{\r\n          code: user.code,\r\n          fullname: user.fullname,\r\n          position: user.position,\r\n          birthday: user.birthday ? moment(user.birthday).subtract(7,'h') : \"\",\r\n          gender: user.gender,\r\n          address: user.address,\r\n          cardId: user.cardId,\r\n          email: user.email,\r\n          phone: user.phone,\r\n          username: user.username,\r\n          groupId: user.groupId\r\n        }}\r\n        onFinish={onFinish}\r\n        scrollToFirstError\r\n      >\r\n        <Form.Item\r\n          label={t(\"code\")}\r\n          name=\"code\"\r\n          rules={[\r\n            { required: true, message: t('form.required'), whitespace: false },\r\n            { max: 8, message: t('form.maxLength', { length: 8 }) }\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={t(\"fullname\")}\r\n          name=\"fullname\"\r\n          rules={[\r\n            { required: true, message: t('form.required') },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        \r\n        <Form.Item\r\n          label={t(\"position\")}\r\n          name=\"position\"\r\n          rules={[\r\n            { required: true, message: t('form.required') },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={t(\"userGroup\")}\r\n          name=\"groupId\"\r\n          // rules={[\r\n          //   { required: true, message: t('form.required') },\r\n          // ]}\r\n        >\r\n          <Select \r\n            showSearch\r\n            placeholder = {t('placeholder.group')}\r\n            filterOption={ (input: any, option: any) => {\r\n              return option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n            } }\r\n          >\r\n            {renderOption()}\r\n          </Select>\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={t(\"username\")}\r\n          name=\"username\"\r\n          // rules={[\r\n          //   { required: true, message: t('form.required'), whitespace: true },\r\n          //   { max: 15, message: t('form.maxLength', { length: 15 }) }\r\n          // ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={t(\"birthday\")}\r\n          name=\"birthday\"\r\n        >\r\n          <DatePicker format={'YYYY-MM-DD'} placeholder={t('placeholder.date')} showTime={false}/>\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={t(\"gender\")}\r\n          name=\"gender\"\r\n        >\r\n          <Radio.Group>\r\n            <Radio value={0} key={0}>{t(\"male\")}</Radio>\r\n            <Radio value={1} key={1}>{t(\"female\")}</Radio>\r\n          </Radio.Group>\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={t(\"address\")}\r\n          name=\"address\"\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={t(\"cardId\")}\r\n          name=\"cardId\"\r\n          rules={[\r\n            { pattern: /^[0-9]+$/g, message: t('form.number') },\r\n            { max: 12, message: t('form.maxLength', { length: 12 }) }\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={t(\"email\")}\r\n          name=\"email\"\r\n          rules={[\r\n            { type: 'email', message: t('form.email') }\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={t(\"phone\")}\r\n          name=\"phone\"\r\n          rules={[\r\n            { pattern: /^[0-9]+$/g, message: t('form.number') },\r\n            { max: 12, message: t('form.maxLength', { length: 12 }) }\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item wrapperCol={{ span: 24 }} style={{ textAlign: \"center\" }}>\r\n          <Button onClick={() => redirect(\"frontend.admin.users.index\")} style={{ marginRight: 8 }}>\r\n            <LeftCircleFilled /> {t('cancel')}\r\n          </Button>\r\n\r\n          <Button type=\"primary\" htmlType=\"submit\" loading={loading} style={{ marginRight: 8 }}>\r\n            <SaveFilled /> {t('submit')}\r\n          </Button>\r\n          <Button onClick={() => { setModalVisible(true) }} style={{ marginRight: 8 }}>\r\n            <CopyFilled /> {t('changePassword')}\r\n          </Button>\r\n          \r\n          <Button hidden={!deletePer} danger onClick={() => { if (confirmRef.current) confirmRef.current.show(user.id) }}>\r\n            <DeleteFilled /> {t('deleteItem')}\r\n          </Button>\r\n         \r\n        </Form.Item>\r\n      </Form>\r\n      {renderDeleteDialog()}\r\n      {renderChangePassModal()}\r\n    </div>\r\n  </Layout>\r\n}\r\n\r\nEdit.getInitialProps = async (ctx: any) => {\r\n  const userGroupService = new UserGroupService(ctx)\r\n  const userService = new UserService(ctx)\r\n  const query = ctx.query;\r\n  let error: any;\r\n\r\n  if (!query.id) {\r\n    //error missing id\r\n    error = {\r\n      code: 9996,\r\n      message: 'missing ID'\r\n    }\r\n  }\r\n\r\n  let [userError, user] = await to(userService.detail({ id: query.id }));\r\n  if (userError) user = {}\r\n  const [errorGroup, groups] = await to(userGroupService.index({ pageSize: -1 }));\r\n  return {\r\n    namespacesRequired: ['common', 'pages', 'menu','errors'],\r\n    error: error,\r\n    user: user,\r\n    userError: userError,\r\n    groups: _.get(groups, \"data\", []),\r\n  }\r\n}\r\nEdit.permissions = {\r\n  \"admin.users\": \"U\"\r\n};\r\nexport default Edit"]},"metadata":{},"sourceType":"module"}