{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport ConfirmDialog from 'themes/components/Dialogs/ConfirmDialog';\nimport React, { useState } from 'react';\nimport Layout from 'themes/layouts/Admin';\nimport { Button, Form, Input, Select, Radio, DatePicker } from 'antd';\nimport PatientService from 'themes/services/api/PatientService';\nimport BedService from 'themes/services/api/BedService';\nimport _ from 'lodash';\nimport to from 'await-to-js';\nimport useBaseHook from 'themes/hooks/BaseHooks';\nimport { DeleteFilled, SaveFilled, LeftCircleFilled } from '@ant-design/icons';\nimport usePermissionHook from \"themes/hooks/PermissionHook\";\nimport moment from 'moment';\nvar Option = Select.Option;\nvar formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 4\n    }\n  },\n  wrapperCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 18\n    }\n  }\n};\n\nvar Edit = function Edit(_ref) {\n  _s();\n\n  var beds = _ref.beds,\n      patient = _ref.patient,\n      patientError = _ref.patientError;\n\n  var _useBaseHook = useBaseHook(),\n      t = _useBaseHook.t,\n      notify = _useBaseHook.notify,\n      redirect = _useBaseHook.redirect,\n      setStore = _useBaseHook.setStore,\n      getAuth = _useBaseHook.getAuth,\n      getStore = _useBaseHook.getStore;\n\n  var _useState = useState(false),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  var _Form$useForm = Form.useForm(),\n      _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n      form = _Form$useForm2[0];\n\n  var patientService = new PatientService();\n  var confirmRef = React.createRef();\n\n  var _usePermissionHook = usePermissionHook(),\n      checkPermission = _usePermissionHook.checkPermission;\n\n  var deletePer = checkPermission({\n    \"admin.patients\": \"D\"\n  });\n\n  var DisplayError = function DisplayError(err) {\n    return notify(t(\"errors:\".concat(err.code)), t(err.message), 'error');\n  }; //submit form\n\n\n  var onFinish = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values) {\n      var _yield$to, _yield$to2, error, result;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!patientError) {\n                _context.next = 2;\n                break;\n              }\n\n              return _context.abrupt(\"return\", DisplayError(patientError));\n\n            case 2:\n              setLoading(true);\n              _context.next = 5;\n              return to(patientService.edit({\n                id: patient.id,\n                values: values\n              }));\n\n            case 5:\n              _yield$to = _context.sent;\n              _yield$to2 = _slicedToArray(_yield$to, 2);\n              error = _yield$to2[0];\n              result = _yield$to2[1];\n              setLoading(false);\n\n              if (!error) {\n                _context.next = 12;\n                break;\n              }\n\n              return _context.abrupt(\"return\", DisplayError(error));\n\n            case 12:\n              notify(t(\"message.recordUpdated\"));\n              redirect(\"frontend.admin.patients.index\");\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onFinish(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var onDelete = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var _yield$to3, _yield$to4, error, result;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!patientError) {\n                _context2.next = 2;\n                break;\n              }\n\n              return _context2.abrupt(\"return\", DisplayError(patientError));\n\n            case 2:\n              _context2.next = 4;\n              return to(patientService[\"delete\"]({\n                ids: [patient.id]\n              }));\n\n            case 4:\n              _yield$to3 = _context2.sent;\n              _yield$to4 = _slicedToArray(_yield$to3, 2);\n              error = _yield$to4[0];\n              result = _yield$to4[1];\n\n              if (!error) {\n                _context2.next = 10;\n                break;\n              }\n\n              return _context2.abrupt(\"return\", DisplayError(error));\n\n            case 10:\n              notify(t('message.recordDeleted'));\n              redirect(\"frontend.admin.patients.index\");\n\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function onDelete() {\n      return _ref3.apply(this, arguments);\n    };\n  }(); //render option\n\n\n  var renderOption = function renderOption() {\n    var result = [];\n    beds.map(function (item) {\n      result.push(__jsx(Option, {\n        value: item.id,\n        key: item.id\n      }, item.roomCode, \" - \", item.bedId, \" - \", item.status ? t('beds.full') : t('beds.empty')));\n    });\n    return result;\n  };\n\n  var renderDeleteDialog = function renderDeleteDialog() {\n    return __jsx(ConfirmDialog, {\n      ref: confirmRef,\n      onSubmit: onDelete,\n      title: t('deleteItem'),\n      content: t('message.deleteConfirm')\n    });\n  };\n\n  return __jsx(Layout, null, __jsx(\"div\", {\n    className: \"content\"\n  }, __jsx(Form, _extends({}, formItemLayout, {\n    form: form,\n    name: \"createPatient\",\n    initialValues: {\n      code: patient.code,\n      fullname: patient.fullname,\n      birthday: patient.birthday ? moment(patient.birthday).subtract(7, 'h') : \"\",\n      gender: patient.gender,\n      address: patient.address,\n      cardId: patient.cardId,\n      phone: patient.phone,\n      medicalHistory: patient.medicalHistory,\n      dateIn: patient.dateIn ? moment(patient.dateIn).subtract(7, 'h') : \"\",\n      dateOut: patient.dateOut ? moment(patient.dateOut).subtract(7, 'h') : \"\",\n      bedId: patient.bedId\n    },\n    onFinish: onFinish,\n    scrollToFirstError: true\n  }), __jsx(Form.Item, {\n    label: t(\"code\"),\n    name: \"code\",\n    rules: [{\n      required: true,\n      message: t('form.required')\n    }]\n  }, __jsx(Input, null)), __jsx(Form.Item, {\n    label: t(\"fullname\"),\n    name: \"fullname\",\n    rules: [{\n      required: true,\n      message: t('form.required')\n    }]\n  }, __jsx(Input, null)), __jsx(Form.Item, {\n    label: t(\"birthday\"),\n    name: \"birthday\"\n  }, __jsx(DatePicker, {\n    format: 'YYYY-MM-DD',\n    showTime: false,\n    placeholder: t('placeholder.date')\n  })), __jsx(Form.Item, {\n    label: t(\"gender\"),\n    name: \"gender\"\n  }, __jsx(Radio.Group, null, __jsx(Radio, {\n    value: 0,\n    key: 0\n  }, t(\"male\")), __jsx(Radio, {\n    value: 1,\n    key: 1\n  }, t(\"female\")))), __jsx(Form.Item, {\n    label: t(\"address\"),\n    name: \"address\"\n  }, __jsx(Input, null)), __jsx(Form.Item, {\n    label: t(\"cardId\"),\n    name: \"cardId\",\n    rules: [{\n      pattern: /^[0-9]+$/g,\n      message: t('form.number')\n    }, {\n      max: 12,\n      message: t('form.maxLength', {\n        length: 12\n      })\n    }]\n  }, __jsx(Input, null)), __jsx(Form.Item, {\n    label: t(\"phone\"),\n    name: \"phone\",\n    rules: [{\n      pattern: /^[0-9]+$/g,\n      message: t('form.number')\n    }, {\n      max: 12,\n      message: t('form.maxLength', {\n        length: 12\n      })\n    }]\n  }, __jsx(Input, null)), __jsx(Form.Item, {\n    label: t(\"patients.medicalHistory\"),\n    name: \"medicalHistory\"\n  }, __jsx(Input, null)), __jsx(Form.Item, {\n    label: t(\"patients.dateIn\"),\n    name: \"dateIn\"\n  }, __jsx(DatePicker, {\n    format: 'YYYY-MM-DD',\n    showTime: false,\n    placeholder: t('placeholder.date')\n  })), __jsx(Form.Item, {\n    label: t(\"patients.dateOut\"),\n    name: \"dateOut\"\n  }, __jsx(DatePicker, {\n    format: 'YYYY-MM-DD',\n    showTime: false,\n    placeholder: t('placeholder.date')\n  })), __jsx(Form.Item, {\n    label: t(\"bed\"),\n    name: \"bedId\"\n  }, __jsx(Select, {\n    showSearch: true,\n    placeholder: t('placeholder.bed'),\n    filterOption: function filterOption(input, option) {\n      return option.children[0].toLowerCase().indexOf(input.toLowerCase()) >= 0;\n    }\n  }, renderOption())), __jsx(Form.Item, {\n    wrapperCol: {\n      span: 24\n    },\n    style: {\n      textAlign: \"center\"\n    }\n  }, __jsx(Button, {\n    onClick: function onClick() {\n      return redirect(\"frontend.admin.patients.index\");\n    },\n    style: {\n      marginRight: 8\n    }\n  }, __jsx(LeftCircleFilled, null), \" \", t('cancel')), __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: loading,\n    style: {\n      marginRight: 8\n    }\n  }, __jsx(SaveFilled, null), \" \", t('submit')), __jsx(Button, {\n    hidden: !deletePer,\n    danger: true,\n    onClick: function onClick() {\n      if (confirmRef.current) confirmRef.current.show(patient.id);\n    }\n  }, __jsx(DeleteFilled, null), \" \", t('deleteItem')))), renderDeleteDialog()));\n};\n\n_s(Edit, \"oiPFiu7LL36iJ95s6EItlchEklo=\", false, function () {\n  return [useBaseHook, Form.useForm, usePermissionHook];\n});\n\n_c = Edit;\n\nEdit.getInitialProps = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(ctx) {\n    var patientService, bedService, query, error, _yield$to5, _yield$to6, patientError, patient, _yield$to7, _yield$to8, errorBed, beds;\n\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            patientService = new PatientService(ctx);\n            bedService = new BedService(ctx);\n            query = ctx.query;\n\n            if (!query.id) {\n              //error missing id\n              error = {\n                code: 9996,\n                message: 'missing ID'\n              };\n            }\n\n            _context3.next = 6;\n            return to(patientService.detail({\n              id: query.id\n            }));\n\n          case 6:\n            _yield$to5 = _context3.sent;\n            _yield$to6 = _slicedToArray(_yield$to5, 2);\n            patientError = _yield$to6[0];\n            patient = _yield$to6[1];\n            if (patientError) patient = {};\n            _context3.next = 13;\n            return to(bedService.index({\n              pageSize: -1\n            }));\n\n          case 13:\n            _yield$to7 = _context3.sent;\n            _yield$to8 = _slicedToArray(_yield$to7, 2);\n            errorBed = _yield$to8[0];\n            beds = _yield$to8[1];\n            return _context3.abrupt(\"return\", {\n              namespacesRequired: ['common', 'pages', 'menu', 'errors'],\n              error: error,\n              patient: patient,\n              patientError: patientError,\n              beds: _.get(beds, \"data\", [])\n            });\n\n          case 18:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function (_x2) {\n    return _ref4.apply(this, arguments);\n  };\n}();\n\nEdit.permissions = {\n  \"admin.patients\": \"U\"\n};\nexport default Edit;\n\nvar _c;\n\n$RefreshReg$(_c, \"Edit\");","map":{"version":3,"sources":["E:/nursinghome_github/pages/admin/patients/edit.tsx"],"names":["ConfirmDialog","React","useState","Layout","Button","Form","Input","Select","Radio","DatePicker","PatientService","BedService","_","to","useBaseHook","DeleteFilled","SaveFilled","LeftCircleFilled","usePermissionHook","moment","Option","formItemLayout","labelCol","xs","span","sm","wrapperCol","Edit","beds","patient","patientError","t","notify","redirect","setStore","getAuth","getStore","loading","setLoading","useForm","form","patientService","confirmRef","createRef","checkPermission","deletePer","DisplayError","err","code","message","onFinish","values","edit","id","error","result","onDelete","ids","renderOption","map","item","push","roomCode","bedId","status","renderDeleteDialog","fullname","birthday","subtract","gender","address","cardId","phone","medicalHistory","dateIn","dateOut","required","pattern","max","length","input","option","children","toLowerCase","indexOf","textAlign","marginRight","current","show","getInitialProps","ctx","bedService","query","detail","index","pageSize","errorBed","namespacesRequired","get","permissions"],"mappings":";;;;;;;;AAAA,OAAOA,aAAP,MAA0B,yCAA1B;AAEA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,MAAT,EAA2BC,IAA3B,EAAiCC,KAAjC,EAAwCC,MAAxC,EAAoEC,KAApE,EAA2EC,UAA3E,QAA6F,MAA7F;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,OAAOC,UAAP,MAAuB,gCAAvB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,EAAP,MAAe,aAAf;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,SAASC,YAAT,EAAuBC,UAAvB,EAAmCC,gBAAnC,QAAuE,mBAAvE;AACA,OAAOC,iBAAP,MAA8B,6BAA9B;AACA,OAAOC,MAAP,MAAmB,QAAnB;IAEQC,M,GAAWb,M,CAAXa,M;AAER,IAAMC,cAAc,GAAG;AACrBC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,EAAE,EAAE;AAAEC,MAAAA,IAAI,EAAE;AAAR,KADI;AAERC,IAAAA,EAAE,EAAE;AAAED,MAAAA,IAAI,EAAE;AAAR;AAFI,GADW;AAKrBE,EAAAA,UAAU,EAAE;AACVH,IAAAA,EAAE,EAAE;AAAEC,MAAAA,IAAI,EAAE;AAAR,KADM;AAEVC,IAAAA,EAAE,EAAE;AAAED,MAAAA,IAAI,EAAE;AAAR;AAFM;AALS,CAAvB;;AAWA,IAAMG,IAAI,GAAG,SAAPA,IAAO,OAA2F;AAAA;;AAAA,MAAxFC,IAAwF,QAAxFA,IAAwF;AAAA,MAAlFC,OAAkF,QAAlFA,OAAkF;AAAA,MAAzEC,YAAyE,QAAzEA,YAAyE;;AAAA,qBACzChB,WAAW,EAD8B;AAAA,MAC9FiB,CAD8F,gBAC9FA,CAD8F;AAAA,MAC3FC,MAD2F,gBAC3FA,MAD2F;AAAA,MACnFC,QADmF,gBACnFA,QADmF;AAAA,MACzEC,QADyE,gBACzEA,QADyE;AAAA,MAC/DC,OAD+D,gBAC/DA,OAD+D;AAAA,MACtDC,QADsD,gBACtDA,QADsD;;AAAA,kBAExElC,QAAQ,CAAC,KAAD,CAFgE;AAAA,MAE/FmC,OAF+F;AAAA,MAEtFC,UAFsF;;AAAA,sBAGvFjC,IAAI,CAACkC,OAAL,EAHuF;AAAA;AAAA,MAG/FC,IAH+F;;AAItG,MAAMC,cAAc,GAAG,IAAI/B,cAAJ,EAAvB;AACA,MAAMgC,UAAU,GAAGzC,KAAK,CAAC0C,SAAN,EAAnB;;AALsG,2BAO1EzB,iBAAiB,EAPyD;AAAA,MAO9F0B,eAP8F,sBAO9FA,eAP8F;;AAQtG,MAAMC,SAAS,GAAGD,eAAe,CAAC;AAChC,sBAAkB;AADc,GAAD,CAAjC;;AAGA,MAAME,YAAY,GAAG,SAAfA,YAAe,CAACC,GAAD,EAAc;AACjC,WAAOf,MAAM,CAACD,CAAC,kBAAWgB,GAAG,CAACC,IAAf,EAAF,EAA0BjB,CAAC,CAACgB,GAAG,CAACE,OAAL,CAA3B,EAA0C,OAA1C,CAAb;AACD,GAFD,CAXsG,CActG;;;AACA,MAAMC,QAAQ;AAAA,yEAAG,iBAAOC,MAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,mBACZrB,YADY;AAAA;AAAA;AAAA;;AAAA,+CACSgB,YAAY,CAAChB,YAAD,CADrB;;AAAA;AAEfQ,cAAAA,UAAU,CAAC,IAAD,CAAV;AAFe;AAAA,qBAGoBzB,EAAE,CAAC4B,cAAc,CAACW,IAAf,CAAoB;AACxDC,gBAAAA,EAAE,EAAExB,OAAO,CAACwB,EAD4C;AAExDF,gBAAAA,MAAM,EAANA;AAFwD,eAApB,CAAD,CAHtB;;AAAA;AAAA;AAAA;AAGVG,cAAAA,KAHU;AAGHC,cAAAA,MAHG;AAOfjB,cAAAA,UAAU,CAAC,KAAD,CAAV;;AAPe,mBAQZgB,KARY;AAAA;AAAA;AAAA;;AAAA,+CAQER,YAAY,CAACQ,KAAD,CARd;;AAAA;AASftB,cAAAA,MAAM,CAACD,CAAC,CAAC,uBAAD,CAAF,CAAN;AACAE,cAAAA,QAAQ,CAAC,+BAAD,CAAR;;AAVe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAARiB,QAAQ;AAAA;AAAA;AAAA,KAAd;;AAaA,MAAMM,QAAQ;AAAA,yEAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,mBACZ1B,YADY;AAAA;AAAA;AAAA;;AAAA,gDACSgB,YAAY,CAAChB,YAAD,CADrB;;AAAA;AAAA;AAAA,qBAEoBjB,EAAE,CAAC4B,cAAc,UAAd,CAAsB;AAAEgB,gBAAAA,GAAG,EAAE,CAAC5B,OAAO,CAACwB,EAAT;AAAP,eAAtB,CAAD,CAFtB;;AAAA;AAAA;AAAA;AAEVC,cAAAA,KAFU;AAEHC,cAAAA,MAFG;;AAAA,mBAGZD,KAHY;AAAA;AAAA;AAAA;;AAAA,gDAGER,YAAY,CAACQ,KAAD,CAHd;;AAAA;AAIftB,cAAAA,MAAM,CAACD,CAAC,CAAC,uBAAD,CAAF,CAAN;AACAE,cAAAA,QAAQ,CAAC,+BAAD,CAAR;;AALe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAARuB,QAAQ;AAAA;AAAA;AAAA,KAAd,CA5BsG,CAoCtG;;;AACA,MAAME,YAAY,GAAG,SAAfA,YAAe,GAAqB;AACxC,QAAIH,MAAqB,GAAG,EAA5B;AACA3B,IAAAA,IAAI,CAAC+B,GAAL,CAAS,UAAAC,IAAI,EAAI;AACfL,MAAAA,MAAM,CAACM,IAAP,CACE,MAAC,MAAD;AAAQ,QAAA,KAAK,EAAED,IAAI,CAACP,EAApB;AAAwB,QAAA,GAAG,EAAEO,IAAI,CAACP;AAAlC,SAAuCO,IAAI,CAACE,QAA5C,SAAyDF,IAAI,CAACG,KAA9D,SAAwEH,IAAI,CAACI,MAAL,GAAYjC,CAAC,CAAC,WAAD,CAAb,GAA2BA,CAAC,CAAC,YAAD,CAApG,CADF;AAGD,KAJD;AAKA,WAAOwB,MAAP;AACD,GARD;;AASA,MAAMU,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AAC/B,WACE,MAAC,aAAD;AACE,MAAA,GAAG,EAAEvB,UADP;AAEE,MAAA,QAAQ,EAAEc,QAFZ;AAGE,MAAA,KAAK,EAAEzB,CAAC,CAAC,YAAD,CAHV;AAIE,MAAA,OAAO,EAAEA,CAAC,CAAC,uBAAD;AAJZ,MADF;AAQD,GATD;;AAWA,SAAO,MAAC,MAAD,QACL;AAAK,IAAA,SAAS,EAAC;AAAf,KACE,MAAC,IAAD,eACMV,cADN;AAEE,IAAA,IAAI,EAAEmB,IAFR;AAGE,IAAA,IAAI,EAAC,eAHP;AAIE,IAAA,aAAa,EAAE;AACbQ,MAAAA,IAAI,EAAEnB,OAAO,CAACmB,IADD;AAEbkB,MAAAA,QAAQ,EAAErC,OAAO,CAACqC,QAFL;AAGbC,MAAAA,QAAQ,EAAEtC,OAAO,CAACsC,QAAR,GAAmBhD,MAAM,CAACU,OAAO,CAACsC,QAAT,CAAN,CAAyBC,QAAzB,CAAkC,CAAlC,EAAoC,GAApC,CAAnB,GAA8D,EAH3D;AAIbC,MAAAA,MAAM,EAAExC,OAAO,CAACwC,MAJH;AAKbC,MAAAA,OAAO,EAAEzC,OAAO,CAACyC,OALJ;AAMbC,MAAAA,MAAM,EAAE1C,OAAO,CAAC0C,MANH;AAObC,MAAAA,KAAK,EAAE3C,OAAO,CAAC2C,KAPF;AAQbC,MAAAA,cAAc,EAAE5C,OAAO,CAAC4C,cARX;AASbC,MAAAA,MAAM,EAAE7C,OAAO,CAAC6C,MAAR,GAAiBvD,MAAM,CAACU,OAAO,CAAC6C,MAAT,CAAN,CAAuBN,QAAvB,CAAgC,CAAhC,EAAkC,GAAlC,CAAjB,GAA0D,EATrD;AAUbO,MAAAA,OAAO,EAAE9C,OAAO,CAAC8C,OAAR,GAAkBxD,MAAM,CAACU,OAAO,CAAC8C,OAAT,CAAN,CAAwBP,QAAxB,CAAiC,CAAjC,EAAmC,GAAnC,CAAlB,GAA4D,EAVxD;AAWbL,MAAAA,KAAK,EAAElC,OAAO,CAACkC;AAXF,KAJjB;AAiBE,IAAA,QAAQ,EAAEb,QAjBZ;AAkBE,IAAA,kBAAkB;AAlBpB,MAoBE,MAAC,IAAD,CAAM,IAAN;AACE,IAAA,KAAK,EAAEnB,CAAC,CAAC,MAAD,CADV;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,KAAK,EAAE,CACL;AAAE6C,MAAAA,QAAQ,EAAE,IAAZ;AAAkB3B,MAAAA,OAAO,EAAElB,CAAC,CAAC,eAAD;AAA5B,KADK;AAHT,KAOE,MAAC,KAAD,OAPF,CApBF,EA8BE,MAAC,IAAD,CAAM,IAAN;AACE,IAAA,KAAK,EAAEA,CAAC,CAAC,UAAD,CADV;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,KAAK,EAAE,CACL;AAAE6C,MAAAA,QAAQ,EAAE,IAAZ;AAAkB3B,MAAAA,OAAO,EAAElB,CAAC,CAAC,eAAD;AAA5B,KADK;AAHT,KAOE,MAAC,KAAD,OAPF,CA9BF,EAwCE,MAAC,IAAD,CAAM,IAAN;AACE,IAAA,KAAK,EAAEA,CAAC,CAAC,UAAD,CADV;AAEE,IAAA,IAAI,EAAC;AAFP,KAIE,MAAC,UAAD;AAAY,IAAA,MAAM,EAAE,YAApB;AAAkC,IAAA,QAAQ,EAAE,KAA5C;AAAmD,IAAA,WAAW,EAAEA,CAAC,CAAC,kBAAD;AAAjE,IAJF,CAxCF,EA+CE,MAAC,IAAD,CAAM,IAAN;AACE,IAAA,KAAK,EAAEA,CAAC,CAAC,QAAD,CADV;AAEE,IAAA,IAAI,EAAC;AAFP,KAIE,MAAC,KAAD,CAAO,KAAP,QACE,MAAC,KAAD;AAAO,IAAA,KAAK,EAAE,CAAd;AAAiB,IAAA,GAAG,EAAE;AAAtB,KAA0BA,CAAC,CAAC,MAAD,CAA3B,CADF,EAEE,MAAC,KAAD;AAAO,IAAA,KAAK,EAAE,CAAd;AAAiB,IAAA,GAAG,EAAE;AAAtB,KAA0BA,CAAC,CAAC,QAAD,CAA3B,CAFF,CAJF,CA/CF,EAyDE,MAAC,IAAD,CAAM,IAAN;AACE,IAAA,KAAK,EAAEA,CAAC,CAAC,SAAD,CADV;AAEE,IAAA,IAAI,EAAC;AAFP,KAIE,MAAC,KAAD,OAJF,CAzDF,EAgEE,MAAC,IAAD,CAAM,IAAN;AACE,IAAA,KAAK,EAAEA,CAAC,CAAC,QAAD,CADV;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,KAAK,EAAE,CACL;AAAE8C,MAAAA,OAAO,EAAE,WAAX;AAAwB5B,MAAAA,OAAO,EAAElB,CAAC,CAAC,aAAD;AAAlC,KADK,EAEL;AAAE+C,MAAAA,GAAG,EAAE,EAAP;AAAW7B,MAAAA,OAAO,EAAElB,CAAC,CAAC,gBAAD,EAAmB;AAAEgD,QAAAA,MAAM,EAAE;AAAV,OAAnB;AAArB,KAFK;AAHT,KAQE,MAAC,KAAD,OARF,CAhEF,EA2EE,MAAC,IAAD,CAAM,IAAN;AACE,IAAA,KAAK,EAAEhD,CAAC,CAAC,OAAD,CADV;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,KAAK,EAAE,CACL;AAAE8C,MAAAA,OAAO,EAAE,WAAX;AAAwB5B,MAAAA,OAAO,EAAElB,CAAC,CAAC,aAAD;AAAlC,KADK,EAEL;AAAE+C,MAAAA,GAAG,EAAE,EAAP;AAAW7B,MAAAA,OAAO,EAAElB,CAAC,CAAC,gBAAD,EAAmB;AAAEgD,QAAAA,MAAM,EAAE;AAAV,OAAnB;AAArB,KAFK;AAHT,KAQE,MAAC,KAAD,OARF,CA3EF,EAsFE,MAAC,IAAD,CAAM,IAAN;AACE,IAAA,KAAK,EAAEhD,CAAC,CAAC,yBAAD,CADV;AAEE,IAAA,IAAI,EAAC;AAFP,KAIE,MAAC,KAAD,OAJF,CAtFF,EA6FE,MAAC,IAAD,CAAM,IAAN;AACE,IAAA,KAAK,EAAEA,CAAC,CAAC,iBAAD,CADV;AAEE,IAAA,IAAI,EAAC;AAFP,KAIE,MAAC,UAAD;AAAY,IAAA,MAAM,EAAE,YAApB;AAAkC,IAAA,QAAQ,EAAE,KAA5C;AAAmD,IAAA,WAAW,EAAEA,CAAC,CAAC,kBAAD;AAAjE,IAJF,CA7FF,EAoGE,MAAC,IAAD,CAAM,IAAN;AACE,IAAA,KAAK,EAAEA,CAAC,CAAC,kBAAD,CADV;AAEE,IAAA,IAAI,EAAC;AAFP,KAIE,MAAC,UAAD;AAAY,IAAA,MAAM,EAAE,YAApB;AAAkC,IAAA,QAAQ,EAAE,KAA5C;AAAmD,IAAA,WAAW,EAAEA,CAAC,CAAC,kBAAD;AAAjE,IAJF,CApGF,EA2GE,MAAC,IAAD,CAAM,IAAN;AACE,IAAA,KAAK,EAAEA,CAAC,CAAC,KAAD,CADV;AAEE,IAAA,IAAI,EAAC;AAFP,KAIE,MAAC,MAAD;AACE,IAAA,UAAU,MADZ;AAEE,IAAA,WAAW,EAAEA,CAAC,CAAC,iBAAD,CAFhB;AAGE,IAAA,YAAY,EAAE,sBAACiD,KAAD,EAAaC,MAAb,EAA6B;AACzC,aAAOA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmBC,WAAnB,GAAiCC,OAAjC,CAAyCJ,KAAK,CAACG,WAAN,EAAzC,KAAiE,CAAxE;AACD;AALH,KAOGzB,YAAY,EAPf,CAJF,CA3GF,EA0HE,MAAC,IAAD,CAAM,IAAN;AAAW,IAAA,UAAU,EAAE;AAAElC,MAAAA,IAAI,EAAE;AAAR,KAAvB;AAAqC,IAAA,KAAK,EAAE;AAAE6D,MAAAA,SAAS,EAAE;AAAb;AAA5C,KACE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAMpD,QAAQ,CAAC,+BAAD,CAAd;AAAA,KAAjB;AAAkE,IAAA,KAAK,EAAE;AAAEqD,MAAAA,WAAW,EAAE;AAAf;AAAzE,KACE,MAAC,gBAAD,OADF,OACwBvD,CAAC,CAAC,QAAD,CADzB,CADF,EAKE,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,QAAQ,EAAC,QAAhC;AAAyC,IAAA,OAAO,EAAEM,OAAlD;AAA2D,IAAA,KAAK,EAAE;AAAEiD,MAAAA,WAAW,EAAE;AAAf;AAAlE,KACE,MAAC,UAAD,OADF,OACkBvD,CAAC,CAAC,QAAD,CADnB,CALF,EASE,MAAC,MAAD;AAAQ,IAAA,MAAM,EAAE,CAACc,SAAjB;AAA4B,IAAA,MAAM,MAAlC;AAAmC,IAAA,OAAO,EAAE,mBAAM;AAC9C,UAAIH,UAAU,CAAC6C,OAAf,EAAwB7C,UAAU,CAAC6C,OAAX,CAAmBC,IAAnB,CAAwB3D,OAAO,CAACwB,EAAhC;AACzB;AAFH,KAGE,MAAC,YAAD,OAHF,OAGoBtB,CAAC,CAAC,YAAD,CAHrB,CATF,CA1HF,CADF,EA4IGkC,kBAAkB,EA5IrB,CADK,CAAP;AAgJD,CAzMD;;GAAMtC,I;UACyDb,W,EAE9CT,IAAI,CAACkC,O,EAIQrB,iB;;;KAPxBS,I;;AA2MNA,IAAI,CAAC8D,eAAL;AAAA,uEAAuB,kBAAOC,GAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AACfjD,YAAAA,cADe,GACE,IAAI/B,cAAJ,CAAmBgF,GAAnB,CADF;AAEfC,YAAAA,UAFe,GAEF,IAAIhF,UAAJ,CAAe+E,GAAf,CAFE;AAGfE,YAAAA,KAHe,GAGPF,GAAG,CAACE,KAHG;;AAMrB,gBAAI,CAACA,KAAK,CAACvC,EAAX,EAAe;AACb;AACAC,cAAAA,KAAK,GAAG;AACNN,gBAAAA,IAAI,EAAE,IADA;AAENC,gBAAAA,OAAO,EAAE;AAFH,eAAR;AAID;;AAZoB;AAAA,mBAcepC,EAAE,CAAC4B,cAAc,CAACoD,MAAf,CAAsB;AAAExC,cAAAA,EAAE,EAAEuC,KAAK,CAACvC;AAAZ,aAAtB,CAAD,CAdjB;;AAAA;AAAA;AAAA;AAchBvB,YAAAA,YAdgB;AAcFD,YAAAA,OAdE;AAerB,gBAAGC,YAAH,EAAiBD,OAAO,GAAG,EAAV;AAfI;AAAA,mBAgBUhB,EAAE,CAAC8E,UAAU,CAACG,KAAX,CAAiB;AAAEC,cAAAA,QAAQ,EAAE,CAAC;AAAb,aAAjB,CAAD,CAhBZ;;AAAA;AAAA;AAAA;AAgBdC,YAAAA,QAhBc;AAgBJpE,YAAAA,IAhBI;AAAA,8CAiBd;AACLqE,cAAAA,kBAAkB,EAAE,CAAC,QAAD,EAAW,OAAX,EAAoB,MAApB,EAA2B,QAA3B,CADf;AAEL3C,cAAAA,KAAK,EAAEA,KAFF;AAGLzB,cAAAA,OAAO,EAAEA,OAHJ;AAILC,cAAAA,YAAY,EAAEA,YAJT;AAKLF,cAAAA,IAAI,EAAEhB,CAAC,CAACsF,GAAF,CAAMtE,IAAN,EAAY,MAAZ,EAAoB,EAApB;AALD,aAjBc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AAAA;AAAA;AAAA;AAAA;;AAyBAD,IAAI,CAACwE,WAAL,GAAmB;AACjB,oBAAkB;AADD,CAAnB;AAGA,eAAexE,IAAf","sourcesContent":["import ConfirmDialog from 'themes/components/Dialogs/ConfirmDialog';\r\n\r\nimport React, { useState } from 'react'\r\nimport Layout from 'themes/layouts/Admin'\r\nimport { Button, Row, Col, Form, Input, Select, Modal, InputNumber, Radio, DatePicker } from 'antd';\r\nimport PatientService from 'themes/services/api/PatientService';\r\nimport BedService from 'themes/services/api/BedService';\r\nimport _ from 'lodash';\r\nimport to from 'await-to-js'\r\nimport useBaseHook from 'themes/hooks/BaseHooks'\r\nimport { DeleteFilled, SaveFilled, LeftCircleFilled, CopyFilled } from '@ant-design/icons';\r\nimport usePermissionHook from \"themes/hooks/PermissionHook\";\r\nimport moment from 'moment'\r\n\r\nconst { Option } = Select\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 4 },\r\n  },\r\n  wrapperCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 18 },\r\n  },\r\n};\r\n\r\nconst Edit = ({ beds, patient, patientError }: { beds: Bed[], patient: Patient, patientError: any }) => {\r\n  const { t, notify, redirect, setStore, getAuth, getStore } = useBaseHook();\r\n  const [loading, setLoading] = useState(false);\r\n  const [form] = Form.useForm();\r\n  const patientService = new PatientService()\r\n  const confirmRef = React.createRef<ConfirmDialog>()\r\n\r\n  const { checkPermission } = usePermissionHook();\r\n  const deletePer = checkPermission({\r\n    \"admin.patients\": \"D\"\r\n  })\r\n  const DisplayError = (err: any) => {\r\n    return notify(t(`errors:${err.code}`), t(err.message), 'error')\r\n  }\r\n  //submit form\r\n  const onFinish = async (values: any): Promise<void> => {\r\n    if(patientError) return DisplayError(patientError)\r\n    setLoading(true)\r\n    let [error, result]: any[] = await to(patientService.edit({\r\n      id: patient.id,\r\n      values\r\n    }));\r\n    setLoading(false)\r\n    if(error) return DisplayError(error)\r\n    notify(t(\"message.recordUpdated\"))\r\n    redirect(\"frontend.admin.patients.index\")\r\n  }\r\n\r\n  const onDelete = async (): Promise<void> => {\r\n    if(patientError) return DisplayError(patientError)\r\n    let [error, result]: any[] = await to(patientService.delete({ ids: [patient.id] }));\r\n    if(error) return DisplayError(error)\r\n    notify(t('message.recordDeleted'))\r\n    redirect(\"frontend.admin.patients.index\")\r\n  }\r\n\r\n  //render option\r\n  const renderOption = (): JSX.Element[] => {\r\n    let result: JSX.Element[] = [];\r\n    beds.map(item => {\r\n      result.push(\r\n        <Option value={item.id} key={item.id}>{item.roomCode} - {item.bedId} - {item.status?t('beds.full'):t('beds.empty')}</Option>\r\n      )\r\n    })\r\n    return result;\r\n  }\r\n  const renderDeleteDialog = () => {\r\n    return (\r\n      <ConfirmDialog\r\n        ref={confirmRef}\r\n        onSubmit={onDelete}\r\n        title={t('deleteItem')}\r\n        content={t('message.deleteConfirm')}\r\n      />\r\n    )\r\n  }\r\n\r\n  return <Layout>\r\n    <div className=\"content\">\r\n      <Form\r\n        {...formItemLayout}\r\n        form={form}\r\n        name=\"createPatient\"\r\n        initialValues={{\r\n          code: patient.code,\r\n          fullname: patient.fullname,\r\n          birthday: patient.birthday ? moment(patient.birthday).subtract(7,'h') : \"\",\r\n          gender: patient.gender,\r\n          address: patient.address,\r\n          cardId: patient.cardId,\r\n          phone: patient.phone,\r\n          medicalHistory: patient.medicalHistory,\r\n          dateIn: patient.dateIn ? moment(patient.dateIn).subtract(7,'h') : \"\",\r\n          dateOut: patient.dateOut ? moment(patient.dateOut).subtract(7,'h') : \"\",\r\n          bedId: patient.bedId\r\n        }}\r\n        onFinish={onFinish}\r\n        scrollToFirstError\r\n      >\r\n        <Form.Item\r\n          label={t(\"code\")}\r\n          name=\"code\"\r\n          rules={[\r\n            { required: true, message: t('form.required') },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={t(\"fullname\")}\r\n          name=\"fullname\"\r\n          rules={[\r\n            { required: true, message: t('form.required') },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={t(\"birthday\")}\r\n          name=\"birthday\"\r\n        >\r\n          <DatePicker format={'YYYY-MM-DD'} showTime={false} placeholder={t('placeholder.date')} />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={t(\"gender\")}\r\n          name=\"gender\"\r\n        >\r\n          <Radio.Group>\r\n            <Radio value={0} key={0}>{t(\"male\")}</Radio>\r\n            <Radio value={1} key={1}>{t(\"female\")}</Radio>\r\n          </Radio.Group>\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={t(\"address\")}\r\n          name=\"address\"\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={t(\"cardId\")}\r\n          name=\"cardId\"\r\n          rules={[\r\n            { pattern: /^[0-9]+$/g, message: t('form.number') },\r\n            { max: 12, message: t('form.maxLength', { length: 12 }) }\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={t(\"phone\")}\r\n          name=\"phone\"\r\n          rules={[\r\n            { pattern: /^[0-9]+$/g, message: t('form.number') },\r\n            { max: 12, message: t('form.maxLength', { length: 12 }) }\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={t(\"patients.medicalHistory\")}\r\n          name=\"medicalHistory\"\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={t(\"patients.dateIn\")}\r\n          name=\"dateIn\"\r\n        >\r\n          <DatePicker format={'YYYY-MM-DD'} showTime={false} placeholder={t('placeholder.date')} />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={t(\"patients.dateOut\")}\r\n          name=\"dateOut\"\r\n        >\r\n          <DatePicker format={'YYYY-MM-DD'} showTime={false} placeholder={t('placeholder.date')} />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={t(\"bed\")}\r\n          name=\"bedId\"\r\n        >\r\n          <Select\r\n            showSearch\r\n            placeholder={t('placeholder.bed')}\r\n            filterOption={(input: any, option: any) => {\r\n              return option.children[0].toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n            }}\r\n          >\r\n            {renderOption()}\r\n          </Select>\r\n        </Form.Item>\r\n\r\n        <Form.Item wrapperCol={{ span: 24 }} style={{ textAlign: \"center\" }}>\r\n          <Button onClick={() => redirect(\"frontend.admin.patients.index\")} style={{ marginRight: 8 }}>\r\n            <LeftCircleFilled /> {t('cancel')}\r\n          </Button>\r\n\r\n          <Button type=\"primary\" htmlType=\"submit\" loading={loading} style={{ marginRight: 8 }}>\r\n            <SaveFilled /> {t('submit')}\r\n          </Button>\r\n          \r\n          <Button hidden={!deletePer} danger onClick={() => { \r\n              if (confirmRef.current) confirmRef.current.show(patient.id) \r\n            }}>\r\n            <DeleteFilled /> {t('deleteItem')}\r\n          </Button>\r\n         \r\n        </Form.Item>\r\n      </Form>\r\n      {renderDeleteDialog()}\r\n    </div>\r\n  </Layout>\r\n}\r\n\r\nEdit.getInitialProps = async (ctx: any) => {\r\n  const patientService = new PatientService(ctx)\r\n  const bedService = new BedService(ctx)\r\n  const query = ctx.query;\r\n  let error: any;\r\n\r\n  if (!query.id) {\r\n    //error missing id\r\n    error = {\r\n      code: 9996,\r\n      message: 'missing ID'\r\n    }\r\n  }\r\n\r\n  let [patientError, patient] = await to(patientService.detail({ id: query.id }));\r\n  if(patientError) patient = {}\r\n  const [errorBed, beds] = await to(bedService.index({ pageSize: -1 }));\r\n  return {\r\n    namespacesRequired: ['common', 'pages', 'menu','errors'],\r\n    error: error,\r\n    patient: patient,\r\n    patientError: patientError,\r\n    beds: _.get(beds, \"data\", []),\r\n  }\r\n}\r\nEdit.permissions = {\r\n  \"admin.patients\": \"U\"\r\n};\r\nexport default Edit"]},"metadata":{},"sourceType":"module"}