{"ast":null,"code":"var _jsxFileName = \"E:\\\\DATN\\\\nursinghome\\\\pages\\\\admin\\\\healthStatuses\\\\edit.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport ConfirmDialog from 'themes/components/Dialogs/ConfirmDialog';\nimport React, { useState } from 'react';\nimport Layout from 'themes/layouts/Admin';\nimport { Button, Form, Input, Select, DatePicker, InputNumber } from 'antd';\nimport HealthService from 'themes/services/api/HealthStatusService';\nimport PatientService from 'themes/services/api/PatientService';\nimport UserService from 'themes/services/api/UserService';\nimport _ from 'lodash';\nimport to from 'await-to-js';\nimport useBaseHook from 'themes/hooks/BaseHooks';\nimport { DeleteFilled, SaveFilled, LeftCircleFilled } from '@ant-design/icons';\nimport usePermissionHook from \"themes/hooks/PermissionHook\";\nimport moment from 'moment'; // import locale from 'antd/lib/date-picker/locale/vi_VN';\n\nconst {\n  Option\n} = Select;\nconst formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 4\n    }\n  },\n  wrapperCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 18\n    }\n  }\n};\n\nconst Edit = ({\n  patients,\n  users,\n  health\n}) => {\n  const {\n    t,\n    notify,\n    redirect,\n    setStore,\n    getAuth,\n    getStore\n  } = useBaseHook();\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: modalVisible,\n    1: setModalVisible\n  } = useState(false);\n  const [form] = Form.useForm();\n  const healthService = new HealthService();\n  const confirmRef = React.createRef();\n  const {\n    checkPermission\n  } = usePermissionHook();\n  const deletePer = checkPermission({\n    \"admin.healthStatuses\": \"D\"\n  }); //submit form\n\n  const onFinish = async values => {\n    setLoading(true);\n    console.log(values);\n    let [error, result] = await to(healthService.edit({\n      id: health.id,\n      values\n    }));\n    setLoading(false);\n\n    if (error) {\n      return notify(t(`errors:${error.code}`), t(error.message), 'error');\n    }\n\n    notify(t(\"message.recordUpdated\"));\n    redirect(\"frontend.admin.healthStatuses.index\");\n  };\n\n  const onDelete = async () => {\n    let [error, result] = await to(healthService.delete({\n      ids: [health.id]\n    }));\n\n    if (error) {\n      return notify(t(`errors:${error.code}`), t(`${error.message}`), 'error');\n    }\n\n    notify(t('message.recordDeleted'));\n    redirect(\"frontend.admin.healthStatuses.index\");\n  }; //render option\n\n\n  const renderOptionPatient = () => {\n    let result = [];\n    patients.map(item => {\n      result.push(__jsx(Option, {\n        value: item.id,\n        key: item.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 7\n        }\n      }, item.fullname, \" - \", item.roomCode, \" - \", item.bedCode));\n    });\n    return result;\n  };\n\n  const renderOptionUser = () => {\n    let result = [];\n    users.map(item => {\n      item.position = item.position ? item.position.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '') : \"\";\n      if (item.position == \"Bác sỹ\") result.push(__jsx(Option, {\n        value: item.id,\n        key: item.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 7\n        }\n      }, item.code, \" - \", item.fullname));\n    });\n    return result;\n  };\n\n  const renderDeleteDialog = () => {\n    return __jsx(ConfirmDialog, {\n      ref: confirmRef,\n      onSubmit: onDelete,\n      title: t('deleteItem'),\n      content: t('message.deleteConfirm'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }\n    });\n  };\n\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 10\n    }\n  }, __jsx(\"div\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }\n  }, __jsx(Form, _extends({}, formItemLayout, {\n    form: form,\n    name: \"createPatient\",\n    initialValues: {\n      patientId: health.patientId,\n      date: health.date ? moment(health.date) : \"\",\n      height: health.height,\n      weight: health.weight,\n      bloodPressure: health.bloodPressure,\n      bloodSugar: health.bloodSugar,\n      heartRate: health.heartRate,\n      doctorId: health.doctorId,\n      note: health.note\n    },\n    onFinish: onFinish,\n    scrollToFirstError: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }), __jsx(Form.Item, {\n    label: t(\"healthStatuses.patientCode\"),\n    name: \"patientId\",\n    rules: [{\n      required: true,\n      message: t('form.required')\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, __jsx(Select, {\n    showSearch: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }\n  }, renderOptionPatient())), __jsx(Form.Item, {\n    label: t(\"healthStatuses.date\"),\n    name: \"date\",\n    rules: [{\n      required: true,\n      message: t('form.required')\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  }, __jsx(DatePicker, {\n    format: 'YYYY-MM-DD',\n    showTime: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 11\n    }\n  })), __jsx(Form.Item, {\n    label: t(\"healthStatuses.height\"),\n    name: \"height\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }\n  }, __jsx(InputNumber, {\n    min: 0,\n    max: 200,\n    step: 0.1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 11\n    }\n  })), __jsx(Form.Item, {\n    label: t(\"healthStatuses.weight\"),\n    name: \"weight\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }\n  }, __jsx(InputNumber, {\n    min: 0,\n    max: 300,\n    step: 0.1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 11\n    }\n  })), __jsx(Form.Item, {\n    label: t(\"healthStatuses.bloodPressure\"),\n    name: \"bloodPressure\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }\n  }, __jsx(Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 11\n    }\n  })), __jsx(Form.Item, {\n    label: t(\"healthStatuses.bloodSugar\"),\n    name: \"bloodSugar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }\n  }, __jsx(Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 11\n    }\n  })), __jsx(Form.Item, {\n    label: t(\"healthStatuses.heartRate\"),\n    name: \"heartRate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }\n  }, __jsx(Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 11\n    }\n  })), __jsx(Form.Item, {\n    label: t(\"healthStatuses.doctorCode\"),\n    name: \"doctorId\",\n    rules: [{\n      required: true,\n      message: t('form.required')\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }\n  }, __jsx(Select, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 11\n    }\n  }, renderOptionUser())), __jsx(Form.Item, {\n    label: t(\"note\"),\n    name: \"note\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 9\n    }\n  }, __jsx(Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 11\n    }\n  })), __jsx(Form.Item, {\n    wrapperCol: {\n      span: 24\n    },\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    onClick: () => redirect(\"frontend.admin.healthStatuses.index\"),\n    style: {\n      marginRight: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 11\n    }\n  }, __jsx(LeftCircleFilled, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 13\n    }\n  }), \" \", t('cancel')), __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: loading,\n    style: {\n      marginRight: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 11\n    }\n  }, __jsx(SaveFilled, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }\n  }), \" \", t('submit')), __jsx(Button, {\n    hidden: !deletePer,\n    danger: true,\n    onClick: () => {\n      if (confirmRef.current) confirmRef.current.show(health.id);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 11\n    }\n  }, __jsx(DeleteFilled, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 13\n    }\n  }), \" \", t('deleteItem')))), renderDeleteDialog()));\n};\n\nEdit.getInitialProps = async ctx => {\n  const healthService = new HealthService(ctx);\n  const patientService = new PatientService(ctx);\n  const userService = new UserService(ctx);\n  const query = ctx.query;\n  let error;\n\n  if (!query.id) {\n    //error missing id\n    error = {\n      code: 9996,\n      message: 'missing ID'\n    };\n  }\n\n  let [healthError, health] = await to(healthService.detail({\n    id: query.id\n  }));\n  const [errorPatient, patients] = await to(patientService.index({\n    pageSize: -1\n  }));\n  const [errorUser, users] = await to(userService.index({\n    pageSize: -1\n  }));\n  return {\n    namespacesRequired: ['common', 'pages', 'menu'],\n    error: error,\n    health: health,\n    patients: _.get(patients, \"data\", []),\n    users: _.get(users, \"data\", [])\n  };\n};\n\nEdit.permissions = {\n  \"admin.healthStatuses\": \"U\"\n};\nexport default Edit;","map":{"version":3,"sources":["E:/DATN/nursinghome/pages/admin/healthStatuses/edit.tsx"],"names":["ConfirmDialog","React","useState","Layout","Button","Form","Input","Select","DatePicker","InputNumber","HealthService","PatientService","UserService","_","to","useBaseHook","DeleteFilled","SaveFilled","LeftCircleFilled","usePermissionHook","moment","Option","formItemLayout","labelCol","xs","span","sm","wrapperCol","Edit","patients","users","health","t","notify","redirect","setStore","getAuth","getStore","loading","setLoading","modalVisible","setModalVisible","form","useForm","healthService","confirmRef","createRef","checkPermission","deletePer","onFinish","values","console","log","error","result","edit","id","code","message","onDelete","delete","ids","renderOptionPatient","map","item","push","fullname","roomCode","bedCode","renderOptionUser","position","replace","renderDeleteDialog","patientId","date","height","weight","bloodPressure","bloodSugar","heartRate","doctorId","note","required","textAlign","marginRight","current","show","getInitialProps","ctx","patientService","userService","query","healthError","detail","errorPatient","index","pageSize","errorUser","namespacesRequired","get","permissions"],"mappings":"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","sourcesContent":["import ConfirmDialog from 'themes/components/Dialogs/ConfirmDialog';\r\n\r\nimport React, { useState } from 'react'\r\nimport Layout from 'themes/layouts/Admin'\r\nimport { Button, Form, Input, Select, DatePicker, InputNumber } from 'antd';\r\nimport HealthService from 'themes/services/api/HealthStatusService';\r\nimport PatientService from 'themes/services/api/PatientService';\r\nimport UserService from 'themes/services/api/UserService';\r\nimport _ from 'lodash';\r\nimport to from 'await-to-js'\r\nimport useBaseHook from 'themes/hooks/BaseHooks'\r\nimport { DeleteFilled, SaveFilled, LeftCircleFilled, CopyFilled } from '@ant-design/icons';\r\nimport usePermissionHook from \"themes/hooks/PermissionHook\";\r\nimport moment from 'moment'\r\n// import locale from 'antd/lib/date-picker/locale/vi_VN';\r\n\r\nconst { Option } = Select\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 4 },\r\n  },\r\n  wrapperCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 18 },\r\n  },\r\n};\r\n\r\nconst Edit = ({ patients, users, health }: { patients: Patient[], users : User[], health: HealthStatus }) => {\r\n  const { t, notify, redirect, setStore, getAuth, getStore } = useBaseHook();\r\n  const [loading, setLoading] = useState(false);\r\n  const [modalVisible, setModalVisible] = useState(false)\r\n  const [form] = Form.useForm();\r\n  const healthService = new HealthService()\r\n  const confirmRef = React.createRef<ConfirmDialog>()\r\n\r\n  const { checkPermission } = usePermissionHook();\r\n  const deletePer = checkPermission({\r\n    \"admin.healthStatuses\": \"D\"\r\n  })\r\n  //submit form\r\n  const onFinish = async (values: any): Promise<void> => {\r\n    setLoading(true)\r\n    console.log(values)\r\n    let [error, result]: any[] = await to(healthService.edit({\r\n      id: health.id,\r\n      values\r\n    }));\r\n    setLoading(false)\r\n\r\n    if (error) {\r\n      return notify(t(`errors:${error.code}`), t(error.message), 'error')\r\n    }\r\n    notify(t(\"message.recordUpdated\"))\r\n    redirect(\"frontend.admin.healthStatuses.index\")\r\n  }\r\n\r\n  const onDelete = async (): Promise<void> => {\r\n    let [error, result]: any[] = await to(healthService.delete({ ids: [health.id] }));\r\n\r\n    if (error) {\r\n      return notify(t(`errors:${error.code}`), t(`${error.message}`), 'error')\r\n    }\r\n    notify(t('message.recordDeleted'))\r\n    redirect(\"frontend.admin.healthStatuses.index\")\r\n  }\r\n\r\n  //render option\r\n  const renderOptionPatient = (): JSX.Element[] => {\r\n    let result: JSX.Element[] = [];\r\n    patients.map(item => {\r\n      result.push(\r\n      <Option value={item.id} key={item.id}>{item.fullname} - {item.roomCode} - {item.bedCode}</Option>\r\n      )\r\n    })\r\n    return result;\r\n  }\r\n\r\n  const renderOptionUser = (): JSX.Element[] => {\r\n    let result: JSX.Element[] = [];\r\n    users.map(item => {\r\n      item.position = item.position? item.position.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '') : \"\"\r\n      if(item.position == \"Bác sỹ\")\r\n      result.push(\r\n      <Option value={item.id} key={item.id}>{item.code} - {item.fullname}</Option>\r\n      )\r\n    })\r\n    return result;\r\n  }\r\n\r\n  const renderDeleteDialog = () => {\r\n    return (\r\n      <ConfirmDialog\r\n        ref={confirmRef}\r\n        onSubmit={onDelete}\r\n        title={t('deleteItem')}\r\n        content={t('message.deleteConfirm')}\r\n      />\r\n    )\r\n  }\r\n\r\n  return <Layout>\r\n    <div className=\"content\">\r\n      <Form\r\n        {...formItemLayout}\r\n        form={form}\r\n        name=\"createPatient\"\r\n        initialValues={{\r\n          patientId: health.patientId,\r\n          date: health.date ? moment(health.date) : \"\",\r\n          height: health.height,\r\n          weight: health.weight,\r\n          bloodPressure: health.bloodPressure,\r\n          bloodSugar: health.bloodSugar,\r\n          heartRate: health.heartRate,\r\n          doctorId: health.doctorId,\r\n          note: health.note\r\n        }}\r\n        onFinish={onFinish}\r\n        scrollToFirstError\r\n      >\r\n        <Form.Item\r\n          label={t(\"healthStatuses.patientCode\")}\r\n          name=\"patientId\"\r\n          rules={[\r\n            { required: true, message: t('form.required') },\r\n          ]}\r\n        >\r\n          <Select showSearch>\r\n            {renderOptionPatient()}\r\n          </Select>\r\n        </Form.Item>\r\n        \r\n        <Form.Item\r\n          label={t(\"healthStatuses.date\")}\r\n          name=\"date\"\r\n          rules={[\r\n            { required: true, message: t('form.required') },\r\n          ]}\r\n        >\r\n          <DatePicker format={'YYYY-MM-DD'} showTime={false}/>\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={t(\"healthStatuses.height\")}\r\n          name=\"height\"\r\n        >\r\n          <InputNumber min={0} max={200} step={0.1} />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={t(\"healthStatuses.weight\")}\r\n          name=\"weight\"\r\n        >\r\n          <InputNumber min={0} max={300} step={0.1} />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={t(\"healthStatuses.bloodPressure\")}\r\n          name=\"bloodPressure\"\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={t(\"healthStatuses.bloodSugar\")}\r\n          name=\"bloodSugar\"\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={t(\"healthStatuses.heartRate\")}\r\n          name=\"heartRate\"\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={t(\"healthStatuses.doctorCode\")}\r\n          name=\"doctorId\"\r\n          rules={[\r\n            { required: true, message: t('form.required') },\r\n          ]}\r\n        >\r\n          <Select>\r\n            {renderOptionUser()}\r\n          </Select>\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={t(\"note\")}\r\n          name=\"note\"\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item wrapperCol={{ span: 24 }} style={{ textAlign: \"center\" }}>\r\n          <Button onClick={() => redirect(\"frontend.admin.healthStatuses.index\")} style={{ marginRight: 8 }}>\r\n            <LeftCircleFilled /> {t('cancel')}\r\n          </Button>\r\n\r\n          <Button type=\"primary\" htmlType=\"submit\" loading={loading} style={{ marginRight: 8 }}>\r\n            <SaveFilled /> {t('submit')}\r\n          </Button>\r\n          \r\n          <Button hidden={!deletePer} danger onClick={() => { \r\n              if (confirmRef.current) confirmRef.current.show(health.id) \r\n            }}>\r\n            <DeleteFilled /> {t('deleteItem')}\r\n          </Button>\r\n         \r\n        </Form.Item>\r\n      </Form>\r\n      {renderDeleteDialog()}\r\n    </div>\r\n  </Layout>\r\n}\r\n\r\nEdit.getInitialProps = async (ctx: any) => {\r\n  const healthService = new HealthService(ctx)\r\n  const patientService = new PatientService(ctx)\r\n  const userService = new UserService(ctx)\r\n  const query = ctx.query;\r\n  let error: any;\r\n\r\n  if (!query.id) {\r\n    //error missing id\r\n    error = {\r\n      code: 9996,\r\n      message: 'missing ID'\r\n    }\r\n  }\r\n\r\n  let [healthError, health] = await to(healthService.detail({ id: query.id }));\r\n  const [errorPatient, patients] = await to(patientService.index({ pageSize: -1 }));\r\n  const [errorUser, users] = await to(userService.index({ pageSize: -1 }));\r\n  return {\r\n    namespacesRequired: ['common', 'pages', 'menu'],\r\n    error: error,\r\n    health: health,\r\n    patients: _.get(patients, \"data\", []),\r\n    users: _.get(users, \"data\", [])\r\n  }\r\n}\r\nEdit.permissions = {\r\n  \"admin.healthStatuses\": \"U\"\r\n};\r\nexport default Edit"]},"metadata":{},"sourceType":"module"}