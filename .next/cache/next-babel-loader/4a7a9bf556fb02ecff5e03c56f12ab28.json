{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport Layout from 'themes/layouts/Admin';\nimport { Button, Form, Input, Select, Typography } from 'antd';\nimport UserGroupService from 'themes/services/api/UserGroupService';\nimport to from 'await-to-js';\nimport useBaseHook from 'themes/hooks/BaseHooks';\nimport { LeftCircleFilled, SaveFilled } from '@ant-design/icons';\nvar Title = Typography.Title,\n    Text = Typography.Text;\nvar Option = Select.Option;\nvar formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 4\n    }\n  },\n  wrapperCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 18\n    }\n  }\n};\n\nvar Create = function Create() {\n  var _useBaseHook = useBaseHook(),\n      t = _useBaseHook.t,\n      notify = _useBaseHook.notify,\n      redirect = _useBaseHook.redirect,\n      router = _useBaseHook.router;\n\n  var _useState = useState(false),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  var _Form$useForm = Form.useForm(),\n      _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n      form = _Form$useForm2[0];\n\n  var userGroupService = new UserGroupService(); //submit form\n\n  var onFinish = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values) {\n      var _yield$to, _yield$to2, error, result;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setLoading(true);\n              _context.next = 3;\n              return to(userGroupService.create(values));\n\n            case 3:\n              _yield$to = _context.sent;\n              _yield$to2 = _slicedToArray(_yield$to, 2);\n              error = _yield$to2[0];\n              result = _yield$to2[1];\n              setLoading(false);\n\n              if (!error) {\n                _context.next = 10;\n                break;\n              }\n\n              return _context.abrupt(\"return\", notify(t(\"errors:\".concat(error.code)), t(error.message), 'error'));\n\n            case 10:\n              notify(t(\"message.recordCreated\"));\n              redirect(\"frontend.admin.userGroups.index\");\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onFinish(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(Layout, null, __jsx(\"div\", {\n    className: \"content\"\n  }, __jsx(Form, _extends({}, formItemLayout, {\n    form: form,\n    name: \"createUserGroup\",\n    initialValues: {\n      name: \"\",\n      description: \"\"\n    },\n    onFinish: onFinish,\n    scrollToFirstError: true\n  }), __jsx(Form.Item, {\n    label: t(\"name\"),\n    name: \"name\",\n    rules: [{\n      required: true,\n      message: t('form.required')\n    }]\n  }, __jsx(Input, null)), __jsx(Form.Item, {\n    label: t(\"description\"),\n    name: \"description\"\n  }, __jsx(Input, null)), __jsx(Form.Item, {\n    wrapperCol: {\n      span: 24\n    },\n    style: {\n      textAlign: \"center\"\n    }\n  }, __jsx(Button, {\n    onClick: function onClick() {\n      return router.back();\n    },\n    style: {\n      marginRight: 8\n    }\n  }, __jsx(LeftCircleFilled, null), \" \", t('cancel')), __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: loading,\n    style: {\n      marginRight: 8\n    }\n  }, __jsx(SaveFilled, null), \" \", t('submit'))))));\n};\n\nCreate.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(ctx) {\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            return _context2.abrupt(\"return\", {\n              namespacesRequired: ['common', 'pages', 'menu', 'errors']\n            });\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nCreate.permissions = {\n  \"root\": \"C\"\n};\nexport default Create;","map":{"version":3,"sources":["E:/DATN/nursinghome/pages/admin/userGroups/create.tsx"],"names":["React","useState","Layout","Button","Form","Input","Select","Typography","UserGroupService","to","useBaseHook","LeftCircleFilled","SaveFilled","Title","Text","Option","formItemLayout","labelCol","xs","span","sm","wrapperCol","Create","t","notify","redirect","router","loading","setLoading","useForm","form","userGroupService","onFinish","values","create","error","result","code","message","name","description","required","textAlign","back","marginRight","getInitialProps","ctx","namespacesRequired","permissions"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport Layout from 'themes/layouts/Admin'\r\nimport { Button, Row, Col, Form, Input, Select, Typography } from 'antd';\r\nimport UserGroupService from 'themes/services/api/UserGroupService';\r\nimport _ from 'lodash';\r\nimport to from 'await-to-js'\r\nimport useBaseHook from 'themes/hooks/BaseHooks'\r\nimport { LeftCircleFilled, SaveFilled } from '@ant-design/icons';\r\nimport BreadCrumb from 'themes/components/Breadcumb'\r\nconst { Title, Text } = Typography;\r\n\r\nconst { Option } = Select\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 4 },\r\n  },\r\n  wrapperCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 18 },\r\n  },\r\n};\r\n\r\n\r\nconst Create = () => {\r\n  const { t, notify, redirect, router } = useBaseHook();\r\n  const [loading, setLoading] = useState(false);\r\n  const [form] = Form.useForm();\r\n  const userGroupService = new UserGroupService()\r\n  //submit form\r\n  const onFinish = async (values: any): Promise<void> => {\r\n    setLoading(true)\r\n    let [error, result]: any[] = await to(userGroupService.create(values));\r\n    setLoading(false)\r\n\r\n    if (error) {\r\n      return notify(t(`errors:${error.code}`), t(error.message), 'error')\r\n    }\r\n    notify(t(\"message.recordCreated\"))\r\n    redirect(\"frontend.admin.userGroups.index\")\r\n  }\r\n\r\n  return <Layout>\r\n    <div className=\"content\">\r\n      <Form\r\n        {...formItemLayout}\r\n        form={form}\r\n        name=\"createUserGroup\"\r\n        initialValues={{\r\n          name: \"\",\r\n          description: \"\",\r\n        }}\r\n        onFinish={onFinish}\r\n        scrollToFirstError\r\n      >\r\n        <Form.Item\r\n          label={t(\"name\")}\r\n          name=\"name\"\r\n          rules={[\r\n            { required: true, message: t('form.required') },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label={t(\"description\")}\r\n          name=\"description\"\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item wrapperCol={{ span: 24 }} style={{ textAlign: \"center\" }}>\r\n          <Button onClick={() => router.back()} style={{ marginRight: 8 }}>\r\n            <LeftCircleFilled /> {t('cancel')}\r\n          </Button>\r\n          <Button type=\"primary\" htmlType=\"submit\" loading={loading} style={{ marginRight: 8 }}>\r\n            <SaveFilled /> {t('submit')}\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  </Layout>\r\n}\r\n\r\nCreate.getInitialProps = async (ctx: any) => {\r\n  return {\r\n    namespacesRequired: ['common', 'pages', 'menu','errors']\r\n  }\r\n}\r\nCreate.permissions = {\r\n  \"root\": \"C\"\r\n}\r\nexport default Create"]},"metadata":{},"sourceType":"module"}