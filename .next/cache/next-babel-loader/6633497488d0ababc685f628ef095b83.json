{"ast":null,"code":"import { useRouter } from 'next/router';\nimport { useTranslation } from 'themes/modules/I18n';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setStore as setStoreAction } from 'themes/components/Store';\nimport route from 'themes/route';\nimport _ from 'lodash';\nimport { notification } from 'antd';\n\nconst useBaseHooks = ({\n  lang = ['common', 'pages', 'errors']\n} = {}) => {\n  const router = useRouter();\n  const I18n = useTranslation(lang);\n  const dispatch = useDispatch();\n\n  const setStore = async (path, value) => {\n    return dispatch(setStoreAction(path, value));\n  };\n\n  const getStore = path => {\n    return useSelector(state => _.get(state, path));\n  };\n\n  const redirect = (routeName, query, shallow = false) => {\n    let nextRoute;\n\n    try {\n      nextRoute = route(routeName, query);\n    } catch (e) {\n      nextRoute = {\n        href: routeName,\n        as: routeName\n      };\n    }\n\n    router.push(nextRoute.href, nextRoute.as, {\n      shallow\n    });\n  };\n\n  const getData = (obj, path, defaultValue = undefined) => {\n    let value = _.get(obj, path, defaultValue);\n\n    if (value == null) return defaultValue;\n    return value;\n  };\n\n  const notify = (message, description = '', type = \"success\") => {\n    notification[type]({\n      message: message,\n      description: description,\n      duration: 4 //second\n\n    });\n  };\n\n  const getAuth = () => {\n    return useSelector(state => state.auth);\n  };\n\n  const getCookies = () => {\n    return useSelector(state => state.cookies);\n  };\n\n  const getPublicRuntimeConfig = () => {\n    return useSelector(state => state.publicRuntimeConfig);\n  };\n\n  return {\n    useSelector,\n    router,\n    t: I18n.t,\n    setStore,\n    getStore,\n    redirect,\n    getData,\n    notify,\n    getAuth,\n    getCookies,\n    getPublicRuntimeConfig\n  };\n};\n\nuseBaseHooks.getData = (obj, path, defaultValue = undefined) => {\n  let value = _.get(obj, path, defaultValue);\n\n  if (value == null) return defaultValue;\n  return value;\n};\n\nexport default useBaseHooks;","map":{"version":3,"sources":["E:/DATN/nursinghome/themes/hooks/BaseHooks.tsx"],"names":["useRouter","useTranslation","useDispatch","useSelector","setStore","setStoreAction","route","_","notification","useBaseHooks","lang","router","I18n","dispatch","path","value","getStore","state","get","redirect","routeName","query","shallow","nextRoute","e","href","as","push","getData","obj","defaultValue","undefined","notify","message","description","type","duration","getAuth","auth","getCookies","cookies","getPublicRuntimeConfig","publicRuntimeConfig","t"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useRouter } from 'next/router'\r\nimport { useTranslation } from 'themes/modules/I18n'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { setStore as setStoreAction } from 'themes/components/Store'\r\nimport route from 'themes/route'\r\nimport _ from 'lodash'\r\nimport { notification } from 'antd'\r\ninterface BaseBook {\r\n    useSelector: Function,\r\n    router: any,\r\n    t: Function,\r\n    setStore: Function,\r\n    getStore: Function,\r\n    redirect: Function,\r\n    getData: Function,\r\n    notify: Function,\r\n    getAuth: Function\r\n    getCookies: Function,\r\n    getPublicRuntimeConfig: Function\r\n}\r\nconst useBaseHooks =  ({ lang = ['common', 'pages', 'errors'],} : { lang?: string[], } = {}): BaseBook => {\r\n    const router = useRouter()\r\n    const I18n = useTranslation(lang)\r\n    const dispatch = useDispatch();\r\n\r\n    const setStore = async (path: string, value: any): Promise<any> => {\r\n        return dispatch(setStoreAction(path, value))\r\n    }\r\n\r\n    const getStore = (path: string): any => {\r\n        return useSelector((state: any) => _.get(state, path))\r\n    }\r\n\r\n    const redirect = (routeName: string, query: string, shallow: boolean = false): void => {\r\n        let nextRoute;\r\n        try {\r\n            nextRoute = route(routeName, query)\r\n        }\r\n        catch (e) {\r\n            nextRoute = {\r\n                href: routeName,\r\n                as: routeName\r\n            }\r\n        }\r\n\r\n        router.push(nextRoute.href, nextRoute.as, {\r\n            shallow\r\n        })\r\n    }\r\n    const getData = (obj: any, path: string, defaultValue: any = undefined): any => {\r\n        let value = _.get(obj, path, defaultValue)\r\n        if (value == null) return defaultValue\r\n        return value\r\n    }\r\n\r\n    const notify = (message: string, description: string = '', type: \"success\" | \"error\" | \"warning\" = \"success\"): void => {\r\n        notification[type]({\r\n            message: message,\r\n            description: description,\r\n            duration: 4 //second\r\n        });\r\n    }\r\n\r\n    const getAuth = (): any => {\r\n        return useSelector((state: any) => state.auth)\r\n    }\r\n    const getCookies = (): any => {\r\n        return useSelector((state: any) => state.cookies)\r\n    }\r\n    const getPublicRuntimeConfig = (): any => {\r\n        return useSelector((state: any) => state.publicRuntimeConfig)\r\n    }\r\n\r\n    return {\r\n        useSelector,\r\n        router,\r\n        t: I18n.t,\r\n        setStore,\r\n        getStore,\r\n        redirect,\r\n        getData,\r\n        notify,\r\n        getAuth,\r\n        getCookies,\r\n        getPublicRuntimeConfig\r\n    };\r\n}\r\n\r\nuseBaseHooks.getData =  (obj: any, path: string, defaultValue: any = undefined): any => {\r\n    let value = _.get(obj, path, defaultValue)\r\n    if (value == null) return defaultValue\r\n    return value\r\n}\r\n\r\nexport default useBaseHooks"]},"metadata":{},"sourceType":"module"}