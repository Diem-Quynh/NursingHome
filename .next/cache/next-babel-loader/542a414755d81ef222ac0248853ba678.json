{"ast":null,"code":"var _jsxFileName = \"E:\\\\DATN\\\\nursinghome\\\\themes\\\\layouts\\\\admin\\\\Header.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { createRef, useEffect, useState } from 'react';\nimport { Menu, Layout, Avatar, Button, Input, Popover, Row, Col, AutoComplete } from 'antd';\nimport { MenuUnfoldOutlined, MenuFoldOutlined, PoweroffOutlined, SettingFilled, UserOutlined } from '@ant-design/icons';\nimport ConfirmDialog from 'themes/components/Dialogs/ConfirmDialog';\nimport UserService from \"themes/services/api/UserService\";\nimport PatientService from \"themes/services/api/PatientService\";\nimport BedService from \"themes/services/api/BedService\";\nimport useBaseHook from 'themes/hooks/BaseHooks';\nimport Cookies from 'universal-cookie';\nimport to from 'await-to-js';\nimport _ from 'lodash';\nconst {\n  Header\n} = Layout;\nconst {\n  SubMenu\n} = Menu;\nconst {\n  Search\n} = Input;\n\nconst AdminHeader = props => {\n  const {\n    t,\n    notify,\n    redirect,\n    setStore,\n    getAuth,\n    getStore,\n    getCookies,\n    getData\n  } = useBaseHook();\n  const userService = new UserService();\n  const patientService = new PatientService();\n  const bedService = new BedService();\n  const [patients, setPatients] = React.useState([]);\n  const [beds, setBeds] = React.useState([]);\n  const [users, setUsers] = React.useState([]);\n  const {\n    0: modalVisible,\n    1: setModalVisible\n  } = useState(false); // change password\n\n  const auth = getAuth() || {};\n  const cookieObject = getCookies();\n  const confirmRef = createRef();\n\n  const handleClickMenu = e => {};\n\n  const redirectLogin = async () => {\n    const cookies = new Cookies(cookieObject);\n    await cookies.remove('token', {\n      path: '/'\n    });\n    await cookies.remove('user', {\n      path: '/'\n    });\n    return await redirect('frontend.admin.login');\n  };\n\n  useEffect(() => {\n    if (!cookieObject.token || !cookieObject.user) {\n      redirect('frontend.admin.login');\n    }\n  }, []);\n  let optionsPatients = [];\n  let optionsBeds = [];\n  let optionsUsers = [];\n\n  const onChangeSearch = async value => {\n    let filterPatients = {\n      filters: [{\n        field: \"fullname\",\n        operator: \"contains\",\n        value: value\n      }],\n      sorting: [],\n      pageSize: 5,\n      page: 0\n    };\n    let filterBeds = {\n      filters: [{\n        field: \"roomCode\",\n        operator: \"contains\",\n        value: value\n      }],\n      sorting: [],\n      pageSize: 5,\n      page: 0\n    };\n    let filterUsers = {\n      filters: [{\n        field: \"fullname\",\n        operator: \"contains\",\n        value: value\n      }],\n      sorting: [],\n      pageSize: 5,\n      page: 0\n    };\n    let [errUsers, users] = await to(userService.index(filterUsers));\n\n    let dataUsers = _.get(users, \"data\", []);\n\n    if (dataUsers.length) {\n      setUsers(dataUsers);\n    }\n\n    let [errPatients, patients] = await to(patientService.index(filterPatients));\n\n    let dataPatients = _.get(patients, \"data\", []);\n\n    if (dataPatients.length) {\n      setPatients(dataPatients);\n    }\n\n    let [errBeds, beds] = await to(bedService.index(filterBeds));\n\n    let dataBeds = _.get(beds, \"data\", []);\n\n    if (dataBeds.length) {\n      setBeds(dataBeds);\n    }\n  };\n\n  const onBlurSearch = () => {\n    setUsers([]);\n    setBeds([]);\n    setPatients([]);\n  };\n\n  const renderConfirmDialog = () => {\n    return __jsx(ConfirmDialog, {\n      ref: confirmRef,\n      onSubmit: redirectLogin,\n      title: t('signout'),\n      content: t('message.signoutConfirm'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 7\n      }\n    });\n  };\n\n  const onChangePassword = async data => {\n    console.log(data);\n    setModalVisible(false);\n    let values = {\n      id: auth.id,\n      password: data.password\n    };\n    let [error, result] = await to(userService.updatePassword(values));\n\n    if (error) {\n      return notify(t(`errors:${error.code}`), t(error.message), 'error');\n    }\n\n    notify(t(\"message.recordUpdated\"));\n  }; //validate input password\n\n\n  const validatorPassword = ({\n    getFieldValue\n  }) => ({\n    validator: (rule, value) => {\n      if (!value || getFieldValue('password') === value) {\n        return Promise.resolve();\n      }\n\n      return Promise.reject(t('form.rePassword'));\n    }\n  });\n\n  const renderChangePassModal = () => {\n    const [formChangePassword] = Form.useForm();\n    return __jsx(Form, {\n      form: formChangePassword,\n      name: \"formChangePassword\",\n      initialValues: {\n        password: \"\",\n        repassword: \"\"\n      },\n      onFinish: onChangePassword,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 13\n      }\n    }, __jsx(Modal, {\n      closable: false,\n      visible: modalVisible,\n      onCancel: () => setModalVisible(false),\n      onOk: () => {\n        formChangePassword.submit();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 7\n      }\n    }, __jsx(Form.Item, {\n      label: t(\"password\"),\n      labelCol: {\n        span: 5\n      },\n      wrapperCol: {\n        span: 19\n      },\n      name: \"password\",\n      rules: [{\n        required: true,\n        message: t('form.required')\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }\n    }, __jsx(Input.Password, {\n      placeholder: t(\"password\"),\n      type: \"password\",\n      autoFocus: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }\n    })), __jsx(Form.Item, {\n      label: t(\"rePassword\"),\n      labelCol: {\n        span: 5\n      },\n      wrapperCol: {\n        span: 19\n      },\n      name: \"repassword\",\n      rules: [{\n        required: true,\n        message: t('form.required')\n      }, validatorPassword],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }\n    }, __jsx(Input.Password, {\n      placeholder: t(\"rePassword\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }\n    }))));\n  };\n\n  const renderRightContent = () => {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 12\n      }\n    }, __jsx(Button, {\n      icon: __jsx(PoweroffOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 21\n        }\n      }),\n      type: \"link\",\n      className: \"header-btn\",\n      onClick: () => {\n        if (confirmRef.current) confirmRef.current.show();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 7\n      }\n    }), __jsx(Button, {\n      icon: __jsx(SettingFilled, {\n        spin: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 21\n        }\n      }),\n      type: \"link\",\n      className: \"header-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 7\n      }\n    }));\n  };\n\n  const {\n    collapsed,\n    onCollapseChange\n  } = props;\n  const menuIconProps = {\n    className: \"trigger\",\n    onClick: () => onCollapseChange(!collapsed)\n  };\n  let headerClass = \"header\";\n  if (collapsed) headerClass += ' collapsed';\n\n  const accountPopup = () => {\n    return __jsx(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 12\n      }\n    }, __jsx(\"div\", {\n      style: {\n        width: \"400px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 7\n      }\n    }, __jsx(Row, {\n      gutter: [8, 8],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }\n    }, __jsx(Col, {\n      xs: 12,\n      md: 7,\n      lg: 7,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 11\n      }\n    }, __jsx(\"div\", {\n      className: \"avatar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 13\n      }\n    }, __jsx(Avatar, {\n      icon: __jsx(UserOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 23\n        }\n      }),\n      src: \"\",\n      size: 100,\n      shape: \"square\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 15\n      }\n    }, auth.fullname))), __jsx(Col, {\n      xs: 12,\n      md: 17,\n      lg: 17,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 11\n      }\n    }, __jsx(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 13\n      }\n    }, __jsx(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 15\n      }\n    }, t('username')), \": \", __jsx(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 39\n      }\n    }, auth.username)), __jsx(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 13\n      }\n    }, __jsx(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 13\n      }\n    }, t('fullname')), \": \", __jsx(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 37\n      }\n    }, auth.fullname)), __jsx(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 13\n      }\n    }, __jsx(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 15\n      }\n    }, t('email')), \": \", __jsx(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 36\n      }\n    }, auth.email ? auth.email : t(\"update\"))), __jsx(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 13\n      }\n    }, __jsx(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 15\n      }\n    }, t('phone')), \": \", __jsx(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 36\n      }\n    }, auth.phone ? auth.phone : t(\"update\")))))));\n  };\n\n  const renderTitle = title => {\n    return __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 7\n      }\n    }, title);\n  };\n\n  const renderItem = (title, link) => {\n    return {\n      value: title,\n      label: __jsx(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'space-between'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 9\n        }\n      }, title, __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }\n      }, link))\n    };\n  };\n\n  patients.map((item, index) => {\n    optionsPatients.push(renderItem(`${item.fullname}`, __jsx(\"a\", {\n      style: {\n        float: 'right'\n      },\n      href: `patients/${item.id}/edit`,\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 7\n      }\n    }, \" Xem chi ti\\u1EBFt \")));\n  });\n  beds.map((item, index) => {\n    optionsBeds.push(renderItem(`${item.roomCode} - ${item.bedId}`, __jsx(\"a\", {\n      style: {\n        float: 'right'\n      },\n      href: `beds/${item.id}/edit`,\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 7\n      }\n    }, \" Xem chi ti\\u1EBFt \")));\n  });\n  users.map((item, index) => {\n    optionsUsers.push(renderItem(`${item.fullname} - ${item.username}`, __jsx(\"a\", {\n      style: {\n        float: 'right'\n      },\n      href: `users/${item.id}/edit`,\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 7\n      }\n    }, \" Xem chi ti\\u1EBFt \")));\n  });\n  const options = [{\n    label: renderTitle(t('patient')),\n    options: optionsPatients\n  }, {\n    label: renderTitle(t('bed')),\n    options: optionsBeds\n  }, {\n    label: renderTitle(t('employee')),\n    options: optionsUsers\n  }];\n\n  const renderSearch = () => {\n    return __jsx(\"div\", {\n      style: {\n        height: \"900px\",\n        display: 'inline'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 7\n      }\n    }, __jsx(AutoComplete, {\n      dropdownClassName: \"certain-category-search-dropdown\",\n      dropdownMatchSelectWidth: 350 // width dropdown\n      ,\n      onChange: value => onChangeSearch(value),\n      onBlur: () => onBlurSearch(),\n      style: {\n        width: 350\n      } // width input Search\n      ,\n      options: options,\n      disabled: props.disabledSearch ? true : false // disable input search\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }\n    }, __jsx(Input.Search, {\n      size: \"large\",\n      placeholder: t(\"search\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 11\n      }\n    })));\n  };\n\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 10\n    }\n  }, __jsx(Header, {\n    className: headerClass,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 5\n    }\n  }, collapsed ? __jsx(MenuUnfoldOutlined, _extends({\n    style: {\n      color: \"#fff\"\n    }\n  }, menuIconProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 9\n    }\n  })) : __jsx(MenuFoldOutlined, _extends({\n    style: {\n      color: \"#fff\"\n    }\n  }, menuIconProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 9\n    }\n  })), __jsx(Popover, {\n    placement: \"bottom\",\n    title: t('personalInfo'),\n    content: accountPopup(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 7\n    }\n  }, __jsx(Button, {\n    icon: __jsx(UserOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 23\n      }\n    }),\n    type: \"link\",\n    className: \"header-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 9\n    }\n  })), renderSearch(), __jsx(\"div\", {\n    className: \"rightContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 7\n    }\n  }, renderRightContent())), renderConfirmDialog());\n};\n\nexport default AdminHeader;","map":{"version":3,"sources":["E:/DATN/nursinghome/themes/layouts/admin/Header.tsx"],"names":["React","createRef","useEffect","useState","Menu","Layout","Avatar","Button","Input","Popover","Row","Col","AutoComplete","MenuUnfoldOutlined","MenuFoldOutlined","PoweroffOutlined","SettingFilled","UserOutlined","ConfirmDialog","UserService","PatientService","BedService","useBaseHook","Cookies","to","_","Header","SubMenu","Search","AdminHeader","props","t","notify","redirect","setStore","getAuth","getStore","getCookies","getData","userService","patientService","bedService","patients","setPatients","beds","setBeds","users","setUsers","modalVisible","setModalVisible","auth","cookieObject","confirmRef","handleClickMenu","e","redirectLogin","cookies","remove","path","token","user","optionsPatients","optionsBeds","optionsUsers","onChangeSearch","value","filterPatients","filters","field","operator","sorting","pageSize","page","filterBeds","filterUsers","errUsers","index","dataUsers","get","length","errPatients","dataPatients","errBeds","dataBeds","onBlurSearch","renderConfirmDialog","onChangePassword","data","console","log","values","id","password","error","result","updatePassword","code","message","validatorPassword","getFieldValue","validator","rule","Promise","resolve","reject","renderChangePassModal","formChangePassword","Form","useForm","repassword","submit","span","required","renderRightContent","current","show","collapsed","onCollapseChange","menuIconProps","className","onClick","headerClass","accountPopup","width","fullname","username","email","phone","renderTitle","title","renderItem","link","label","display","justifyContent","map","item","push","float","roomCode","bedId","options","renderSearch","height","disabledSearch","color"],"mappings":"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","sourcesContent":["import React, { Fragment, createRef, useEffect, useState } from 'react';\r\nimport { Menu, Layout, Avatar, Button, Input, Popover, Descriptions, Row, Col, Tooltip, AutoComplete } from 'antd';\r\nimport { \r\n  MenuUnfoldOutlined, MenuFoldOutlined, PoweroffOutlined, \r\n  SettingFilled, UserOutlined\r\n} from '@ant-design/icons'\r\nimport ConfirmDialog from 'themes/components/Dialogs/ConfirmDialog';\r\nimport UserService from  \"themes/services/api/UserService\"\r\nimport PatientService from  \"themes/services/api/PatientService\"\r\nimport BedService from  \"themes/services/api/BedService\"\r\nimport useBaseHook from 'themes/hooks/BaseHooks'\r\nimport Cookies from 'universal-cookie'\r\nimport to from 'await-to-js'\r\nimport moment from 'moment'\r\nimport _ from 'lodash'\r\n\r\nconst { Header } = Layout;\r\nconst { SubMenu } = Menu\r\nconst { Search } = Input\r\n\r\nconst AdminHeader = (props: any) => {\r\n  const { t, notify, redirect, setStore, getAuth, getStore, getCookies, getData  } = useBaseHook();\r\n  const userService = new UserService()\r\n  const patientService = new PatientService()\r\n  const bedService = new BedService()\r\n  const [patients, setPatients] = React.useState([])\r\n  const [beds, setBeds] = React.useState([])\r\n  const [users, setUsers] = React.useState([])\r\n  const [modalVisible, setModalVisible] = useState(false) // change password\r\n  const auth = getAuth() || {};\r\n  const cookieObject = getCookies()\r\n  const confirmRef = createRef<ConfirmDialog>()\r\n  const handleClickMenu = (e: any) => { }\r\n  const redirectLogin = async () => {\r\n    const cookies = new Cookies(cookieObject)\r\n    await cookies.remove('token', { path: '/'})\r\n    await cookies.remove('user', { path: '/'})\r\n    return await redirect('frontend.admin.login')\r\n  }\r\n  useEffect(() => {\r\n    if (!cookieObject.token || !cookieObject.user) {\r\n      redirect('frontend.admin.login')\r\n    }\r\n  }, [])\r\n  \r\n  let optionsPatients: any = []\r\n  let optionsBeds: any = []\r\n  let optionsUsers: any = []\r\n  \r\n  const onChangeSearch = async (value: any) => {\r\n    let filterPatients = {\r\n      filters: [{\r\n        field: \"fullname\",\r\n        operator: \"contains\",\r\n        value: value\r\n      }],\r\n      sorting: [],\r\n      pageSize: 5,\r\n      page: 0\r\n    }\r\n    let filterBeds = {\r\n      filters: [{\r\n        field: \"roomCode\",\r\n        operator: \"contains\",\r\n        value: value\r\n      }],\r\n      sorting: [],\r\n      pageSize: 5,\r\n      page: 0\r\n    }\r\n    let filterUsers = {\r\n      filters: [{\r\n        field: \"fullname\",\r\n        operator: \"contains\",\r\n        value: value\r\n      }],\r\n      sorting: [],\r\n      pageSize: 5,\r\n      page: 0\r\n    }\r\n    let [errUsers, users]: any[] = await to(userService.index(filterUsers))\r\n    let dataUsers = _.get(users, \"data\", [])\r\n    if(dataUsers.length){\r\n      setUsers(dataUsers)\r\n    }\r\n\r\n    let [errPatients, patients]: any[] = await to(patientService.index(filterPatients))\r\n    let dataPatients = _.get(patients, \"data\", [])\r\n    if(dataPatients.length){\r\n      setPatients(dataPatients)\r\n    }\r\n\r\n    let [errBeds, beds]: any[] = await to(bedService.index(filterBeds))\r\n    let dataBeds = _.get(beds, \"data\", [])\r\n    if(dataBeds.length){\r\n      setBeds(dataBeds)\r\n    }\r\n\r\n    \r\n    \r\n  }\r\n  const onBlurSearch = () => {\r\n    setUsers([])\r\n    setBeds([])\r\n    setPatients([])\r\n  }\r\n  \r\n  const renderConfirmDialog = () => {\r\n    return (\r\n      <ConfirmDialog\r\n        ref={confirmRef}\r\n        onSubmit={redirectLogin}\r\n        title={t('signout')}\r\n        content={t('message.signoutConfirm')}\r\n      />\r\n    )\r\n  }\r\n\r\n  const onChangePassword = async (data: any): Promise<void> => {\r\n    console.log(data)\r\n    setModalVisible(false)\r\n    let values = { id: auth.id, password: data.password }\r\n\r\n    let [error, result]: any[] = await to(userService.updatePassword(values));\r\n    if (error) {\r\n      return notify(t(`errors:${error.code}`), t(error.message), 'error')\r\n    }\r\n\r\n    notify(t(\"message.recordUpdated\"))\r\n  }\r\n\r\n  //validate input password\r\n  const validatorPassword = ({ getFieldValue }: { getFieldValue: Function }) => ({\r\n    validator: (rule: any, value: any) => {\r\n      if (!value || getFieldValue('password') === value) {\r\n        return Promise.resolve();\r\n      }\r\n      return Promise.reject(t('form.rePassword'));\r\n    }\r\n  })\r\n\r\n  const renderChangePassModal = () => {\r\n    const [formChangePassword] = Form.useForm()\r\n    return (<Form form={formChangePassword} name=\"formChangePassword\"\r\n      initialValues={{\r\n        password: \"\",\r\n        repassword: \"\",\r\n      }}\r\n      onFinish={onChangePassword}\r\n    >\r\n      <Modal\r\n        closable={false}\r\n        visible={modalVisible}\r\n        onCancel={() => setModalVisible(false)}\r\n        onOk={() => { formChangePassword.submit(); }}\r\n      >\r\n        <Form.Item\r\n          label={t(\"password\")}\r\n          labelCol={{ span: 5 }}\r\n          wrapperCol={{ span: 19 }}\r\n          name=\"password\"\r\n          rules={[\r\n            { required: true, message: t('form.required') }\r\n          ]}\r\n        >\r\n          <Input.Password\r\n            placeholder={t(\"password\")}\r\n            type=\"password\"\r\n            autoFocus={true}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label={t(\"rePassword\")}\r\n          labelCol={{ span: 5 }}\r\n          wrapperCol={{ span: 19 }}\r\n          name=\"repassword\"\r\n          rules={[\r\n            { required: true, message: t('form.required') },\r\n            validatorPassword\r\n          ]}\r\n        >\r\n          <Input.Password\r\n            placeholder={t(\"rePassword\")}\r\n          />\r\n        </Form.Item>\r\n      </Modal>\r\n    </Form>\r\n    )\r\n  }\r\n\r\n  const renderRightContent = () => {\r\n    return <div>\r\n      <Button icon={<PoweroffOutlined />} type=\"link\" className=\"header-btn\" onClick={() => { if (confirmRef.current) confirmRef.current.show() }}></Button>\r\n      <Button icon={<SettingFilled spin />} type=\"link\" className=\"header-btn\"></Button>\r\n    </div>\r\n  }\r\n\r\n  const { collapsed, onCollapseChange } = props\r\n  const menuIconProps = {\r\n    className: \"trigger\",\r\n    onClick: () => onCollapseChange(!collapsed)\r\n  }\r\n  let headerClass = \"header\"\r\n  if (collapsed) headerClass += ' collapsed'\r\n\r\n  const accountPopup = () => {\r\n    return <React.Fragment>\r\n      <div style={{ width: \"400px\" }}>\r\n        <Row gutter={[8, 8]}>\r\n          <Col xs={12} md={7} lg={7}> \r\n            <div className=\"avatar\">\r\n              <Avatar \r\n                icon={<UserOutlined />} \r\n                src={\"\"} size={100} shape=\"square\">\r\n                {auth.fullname}\r\n              </Avatar>\r\n              {/* <Avatar size={64} icon={<UserOutlined />} /> */}\r\n            </div>\r\n          </Col> \r\n          <Col xs={12} md={17} lg={17}>\r\n            <Row>\r\n              <b>{t('username')}</b>: <i>{auth.username}</i>\r\n            </Row>\r\n            <Row>\r\n            <b>{t('fullname')}</b>: <i>{auth.fullname}</i>\r\n            </Row>\r\n            <Row>\r\n              <b>{t('email')}</b>: <i>{auth.email ? auth.email : t(\"update\")}</i>\r\n            </Row>\r\n            <Row>\r\n              <b>{t('phone')}</b>: <i>{auth.phone ? auth.phone : t(\"update\")}</i>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </React.Fragment>\r\n  };\r\n  const renderTitle = (title: string) => {\r\n    return (\r\n      <span>\r\n        {title}\r\n        {/* <a\r\n          style={{ float: 'right' }}\r\n          href=\"https://www.google.com/search?q=antd\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          more\r\n        </a> */}\r\n      </span>\r\n    );\r\n  };\r\n  const renderItem = (title: string, link: any) => {\r\n    return {\r\n      value: title,\r\n      label: (\r\n        <div\r\n          style={{\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n          }}\r\n        >\r\n          {title}\r\n          <span>\r\n            {link}\r\n          </span>\r\n        </div>\r\n      ),\r\n    };\r\n  };\r\n\r\n  patients.map((item: any, index: number) => {\r\n    optionsPatients.push(renderItem(\r\n      `${item.fullname}`, \r\n      <a style={{ float: 'right' }} href={`patients/${item.id}/edit`} target=\"_blank\" rel=\"noopener noreferrer\"> Xem chi tiết </a>\r\n    ))\r\n  })\r\n  beds.map((item: any, index: number) => {\r\n    optionsBeds.push(renderItem(\r\n      `${item.roomCode} - ${item.bedId}`, \r\n      <a style={{ float: 'right' }} href={`beds/${item.id}/edit`} target=\"_blank\" rel=\"noopener noreferrer\"> Xem chi tiết </a>\r\n    ))\r\n  })\r\n  users.map((item: any, index: number) => {\r\n    optionsUsers.push(renderItem(\r\n      `${item.fullname} - ${item.username}`, \r\n      <a style={{ float: 'right' }} href={`users/${item.id}/edit`} target=\"_blank\" rel=\"noopener noreferrer\"> Xem chi tiết </a>\r\n    ))\r\n  })\r\n \r\n  const options = [\r\n    {\r\n      label: renderTitle(t('patient')),\r\n      options: optionsPatients,\r\n    },\r\n    {\r\n      label: renderTitle(t('bed')),\r\n      options: optionsBeds\r\n    },\r\n    {\r\n      label: renderTitle(t('employee')),\r\n      options: optionsUsers\r\n    }\r\n  ];\r\n\r\n  const renderSearch = () => {\r\n    return (\r\n      <div style={{ height: \"900px\", display: 'inline' }}>\r\n        <AutoComplete\r\n          dropdownClassName=\"certain-category-search-dropdown\"\r\n          dropdownMatchSelectWidth={350} // width dropdown\r\n          onChange={(value: any) => onChangeSearch(value)}\r\n          onBlur={() => onBlurSearch()}\r\n          style={{ width: 350 }} // width input Search\r\n          options={options}\r\n          disabled = {props.disabledSearch? true : false } // disable input search\r\n        >\r\n          <Input.Search size=\"large\" placeholder={t(\"search\")} />\r\n        </AutoComplete>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return <React.Fragment>\r\n    <Header\r\n      className={headerClass}>\r\n      {collapsed \r\n      ? <MenuUnfoldOutlined style={{ color: \"#fff\" }} {...menuIconProps} /> \r\n      : <MenuFoldOutlined style={{ color: \"#fff\" }} {...menuIconProps} />}\r\n      \r\n      <Popover placement=\"bottom\" title={t('personalInfo')} content={accountPopup()}>\r\n        <Button icon={<UserOutlined />} type=\"link\" className=\"header-btn\"></Button>\r\n      </Popover>\r\n      \r\n      {/* <Button icon={<BellOutlined />} type=\"link\" className=\"header-btn\"></Button> */}\r\n      {/* <Search\r\n        placeholder=\"Tìm kiếm...\"\r\n        onSearch={value => console.log(value)}\r\n        className=\"header-search\"\r\n      /> */}\r\n      {renderSearch()}\r\n      <div className='rightContainer'>{renderRightContent()}</div>\r\n\r\n    </Header>\r\n    {renderConfirmDialog()}\r\n  </React.Fragment>\r\n}\r\n\r\nexport default AdminHeader"]},"metadata":{},"sourceType":"module"}