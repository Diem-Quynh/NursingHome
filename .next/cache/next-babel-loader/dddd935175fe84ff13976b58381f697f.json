{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\DATN\\\\nursinghome\\\\pages\\\\admin\\\\patients\\\\create.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport Layout from 'themes/layouts/Admin';\nimport { Button, Form, Input, Select, Radio, DatePicker } from 'antd';\nimport PatientService from 'themes/services/api/PatientService';\nimport BedService from 'themes/services/api/BedService';\nimport _ from 'lodash';\nimport to from 'await-to-js';\nimport useBaseHook from 'themes/hooks/BaseHooks';\nimport { DeleteFilled, LeftCircleFilled } from '@ant-design/icons';\nvar Option = Select.Option;\nvar formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 4\n    }\n  },\n  wrapperCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 18\n    }\n  }\n};\n\nvar Create = function Create(_ref) {\n  _s();\n\n  var beds = _ref.beds;\n\n  var _useBaseHook = useBaseHook(),\n      t = _useBaseHook.t,\n      notify = _useBaseHook.notify,\n      redirect = _useBaseHook.redirect,\n      setStore = _useBaseHook.setStore,\n      getAuth = _useBaseHook.getAuth,\n      getStore = _useBaseHook.getStore;\n\n  var _useState = useState(false),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  var _Form$useForm = Form.useForm(),\n      _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n      form = _Form$useForm2[0];\n\n  var patientService = new PatientService(); //submit form\n\n  var onFinish = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values) {\n      var _yield$to, _yield$to2, error, result;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log(values);\n              setLoading(true);\n              _context.next = 4;\n              return to(patientService.create(values));\n\n            case 4:\n              _yield$to = _context.sent;\n              _yield$to2 = _slicedToArray(_yield$to, 2);\n              error = _yield$to2[0];\n              result = _yield$to2[1];\n              setLoading(false);\n\n              if (!error) {\n                _context.next = 11;\n                break;\n              }\n\n              return _context.abrupt(\"return\", notify(t(\"errors:\".concat(error.code)), t(error.message), 'error'));\n\n            case 11:\n              notify(t(\"message.recordCreated\"));\n              redirect(\"frontend.admin.patients.index\");\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onFinish(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }(); //render option\n\n\n  var renderOption = function renderOption() {\n    var result = [];\n    beds.map(function (item) {\n      result.push(__jsx(Option, {\n        value: item.id,\n        key: item.id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 7\n        }\n      }, item.roomCode, \" - \", item.bedId, \" - \", item.status ? t('beds.full') : t('beds.empty')));\n    });\n    return result;\n  };\n\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 10\n    }\n  }, __jsx(\"div\", {\n    className: \"content\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, __jsx(Form, _extends({}, formItemLayout, {\n    form: form,\n    name: \"createPatient\",\n    initialValues: {\n      fullname: \"\",\n      birthday: \"\",\n      gender: \"\",\n      address: \"\",\n      cardId: \"\",\n      phone: \"\",\n      medicalHistory: \"\",\n      dateIn: \"\",\n      dateOut: \"\",\n      bedId: undefined\n    },\n    onFinish: onFinish,\n    scrollToFirstError: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }), __jsx(Form.Item, {\n    label: t(\"fullname\"),\n    name: \"fullname\",\n    rules: [{\n      required: true,\n      message: t('form.required')\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, __jsx(Input, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  })), __jsx(Form.Item, {\n    label: t(\"birthday\"),\n    name: \"birthday\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, __jsx(DatePicker, {\n    format: 'YYYY-MM-DD',\n    showTime: false,\n    placeholder: t('placeholder.date'),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  })), __jsx(Form.Item, {\n    label: t(\"gender\"),\n    name: \"gender\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, __jsx(Radio.Group, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, __jsx(Radio, {\n    value: 0,\n    key: 0,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, t(\"male\")), __jsx(Radio, {\n    value: 1,\n    key: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, t(\"female\")))), __jsx(Form.Item, {\n    label: t(\"address\"),\n    name: \"address\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, __jsx(Input, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  })), __jsx(Form.Item, {\n    label: t(\"cardId\"),\n    name: \"cardId\",\n    rules: [{\n      max: 12,\n      message: t('form.maxLength', {\n        length: 12\n      })\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, __jsx(Input, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  })), __jsx(Form.Item, {\n    label: t(\"phone\"),\n    name: \"phone\",\n    rules: [{\n      max: 12,\n      message: t('form.maxLength', {\n        length: 12\n      })\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, __jsx(Input, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  })), __jsx(Form.Item, {\n    label: t(\"patients.medicalHistory\"),\n    name: \"medicalHistory\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, __jsx(Input, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  })), __jsx(Form.Item, {\n    label: t(\"patients.dateIn\"),\n    name: \"dateIn\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, __jsx(DatePicker, {\n    format: 'YYYY-MM-DD',\n    showTime: false,\n    placeholder: t('placeholder.date'),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  })), __jsx(Form.Item, {\n    label: t(\"patients.dateOut\"),\n    name: \"dateOut\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }, __jsx(DatePicker, {\n    format: 'YYYY-MM-DD',\n    showTime: false,\n    placeholder: t('placeholder.date'),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }\n  })), __jsx(Form.Item, {\n    label: t(\"bed\"),\n    name: \"bedId\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }\n  }, __jsx(Select, {\n    showSearch: true,\n    placeholder: t('placeholder.bed'),\n    filterOption: function filterOption(input, option) {\n      return option.children[0].toLowerCase().indexOf(input.toLowerCase()) >= 0;\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 11\n    }\n  }, renderOption())), __jsx(Form.Item, {\n    wrapperCol: {\n      span: 24\n    },\n    style: {\n      textAlign: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    onClick: function onClick() {\n      return redirect(\"frontend.admin.patients.index\");\n    },\n    style: {\n      marginRight: 8\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 11\n    }\n  }, __jsx(LeftCircleFilled, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }\n  }), \" \", t('cancel')), __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: loading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 11\n    }\n  }, __jsx(DeleteFilled, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }\n  }), \" \", t('submit'))))));\n};\n\n_s(Create, \"cpCzyyZI/YlEH83DeOHrkqmh8e0=\", false, function () {\n  return [useBaseHook, Form.useForm];\n});\n\n_c = Create;\n\nCreate.getInitialProps = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(ctx) {\n    var bedService, _yield$to3, _yield$to4, error, beds;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            bedService = new BedService(ctx);\n            _context2.next = 3;\n            return to(bedService.index({\n              pageSize: -1\n            }));\n\n          case 3:\n            _yield$to3 = _context2.sent;\n            _yield$to4 = _slicedToArray(_yield$to3, 2);\n            error = _yield$to4[0];\n            beds = _yield$to4[1];\n            return _context2.abrupt(\"return\", {\n              namespacesRequired: ['common', 'pages', 'menu', 'errors'],\n              error: error,\n              beds: _.get(beds, \"data\", [])\n            });\n\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x2) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nCreate.permissions = {\n  \"admin.patients\": \"C\",\n  \"receptionist.patients\": \"C\"\n};\nexport default Create;\n\nvar _c;\n\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"sources":["E:/DATN/nursinghome/pages/admin/patients/create.tsx"],"names":["React","useState","Layout","Button","Form","Input","Select","Radio","DatePicker","PatientService","BedService","_","to","useBaseHook","DeleteFilled","LeftCircleFilled","Option","formItemLayout","labelCol","xs","span","sm","wrapperCol","Create","beds","t","notify","redirect","setStore","getAuth","getStore","loading","setLoading","useForm","form","patientService","onFinish","values","console","log","create","error","result","code","message","renderOption","map","item","push","id","roomCode","bedId","status","fullname","birthday","gender","address","cardId","phone","medicalHistory","dateIn","dateOut","undefined","required","max","length","input","option","children","toLowerCase","indexOf","textAlign","marginRight","getInitialProps","ctx","bedService","index","pageSize","namespacesRequired","get","permissions"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport Layout from 'themes/layouts/Admin'\r\nimport { Button, Row, Col, Form, Input, Select, InputNumber, Radio, DatePicker } from 'antd';\r\nimport PatientService from 'themes/services/api/PatientService';\r\nimport BedService from 'themes/services/api/BedService';\r\nimport _ from 'lodash';\r\nimport to from 'await-to-js'\r\nimport useBaseHook from 'themes/hooks/BaseHooks'\r\nimport { DeleteFilled, LeftCircleFilled } from '@ant-design/icons';\r\n\r\nconst { Option } = Select\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 4 },\r\n  },\r\n  wrapperCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 18 },\r\n  },\r\n};\r\n\r\nconst Create = ({ beds }: { beds: Bed[] }) => {\r\n  const { t, notify, redirect, setStore, getAuth, getStore } = useBaseHook();\r\n  const [loading, setLoading] = useState(false);\r\n  const [form] = Form.useForm();\r\n  const patientService = new PatientService()\r\n  //submit form\r\n  const onFinish = async (values: any): Promise<void> => {\r\n    console.log(values)\r\n    setLoading(true)\r\n    let [error, result]: any[] = await to(patientService.create(values));\r\n    setLoading(false)\r\n\r\n    if (error) {\r\n      return notify(t(`errors:${error.code}`), t(error.message), 'error')\r\n    }\r\n    notify(t(\"message.recordCreated\"))\r\n    redirect(\"frontend.admin.patients.index\")\r\n  }\r\n\r\n  //render option\r\n  const renderOption = (): JSX.Element[] => {\r\n    let result: JSX.Element[] = [];\r\n    beds.map(item => {\r\n      result.push(\r\n      <Option value={item.id} key={item.id}>{item.roomCode} - {item.bedId} - {item.status?t('beds.full'):t('beds.empty')}</Option>\r\n      )\r\n    })\r\n    return result;\r\n  }\r\n  \r\n  return <Layout>\r\n    <div className=\"content\">\r\n      <Form\r\n        {...formItemLayout}\r\n        form={form}\r\n        name=\"createPatient\"\r\n        initialValues={{\r\n          fullname: \"\",\r\n          birthday: \"\",\r\n          gender: \"\",\r\n          address: \"\",\r\n          cardId: \"\",\r\n          phone: \"\",\r\n          medicalHistory: \"\",\r\n          dateIn: \"\",\r\n          dateOut: \"\",\r\n          bedId: undefined\r\n        }}\r\n        onFinish={onFinish}\r\n        scrollToFirstError\r\n      >\r\n        <Form.Item\r\n          label={t(\"fullname\")}\r\n          name=\"fullname\"\r\n          rules={[\r\n            { required: true, message: t('form.required') },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={t(\"birthday\")}\r\n          name=\"birthday\"\r\n        >\r\n          <DatePicker format={'YYYY-MM-DD'} showTime={false} placeholder={t('placeholder.date')} />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={t(\"gender\")}\r\n          name=\"gender\"\r\n        >\r\n          <Radio.Group>\r\n            <Radio value={0} key={0}>{t(\"male\")}</Radio>\r\n            <Radio value={1} key={1}>{t(\"female\")}</Radio>\r\n          </Radio.Group>\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={t(\"address\")}\r\n          name=\"address\"\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={t(\"cardId\")}\r\n          name=\"cardId\"\r\n          rules={[\r\n            { max: 12, message: t('form.maxLength', { length: 12 }) }\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={t(\"phone\")}\r\n          name=\"phone\"\r\n          rules={[\r\n            { max: 12, message: t('form.maxLength', { length: 12 }) }\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={t(\"patients.medicalHistory\")}\r\n          name=\"medicalHistory\"\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={t(\"patients.dateIn\")}\r\n          name=\"dateIn\"\r\n        >\r\n          <DatePicker format={'YYYY-MM-DD'} showTime={false} placeholder={t('placeholder.date')} />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={t(\"patients.dateOut\")}\r\n          name=\"dateOut\"\r\n        >\r\n          <DatePicker format={'YYYY-MM-DD'} showTime={false} placeholder={t('placeholder.date')} />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={t(\"bed\")}\r\n          name=\"bedId\"\r\n        >\r\n          <Select\r\n            showSearch\r\n            placeholder={t('placeholder.bed')}\r\n            filterOption={(input: any, option: any) => {\r\n              return option.children[0].toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n            }}\r\n          >\r\n            {renderOption()}\r\n          </Select>\r\n        </Form.Item>\r\n\r\n        <Form.Item wrapperCol={{ span: 24 }} style={{textAlign: \"center\"}}>\r\n          <Button onClick={() => redirect(\"frontend.admin.patients.index\")} style={{ marginRight: 8}}>\r\n            <LeftCircleFilled /> {t('cancel')}\r\n          </Button>\r\n          <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\r\n            <DeleteFilled /> {t('submit')}\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  </Layout>\r\n}\r\n\r\nCreate.getInitialProps = async (ctx: any) => {\r\n  const bedService = new BedService(ctx)\r\n  const [error, beds] = await to(bedService.index({ pageSize: -1 }));\r\n  return {\r\n    namespacesRequired: ['common', 'pages','menu','errors'],\r\n    error: error,\r\n    beds: _.get(beds, \"data\", []),\r\n  }\r\n}\r\nCreate.permissions = {\r\n  \"admin.patients\": \"C\",\r\n  \"receptionist.patients\": \"C\"\r\n};\r\nexport default Create"]},"metadata":{},"sourceType":"module"}