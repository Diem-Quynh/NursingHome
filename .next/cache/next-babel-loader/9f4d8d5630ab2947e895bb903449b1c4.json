{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { Input, Select, InputNumber, Button } from 'antd';\nimport _ from 'lodash';\nconst {\n  Option\n} = Select;\n\nclass FilterInput extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      value: _.get(this.props.column, \"filteredValue[0].value\"),\n      operator: this.props.operator || \"contains\"\n    });\n\n    _defineProperty(this, \"onChange\", e => {\n      this.setState({\n        value: e.target.value\n      });\n    });\n\n    _defineProperty(this, \"clear\", () => {\n      this.setState({\n        value: ''\n      }, () => {\n        this.onSubmit();\n      });\n    });\n\n    _defineProperty(this, \"onSubmit\", () => {\n      const {\n        column,\n        confirm\n      } = this.props;\n      let filters = [];\n\n      if (this.state.value) {\n        filters.push({\n          field: column.field,\n          operator: this.state.operator,\n          value: this.state.value\n        });\n      }\n\n      confirm(filters);\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (_.get(this.props.column, \"filteredValue[0].value\") != _.get(prevProps.column, \"filteredValue[0].value\")) {\n      this.setState({\n        value: _.get(this.props.column, \"filteredValue[0].value\")\n      });\n    }\n\n    if (this.visibleSearch != this.props.column.visibleSearch) {\n      this.visibleSearch = this.props.column.visibleSearch;\n      this.refInput.input.select();\n    }\n  }\n\n  renderOperator() {\n    const {\n      messages = {},\n      hideOperator,\n      operator\n    } = this.props;\n    if (hideOperator) return;\n    let operators = [{\n      value: \"contains\",\n      label: messages['contains'] || \"Contains\"\n    }, {\n      value: \"=\",\n      label: messages['equal'] || \"Equals\"\n    }, {\n      value: \"startWiths\",\n      label: messages['startWiths'] || \"StartWiths\"\n    }, {\n      value: \"endWiths\",\n      label: messages['endWiths'] || \"EndWiths\"\n    }];\n\n    if (this.props.type == \"number\") {\n      operators = [{\n        value: \"=\",\n        label: '='\n      }, {\n        value: \">\",\n        label: '>'\n      }, {\n        value: \"<\",\n        label: '<'\n      }, {\n        value: \">=\",\n        label: '>='\n      }, {\n        value: \"<=\",\n        label: '<='\n      }];\n    }\n\n    const defaultOperator = operator || operators[0].value;\n    return __jsx(Select, {\n      defaultValue: defaultOperator,\n      style: {\n        width: 90\n      },\n      onChange: value => this.setState({\n        operator: value\n      })\n    }, operators.map(operator => __jsx(Option, {\n      value: operator.value,\n      key: operator.value\n    }, operator.label)));\n  }\n\n  render() {\n    const _this$props = this.props,\n          {\n      confirm,\n      column,\n      hideOperator,\n      type\n    } = _this$props,\n          otherProps = _objectWithoutProperties(_this$props, [\"confirm\", \"column\", \"hideOperator\", \"type\"]);\n\n    let Component = Input;\n    if (type == \"number\") Component = InputNumber;\n    return __jsx(\"div\", {\n      style: {\n        padding: 8\n      }\n    }, __jsx(Component, _extends({}, otherProps, {\n      addonBefore: this.renderOperator(),\n      ref: ref => this.refInput = ref,\n      value: this.state.value,\n      onChange: this.onChange,\n      onPressEnter: this.onSubmit,\n      allowClear: true,\n      style: {\n        width: \"250px\",\n        marginBottom: 8,\n        display: 'block'\n      }\n    })), __jsx(Button, {\n      onClick: this.clear,\n      danger: true\n    }, \"Clear\"));\n  }\n\n}\n\nexport default FilterInput;","map":{"version":3,"sources":["E:/nursinghome_github/themes/components/Table/SearchComponents/Input.jsx"],"names":["React","Input","Select","InputNumber","Button","_","Option","FilterInput","Component","value","get","props","column","operator","e","setState","target","onSubmit","confirm","filters","state","push","field","componentDidUpdate","prevProps","visibleSearch","refInput","input","select","renderOperator","messages","hideOperator","operators","label","type","defaultOperator","width","map","render","otherProps","padding","ref","onChange","marginBottom","display","clear"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Input, Select, InputNumber, Button } from 'antd';\r\nimport _ from 'lodash'\r\nconst { Option } = Select\r\n\r\nclass FilterInput extends React.Component {\r\n    state = {\r\n        value: _.get(this.props.column, \"filteredValue[0].value\"),\r\n        operator: this.props.operator || \"contains\"\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (_.get(this.props.column, \"filteredValue[0].value\") != _.get(prevProps.column, \"filteredValue[0].value\")) {\r\n            this.setState({\r\n                value: _.get(this.props.column, \"filteredValue[0].value\")\r\n            })\r\n        }\r\n        if (this.visibleSearch != this.props.column.visibleSearch) {\r\n            this.visibleSearch = this.props.column.visibleSearch\r\n            this.refInput.input.select()\r\n        }\r\n    }\r\n    onChange = (e) => {\r\n        this.setState({ value: e.target.value })\r\n    }\r\n\r\n    clear = () => {\r\n        this.setState({value:''}, () => {this.onSubmit()})\r\n    }\r\n\r\n    onSubmit = () => {\r\n        const { column, confirm } = this.props\r\n        let filters = [];\r\n        if (this.state.value) {\r\n            filters.push({\r\n                field: column.field,\r\n                operator: this.state.operator,\r\n                value: this.state.value\r\n            })\r\n        }\r\n        confirm(filters)\r\n    }\r\n\r\n    renderOperator() {\r\n        const { messages = {}, hideOperator, operator } = this.props\r\n        \r\n        if (hideOperator) return\r\n        let operators = [\r\n            { value: \"contains\", label: messages['contains'] || \"Contains\" },\r\n            { value: \"=\", label: messages['equal'] || \"Equals\" },\r\n            { value: \"startWiths\", label: messages['startWiths'] || \"StartWiths\" },\r\n            { value: \"endWiths\", label: messages['endWiths'] || \"EndWiths\" },\r\n        ]\r\n        if (this.props.type == \"number\") {\r\n            operators = [\r\n                { value: \"=\", label: '=' },\r\n                { value: \">\", label: '>' },\r\n                { value: \"<\", label: '<' },\r\n                { value: \">=\", label: '>=' },\r\n                { value: \"<=\", label: '<=' }\r\n\r\n            ]\r\n        }\r\n        const defaultOperator = operator || operators[0].value\r\n\r\n        return <Select defaultValue={defaultOperator} style={{ width: 90 }} onChange={value => this.setState({ operator: value })}>\r\n            {operators.map(operator => <Option value={operator.value} key={operator.value}>{operator.label}</Option>)}\r\n        </Select>\r\n    }\r\n\r\n    render() {\r\n        const { confirm, column, hideOperator, type, ...otherProps } = this.props\r\n        let Component = Input\r\n        if(type == \"number\") Component = InputNumber\r\n        return <div style={{ padding: 8 }}>\r\n            <Component\r\n                {...otherProps}\r\n                addonBefore={this.renderOperator()}\r\n                ref={ref => this.refInput = ref}\r\n                value={this.state.value}\r\n                onChange={this.onChange}\r\n                onPressEnter={this.onSubmit}\r\n                allowClear\r\n                style={{ width: \"250px\", marginBottom: 8, display: 'block' }}\r\n            />\r\n            <Button onClick={this.clear} danger >Clear</Button>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default FilterInput"]},"metadata":{},"sourceType":"module"}