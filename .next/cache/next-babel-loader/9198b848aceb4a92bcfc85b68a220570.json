{"ast":null,"code":"var _jsxFileName = \"E:\\\\DATN\\\\nursinghome\\\\pages\\\\admin\\\\userPermissions\\\\create.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useState } from 'react';\nimport Layout from 'themes/layouts/Admin';\nimport { Button, Form, Input, Select, Typography, Checkbox } from 'antd';\nimport UserPermissionService from 'themes/services/api/UserPermissionService';\nimport _ from 'lodash';\nimport to from 'await-to-js';\nimport useBaseHook from 'themes/hooks/BaseHooks';\nimport { LeftCircleFilled, SaveFilled } from '@ant-design/icons';\nconst {\n  Title,\n  Text\n} = Typography;\nconst {\n  Option\n} = Select;\nconst formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 4\n    }\n  },\n  wrapperCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 18\n    }\n  }\n};\n\nconst Create = () => {\n  const {\n    t,\n    notify,\n    redirect,\n    router\n  } = useBaseHook();\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const [form] = Form.useForm();\n  const permissionService = new UserPermissionService();\n  let perValue = 0; //submit form\n\n  const onFinish = async values => {\n    setLoading(true);\n    values.avalibleValue = perValue;\n    console.log(values);\n    let [error, result] = await to(permissionService.create(values));\n    setLoading(false);\n\n    if (error) {\n      return notify(t(`errors:${error.code}`), t(error.message), 'error');\n    }\n\n    notify(t(\"message.recordCreated\"));\n    redirect(\"frontend.admin.userPermissions.index\");\n  };\n\n  const options = [{\n    label: t(\"create\"),\n    value: 8\n  }, {\n    label: t(\"view\"),\n    value: 4\n  }, {\n    label: t(\"edit\"),\n    value: 2\n  }, {\n    label: t(\"delete\"),\n    value: 1\n  }];\n\n  const onChange = e => {\n    perValue = 0;\n\n    for (let x of e) {\n      perValue += x;\n    }\n  };\n\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 10\n    }\n  }, __jsx(\"div\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, __jsx(Form, _extends({}, formItemLayout, {\n    form: form,\n    name: \"createPermission\",\n    initialValues: {\n      key: \"\",\n      name: \"\",\n      description: \"\",\n      avalibleValue: 0\n    },\n    onFinish: onFinish,\n    scrollToFirstError: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }), __jsx(Form.Item, {\n    label: t(\"userPermissions.key\"),\n    name: \"key\",\n    rules: [{\n      required: true,\n      message: t('form.required')\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, __jsx(Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  })), __jsx(Form.Item, {\n    label: t(\"userPermissions.name\"),\n    name: \"name\",\n    rules: [{\n      required: true,\n      message: t('form.required')\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, __jsx(Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  })), __jsx(Form.Item, {\n    label: t(\"description\"),\n    name: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, __jsx(Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  })), __jsx(Form.Item, {\n    label: t(\"userPermissions.avalibleValue\"),\n    name: \"avalibleValue\",\n    rules: [{\n      required: true,\n      message: t('form.required')\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, __jsx(Checkbox.Group, {\n    options: options,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  })), __jsx(Form.Item, {\n    wrapperCol: {\n      span: 24\n    },\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    onClick: () => router.back(),\n    style: {\n      marginRight: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }, __jsx(LeftCircleFilled, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }), \" \", t('cancel')), __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: loading,\n    style: {\n      marginRight: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }, __jsx(SaveFilled, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }), \" \", t('submit'))))));\n};\n\nCreate.getInitialProps = async ctx => {\n  const permissionService = new UserPermissionService(ctx);\n  const [error, permissions] = await to(permissionService.index({\n    pageSize: -1\n  }));\n  return {\n    namespacesRequired: ['common', 'pages', 'menu', 'errors'],\n    error: error,\n    groups: _.get(permissions, \"data\", [])\n  };\n};\n\nCreate.permissions = {\n  \"admin.userPermissions\": \"C\"\n};\nexport default Create;","map":{"version":3,"sources":["E:/DATN/nursinghome/pages/admin/userPermissions/create.tsx"],"names":["React","useState","Layout","Button","Form","Input","Select","Typography","Checkbox","UserPermissionService","_","to","useBaseHook","LeftCircleFilled","SaveFilled","Title","Text","Option","formItemLayout","labelCol","xs","span","sm","wrapperCol","Create","t","notify","redirect","router","loading","setLoading","form","useForm","permissionService","perValue","onFinish","values","avalibleValue","console","log","error","result","create","code","message","options","label","value","onChange","e","x","key","name","description","required","textAlign","back","marginRight","getInitialProps","ctx","permissions","index","pageSize","namespacesRequired","groups","get"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport Layout from 'themes/layouts/Admin'\r\nimport { Button, Row, Col, Form, Input, Select, Typography, Checkbox } from 'antd';\r\nimport UserPermissionService from 'themes/services/api/UserPermissionService';\r\nimport _ from 'lodash';\r\nimport to from 'await-to-js'\r\nimport useBaseHook from 'themes/hooks/BaseHooks'\r\nimport { LeftCircleFilled, SaveFilled } from '@ant-design/icons';\r\nimport BreadCrumb from 'themes/components/Breadcumb'\r\nconst { Title, Text } = Typography;\r\n\r\nconst { Option } = Select\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 4 },\r\n  },\r\n  wrapperCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 18 },\r\n  },\r\n};\r\n\r\n\r\nconst Create = () => {\r\n  const { t, notify, redirect, router } = useBaseHook();\r\n  const [loading, setLoading] = useState(false);\r\n  const [form] = Form.useForm();\r\n  const permissionService = new UserPermissionService()\r\n  let perValue = 0\r\n  //submit form\r\n  const onFinish = async (values: any): Promise<void> => {\r\n    setLoading(true)\r\n    values.avalibleValue = perValue\r\n    console.log(values)\r\n    let [error, result]: any[] = await to(permissionService.create(values));\r\n    setLoading(false)\r\n\r\n    if (error) {\r\n      return notify(t(`errors:${error.code}`), t(error.message), 'error')\r\n    }\r\n    notify(t(\"message.recordCreated\"))\r\n    redirect(\"frontend.admin.userPermissions.index\")\r\n  }\r\n\r\n  const options = [\r\n    { label: t(\"create\"), value: 8 },\r\n    { label: t(\"view\"), value: 4 },\r\n    { label: t(\"edit\"), value: 2 },\r\n    { label: t(\"delete\"), value: 1 }\r\n  ];\r\n\r\n  const onChange = (e:any) => {\r\n    perValue =0\r\n    for(let x of e){\r\n      perValue += x\r\n    }\r\n  }\r\n\r\n  return <Layout>\r\n    <div className=\"content\">\r\n      <Form\r\n        {...formItemLayout}\r\n        form={form}\r\n        name=\"createPermission\"\r\n        initialValues={{\r\n          key: \"\",\r\n          name: \"\",\r\n          description: \"\",\r\n          avalibleValue: 0\r\n        }}\r\n        onFinish={onFinish}\r\n        scrollToFirstError\r\n      >\r\n        <Form.Item\r\n          label={t(\"userPermissions.key\")}\r\n          name=\"key\"\r\n          rules={[\r\n            { required: true, message: t('form.required') },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label={t(\"userPermissions.name\")}\r\n          name=\"name\"\r\n          rules={[\r\n            { required: true, message: t('form.required') },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label={t(\"description\")}\r\n          name=\"description\"\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label={t(\"userPermissions.avalibleValue\")}\r\n          name=\"avalibleValue\"\r\n          rules={[\r\n            { required: true, message: t('form.required') },\r\n          ]}\r\n        >\r\n          <Checkbox.Group options={options} onChange={onChange} />\r\n        </Form.Item>\r\n\r\n        <Form.Item wrapperCol={{ span: 24 }} style={{ textAlign: \"center\" }}>\r\n          <Button onClick={() => router.back()} style={{ marginRight: 8 }}>\r\n            <LeftCircleFilled /> {t('cancel')}\r\n          </Button>\r\n          <Button type=\"primary\" htmlType=\"submit\" loading={loading} style={{ marginRight: 8 }}>\r\n            <SaveFilled /> {t('submit')}\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  </Layout>\r\n}\r\n\r\nCreate.getInitialProps = async (ctx: any) => {\r\n  const permissionService = new UserPermissionService(ctx)\r\n  const [error, permissions] = await to(permissionService.index({ pageSize: -1 }));\r\n  return {\r\n    namespacesRequired: ['common', 'pages', 'menu','errors'],\r\n    error: error,\r\n    groups: _.get(permissions, \"data\", []),\r\n  }\r\n}\r\nCreate.permissions = {\r\n  \"admin.userPermissions\": \"C\"\r\n}\r\nexport default Create"]},"metadata":{},"sourceType":"module"}