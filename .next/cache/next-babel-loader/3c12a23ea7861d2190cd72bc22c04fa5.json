{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\DATN\\\\nursinghome\\\\pages\\\\admin\\\\healthStatuses\\\\create.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport Layout from 'themes/layouts/Admin';\nimport { Button, Form, Input, Select, InputNumber, DatePicker } from 'antd';\nimport PatientService from 'themes/services/api/PatientService';\nimport UserService from 'themes/services/api/UserService';\nimport HealthService from 'themes/services/api/HealthStatusService';\nimport _ from 'lodash';\nimport to from 'await-to-js';\nimport useBaseHook from 'themes/hooks/BaseHooks';\nimport { DeleteFilled, LeftCircleFilled } from '@ant-design/icons';\nvar Option = Select.Option;\nvar formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 4\n    }\n  },\n  wrapperCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 18\n    }\n  }\n};\n\nvar Create = function Create(_ref) {\n  _s();\n\n  var patients = _ref.patients,\n      users = _ref.users;\n\n  var _useBaseHook = useBaseHook(),\n      t = _useBaseHook.t,\n      notify = _useBaseHook.notify,\n      redirect = _useBaseHook.redirect,\n      setStore = _useBaseHook.setStore,\n      getAuth = _useBaseHook.getAuth,\n      getStore = _useBaseHook.getStore;\n\n  var _useState = useState(false),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  var _Form$useForm = Form.useForm(),\n      _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n      form = _Form$useForm2[0];\n\n  var healthService = new HealthService(); //submit form\n\n  var onFinish = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values) {\n      var _yield$to, _yield$to2, error, result;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log(values);\n              setLoading(true);\n              _context.next = 4;\n              return to(healthService.create(values));\n\n            case 4:\n              _yield$to = _context.sent;\n              _yield$to2 = _slicedToArray(_yield$to, 2);\n              error = _yield$to2[0];\n              result = _yield$to2[1];\n              setLoading(false);\n\n              if (!error) {\n                _context.next = 11;\n                break;\n              }\n\n              return _context.abrupt(\"return\", notify(t(\"errors:\".concat(error.code)), t(error.message), 'error'));\n\n            case 11:\n              notify(t(\"message.recordCreated\"));\n              redirect(\"frontend.admin.healthStatuses.index\");\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onFinish(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }(); //render option\n\n\n  var renderOptionPatient = function renderOptionPatient() {\n    var result = [];\n    patients.map(function (item) {\n      result.push(__jsx(Option, {\n        value: item.id,\n        key: item.id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 7\n        }\n      }, item.code, \" - \", item.fullname, \" - \", item.roomCode, \" - \", item.bedCode));\n    });\n    return result;\n  };\n\n  var renderOptionUser = function renderOptionUser() {\n    var result = [];\n    users.map(function (item) {\n      result.push(__jsx(Option, {\n        value: item.id,\n        key: item.id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 7\n        }\n      }, item.code, \" - \", item.fullname));\n    });\n    return result;\n  };\n\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 10\n    }\n  }, __jsx(\"div\", {\n    className: \"content\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, __jsx(Form, _extends({}, formItemLayout, {\n    form: form,\n    name: \"createHealth\",\n    initialValues: {\n      patientId: undefined,\n      date: \"\",\n      weight: \"\",\n      bloodPressure: \"\",\n      bloodSugar: \"\",\n      heartRate: \"\",\n      doctorId: undefined,\n      note: \"\"\n    },\n    onFinish: onFinish,\n    scrollToFirstError: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }), __jsx(Form.Item, {\n    label: t(\"patient\"),\n    name: \"patientId\",\n    rules: [{\n      required: true,\n      message: t('form.required')\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, __jsx(Select, {\n    showSearch: true,\n    placeholder: t('placeholder.patient'),\n    filterOption: function filterOption(input, option) {\n      return option.children[0].toLowerCase().indexOf(input.toLowerCase()) >= 0;\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, renderOptionPatient())), __jsx(Form.Item, {\n    label: t(\"healthStatuses.date\"),\n    name: \"date\",\n    rules: [{\n      required: true,\n      message: t('form.required')\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, __jsx(DatePicker, {\n    format: 'YYYY-MM-DD',\n    showTime: false,\n    placeholder: t('placeholder.date'),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  })), __jsx(Form.Item, {\n    label: t(\"healthStatuses.weight\") + ' (Kg)',\n    name: \"weight\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, __jsx(InputNumber, {\n    min: 0,\n    max: 300,\n    step: 0.1,\n    style: {\n      width: '100%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  })), __jsx(Form.Item, {\n    label: t(\"healthStatuses.bloodPressure\") + \" (mmHg)\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }, __jsx(Form.Item, {\n    name: \"bloodPressureUpper\",\n    style: {\n      display: 'inline-block',\n      width: 'calc(20% - 8px)'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  }, __jsx(InputNumber, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  })), __jsx(\"span\", {\n    style: {\n      padding: \"0 50px\",\n      fontSize: \"25px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  }, \"/\"), __jsx(Form.Item, {\n    name: \"bloodPressureLower\",\n    style: {\n      display: 'inline-block',\n      width: 'calc(20% - 8px)'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 11\n    }\n  }, __jsx(InputNumber, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  }))), __jsx(Form.Item, {\n    label: t(\"healthStatuses.bloodSugar\") + \" (mg/dL)\",\n    name: \"bloodSugar\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  }, __jsx(InputNumber, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 11\n    }\n  })), __jsx(Form.Item, {\n    label: t(\"healthStatuses.heartRate\") + \" (BPM)\",\n    name: \"heartRate\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }\n  }, __jsx(InputNumber, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 11\n    }\n  })), __jsx(Form.Item, {\n    label: t(\"doctor\"),\n    name: \"doctorId\",\n    rules: [{\n      required: true,\n      message: t('form.required')\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }\n  }, __jsx(Select, {\n    showSearch: true,\n    placeholder: t('placeholder.user'),\n    filterOption: function filterOption(input, option) {\n      return option.children[2].toLowerCase().indexOf(input.toLowerCase()) >= 0;\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 11\n    }\n  }, renderOptionUser())), __jsx(Form.Item, {\n    label: t(\"note\"),\n    name: \"note\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }\n  }, __jsx(Input, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 11\n    }\n  })), __jsx(Form.Item, {\n    wrapperCol: {\n      span: 24\n    },\n    style: {\n      textAlign: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    onClick: function onClick() {\n      return redirect(\"frontend.admin.healthStatuses.index\");\n    },\n    style: {\n      marginRight: 8\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 11\n    }\n  }, __jsx(LeftCircleFilled, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }\n  }), \" \", t('cancel')), __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: loading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 11\n    }\n  }, __jsx(DeleteFilled, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 13\n    }\n  }), \" \", t('submit'))))));\n};\n\n_s(Create, \"cpCzyyZI/YlEH83DeOHrkqmh8e0=\", false, function () {\n  return [useBaseHook, Form.useForm];\n});\n\n_c = Create;\n\nCreate.getInitialProps = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(ctx) {\n    var patientService, userService, _yield$to3, _yield$to4, errorPatients, patients, filters, _yield$to5, _yield$to6, errorUsers, users;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            patientService = new PatientService(ctx);\n            userService = new UserService(ctx);\n            _context2.next = 4;\n            return to(patientService.index({\n              pageSize: -1\n            }));\n\n          case 4:\n            _yield$to3 = _context2.sent;\n            _yield$to4 = _slicedToArray(_yield$to3, 2);\n            errorPatients = _yield$to4[0];\n            patients = _yield$to4[1];\n            filters = JSON.stringify({\n              field: \"position\",\n              operator: \"contains\",\n              value: \"Bác sỹ\"\n            });\n            _context2.next = 11;\n            return to(userService.index({\n              pageSize: -1,\n              filters: [filters]\n            }));\n\n          case 11:\n            _yield$to5 = _context2.sent;\n            _yield$to6 = _slicedToArray(_yield$to5, 2);\n            errorUsers = _yield$to6[0];\n            users = _yield$to6[1];\n            return _context2.abrupt(\"return\", {\n              namespacesRequired: ['common', 'pages', 'menu', 'errors'],\n              errorPatients: errorPatients,\n              errorUsers: errorUsers,\n              patients: _.get(patients, \"data\", []),\n              users: _.get(users, \"data\", [])\n            });\n\n          case 16:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x2) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nCreate.permissions = {\n  \"doctor.healthStatuses\": \"C\"\n};\nexport default Create;\n\nvar _c;\n\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"sources":["E:/DATN/nursinghome/pages/admin/healthStatuses/create.tsx"],"names":["React","useState","Layout","Button","Form","Input","Select","InputNumber","DatePicker","PatientService","UserService","HealthService","_","to","useBaseHook","DeleteFilled","LeftCircleFilled","Option","formItemLayout","labelCol","xs","span","sm","wrapperCol","Create","patients","users","t","notify","redirect","setStore","getAuth","getStore","loading","setLoading","useForm","form","healthService","onFinish","values","console","log","create","error","result","code","message","renderOptionPatient","map","item","push","id","fullname","roomCode","bedCode","renderOptionUser","patientId","undefined","date","weight","bloodPressure","bloodSugar","heartRate","doctorId","note","required","input","option","children","toLowerCase","indexOf","width","display","padding","fontSize","textAlign","marginRight","getInitialProps","ctx","patientService","userService","index","pageSize","errorPatients","filters","JSON","stringify","field","operator","value","errorUsers","namespacesRequired","get","permissions"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport Layout from 'themes/layouts/Admin'\r\nimport { Button, Row, Col, Form, Input, Select, InputNumber, Radio, DatePicker } from 'antd';\r\nimport PatientService from 'themes/services/api/PatientService';\r\nimport UserService from 'themes/services/api/UserService';\r\nimport HealthService from 'themes/services/api/HealthStatusService';\r\nimport _ from 'lodash';\r\nimport to from 'await-to-js'\r\nimport useBaseHook from 'themes/hooks/BaseHooks'\r\nimport { DeleteFilled, LeftCircleFilled } from '@ant-design/icons';\r\n\r\nconst { Option } = Select\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 4 },\r\n  },\r\n  wrapperCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 18 },\r\n  },\r\n};\r\n\r\nconst Create = ({ patients, users }: { patients: Patient[], users: User[] }) => {\r\n  const { t, notify, redirect, setStore, getAuth, getStore } = useBaseHook();\r\n  const [loading, setLoading] = useState(false);\r\n  const [form] = Form.useForm();\r\n  const healthService = new HealthService()\r\n  //submit form\r\n  const onFinish = async (values: any): Promise<void> => {\r\n    console.log(values)\r\n    setLoading(true)\r\n    let [error, result]: any[] = await to(healthService.create(values));\r\n    setLoading(false)\r\n\r\n    if (error) {\r\n      return notify(t(`errors:${error.code}`), t(error.message), 'error')\r\n    }\r\n    notify(t(\"message.recordCreated\"))\r\n    redirect(\"frontend.admin.healthStatuses.index\")\r\n  }\r\n\r\n  //render option\r\n  const renderOptionPatient = (): JSX.Element[] => {\r\n    let result: JSX.Element[] = [];\r\n    patients.map(item => {\r\n      result.push(\r\n      <Option value={item.id} key={item.id}>{item.code} - {item.fullname} - {item.roomCode} - {item.bedCode}</Option>\r\n      )\r\n    })\r\n    return result;\r\n  }\r\n\r\n  const renderOptionUser = (): JSX.Element[] => {\r\n    let result: JSX.Element[] = [];\r\n    users.map(item => {\r\n      result.push(\r\n      <Option value={item.id} key={item.id}>{item.code} - {item.fullname}</Option>\r\n      )\r\n    })\r\n    return result;\r\n  }\r\n  \r\n  return <Layout>\r\n    <div className=\"content\">\r\n      <Form\r\n        {...formItemLayout}\r\n        form={form}\r\n        name=\"createHealth\"\r\n        initialValues={{\r\n          patientId: undefined,\r\n          date: \"\",\r\n          weight: \"\",\r\n          bloodPressure: \"\",\r\n          bloodSugar: \"\",\r\n          heartRate: \"\",\r\n          doctorId: undefined,\r\n          note: \"\"\r\n        }}\r\n        onFinish={onFinish}\r\n        scrollToFirstError\r\n      >\r\n        <Form.Item\r\n          label={t(\"patient\")}\r\n          name=\"patientId\"\r\n          rules={[\r\n            { required: true, message: t('form.required') },\r\n          ]}\r\n        >\r\n          <Select \r\n            showSearch\r\n            placeholder = {t('placeholder.patient')}\r\n            filterOption={ (input: any, option: any) => {\r\n              return option.children[0].toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n            } }\r\n          >\r\n            {renderOptionPatient()}\r\n          </Select>\r\n        </Form.Item>\r\n        \r\n        <Form.Item\r\n          label={t(\"healthStatuses.date\")}\r\n          name=\"date\"\r\n          rules={[\r\n            { required: true, message: t('form.required') },\r\n          ]}\r\n        >\r\n          <DatePicker format={'YYYY-MM-DD'} showTime={false} placeholder={t('placeholder.date')} />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={t(\"healthStatuses.weight\") + ' (Kg)'}\r\n          name=\"weight\"\r\n        >\r\n          <InputNumber min={0} max={300} step={0.1}  style={{ width:'100%' }} />\r\n        </Form.Item>\r\n\r\n        {/* <Form.Item\r\n          label={t(\"healthStatuses.bloodPressure\") + \" (mmHg)\"}\r\n          name=\"bloodPressure\"\r\n        >\r\n          <Input />\r\n        </Form.Item> */}\r\n\r\n        <Form.Item label={t(\"healthStatuses.bloodPressure\") + \" (mmHg)\"}>\r\n          <Form.Item\r\n            name=\"bloodPressureUpper\"\r\n            style={{ display: 'inline-block', width: 'calc(20% - 8px)' }}\r\n          >\r\n            <InputNumber />\r\n          </Form.Item>\r\n\r\n          <span style={{ padding:\"0 50px\", fontSize:\"25px\"  }}>/</span>\r\n\r\n          <Form.Item\r\n            name=\"bloodPressureLower\"\r\n            style={{ display: 'inline-block', width: 'calc(20% - 8px)' }}\r\n          >\r\n            <InputNumber />\r\n          </Form.Item>\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={t(\"healthStatuses.bloodSugar\") + \" (mg/dL)\"}\r\n          name=\"bloodSugar\"\r\n        >\r\n          <InputNumber />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={t(\"healthStatuses.heartRate\") + \" (BPM)\"}\r\n          name=\"heartRate\"\r\n        >\r\n          <InputNumber />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={t(\"doctor\")}\r\n          name=\"doctorId\"\r\n          rules={[\r\n            { required: true, message: t('form.required') },\r\n          ]}\r\n        >\r\n          <Select\r\n            showSearch\r\n            placeholder = {t('placeholder.user')}\r\n            filterOption={ (input: any, option: any) => {\r\n              return option.children[2].toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n            } }\r\n          >\r\n            {renderOptionUser()}\r\n          </Select>\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={t(\"note\")}\r\n          name=\"note\"\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item wrapperCol={{ span: 24 }} style={{textAlign: \"center\"}}>\r\n          <Button onClick={() => redirect(\"frontend.admin.healthStatuses.index\")} style={{ marginRight: 8}}>\r\n            <LeftCircleFilled /> {t('cancel')}\r\n          </Button>\r\n          <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\r\n            <DeleteFilled /> {t('submit')}\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  </Layout>\r\n}\r\n\r\nCreate.getInitialProps = async (ctx: any) => {\r\n  const patientService = new PatientService(ctx)\r\n  const userService = new UserService(ctx)\r\n  const [errorPatients, patients] = await to(patientService.index({ pageSize: -1 }));\r\n  const filters = JSON.stringify({field:\"position\",operator:\"contains\",value:\"Bác sỹ\"})\r\n  const [errorUsers, users] = await to(userService.index({ pageSize: -1, filters: [filters] }));\r\n  return {\r\n    namespacesRequired: ['common', 'pages','menu','errors'],\r\n    errorPatients: errorPatients,\r\n    errorUsers: errorUsers,\r\n    patients: _.get(patients, \"data\", []),\r\n    users: _.get(users, \"data\", []),\r\n  }\r\n}\r\nCreate.permissions = {\r\n  \"doctor.healthStatuses\": \"C\"\r\n};\r\nexport default Create"]},"metadata":{},"sourceType":"module"}