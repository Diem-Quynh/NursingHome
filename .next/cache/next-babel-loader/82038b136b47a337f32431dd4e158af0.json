{"ast":null,"code":"var _jsxFileName = \"E:\\\\DATN\\\\nursinghome\\\\pages\\\\admin\\\\healthStatuses\\\\create.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { useState } from 'react';\nimport Layout from 'themes/layouts/Admin';\nimport { Button, Form, Input, Select, InputNumber, DatePicker } from 'antd';\nimport PatientService from 'themes/services/api/PatientService';\nimport UserService from 'themes/services/api/UserService';\nimport HealthService from 'themes/services/api/HealthStatusService';\nimport _ from 'lodash';\nimport to from 'await-to-js';\nimport useBaseHook from 'themes/hooks/BaseHooks';\nimport { DeleteFilled, LeftCircleFilled } from '@ant-design/icons';\nconst {\n  Option\n} = Select;\nconst formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 4\n    }\n  },\n  wrapperCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 18\n    }\n  }\n};\n\nconst Create = ({\n  patients,\n  users\n}) => {\n  const {\n    t,\n    notify,\n    redirect,\n    setStore,\n    getAuth,\n    getStore\n  } = useBaseHook();\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const [form] = Form.useForm();\n  const healthService = new HealthService(); //submit form\n\n  const onFinish = async values => {\n    setLoading(true);\n\n    let {\n      bloodPressureUpper,\n      bloodPressureLower\n    } = values,\n        otherValues = _objectWithoutProperties(values, [\"bloodPressureUpper\", \"bloodPressureLower\"]);\n\n    let bloodPressure = bloodPressureUpper.toString() + \"/\" + bloodPressureLower.toString();\n    let [error, result] = await to(healthService.create(Object.assign(otherValues, {\n      bloodPressure: bloodPressure\n    })));\n    setLoading(false);\n\n    if (error) {\n      return notify(t(`errors:${error.code}`), t(error.message), 'error');\n    }\n\n    notify(t(\"message.recordCreated\"));\n    redirect(\"frontend.admin.healthStatuses.index\");\n  }; //render option\n\n\n  const renderOptionPatient = () => {\n    let result = [];\n    patients.map(item => {\n      result.push(__jsx(Option, {\n        value: item.id,\n        key: item.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 7\n        }\n      }, item.code, \" - \", item.fullname, \" - \", item.roomCode, \" - \", item.bedCode));\n    });\n    return result;\n  };\n\n  const renderOptionUser = () => {\n    let result = [];\n    users.map(item => {\n      result.push(__jsx(Option, {\n        value: item.id,\n        key: item.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 7\n        }\n      }, item.code, \" - \", item.fullname));\n    });\n    return result;\n  };\n\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 10\n    }\n  }, __jsx(\"div\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, __jsx(Form, _extends({}, formItemLayout, {\n    form: form,\n    name: \"createHealth\",\n    initialValues: {\n      patientId: undefined,\n      date: \"\",\n      weight: \"\",\n      bloodPressureUpper: \"\",\n      bloodPressureLower: \"\",\n      bloodSugar: \"\",\n      heartRate: \"\",\n      doctorId: undefined,\n      note: \"\"\n    },\n    onFinish: onFinish,\n    scrollToFirstError: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }), __jsx(Form.Item, {\n    label: t(\"patient\"),\n    name: \"patientId\",\n    rules: [{\n      required: true,\n      message: t('form.required')\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, __jsx(Select, {\n    showSearch: true,\n    placeholder: t('placeholder.patient'),\n    filterOption: (input, option) => {\n      return option.children[0].toLowerCase().indexOf(input.toLowerCase()) >= 0;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, renderOptionPatient())), __jsx(Form.Item, {\n    label: t(\"healthStatuses.date\"),\n    name: \"date\",\n    rules: [{\n      required: true,\n      message: t('form.required')\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, __jsx(DatePicker, {\n    format: 'YYYY-MM-DD',\n    showTime: false,\n    placeholder: t('placeholder.date'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  })), __jsx(Form.Item, {\n    label: t(\"healthStatuses.weight\") + ' (Kg)',\n    name: \"weight\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, __jsx(InputNumber, {\n    min: 0,\n    max: 300,\n    step: 0.1,\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  })), __jsx(Form.Item, {\n    label: t(\"healthStatuses.bloodPressure\") + \" (mmHg)\",\n    style: {\n      width: 'calc(100% - 0px)'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, __jsx(Form.Item, {\n    label: \" \",\n    name: \"bloodPressureUpper\",\n    style: {\n      display: 'inline-block',\n      width: 'calc(20% - 0px)'\n    },\n    rules: [{\n      required: true,\n      message: t('form.required')\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }, __jsx(InputNumber, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  })), __jsx(\"span\", {\n    style: {\n      padding: \"0 50px\",\n      fontSize: \"25px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  }, \"/\"), __jsx(Form.Item, {\n    name: \"bloodPressureLower\",\n    style: {\n      display: 'inline-block',\n      width: 'calc(20% - 0px)'\n    },\n    rules: [{\n      required: true,\n      message: t('form.required')\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 11\n    }\n  }, __jsx(InputNumber, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  }))), __jsx(Form.Item, {\n    label: t(\"healthStatuses.bloodSugar\") + \" (mg/dL)\",\n    name: \"bloodSugar\",\n    rules: [{\n      required: true,\n      message: t('form.required')\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }\n  }, __jsx(InputNumber, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 11\n    }\n  })), __jsx(Form.Item, {\n    label: t(\"healthStatuses.heartRate\") + \" (BPM)\",\n    name: \"heartRate\",\n    rules: [{\n      required: true,\n      message: t('form.required')\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }\n  }, __jsx(InputNumber, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 11\n    }\n  })), __jsx(Form.Item, {\n    label: t(\"doctor\"),\n    name: \"doctorId\",\n    rules: [{\n      required: true,\n      message: t('form.required')\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }\n  }, __jsx(Select, {\n    showSearch: true,\n    placeholder: t('placeholder.user'),\n    filterOption: (input, option) => {\n      return option.children[2].toLowerCase().indexOf(input.toLowerCase()) >= 0;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 11\n    }\n  }, renderOptionUser())), __jsx(Form.Item, {\n    label: t(\"note\"),\n    name: \"note\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 9\n    }\n  }, __jsx(Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 11\n    }\n  })), __jsx(Form.Item, {\n    wrapperCol: {\n      span: 24\n    },\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    onClick: () => redirect(\"frontend.admin.healthStatuses.index\"),\n    style: {\n      marginRight: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 11\n    }\n  }, __jsx(LeftCircleFilled, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 13\n    }\n  }), \" \", t('cancel')), __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 11\n    }\n  }, __jsx(DeleteFilled, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }\n  }), \" \", t('submit'))))));\n};\n\nCreate.getInitialProps = async ctx => {\n  const patientService = new PatientService(ctx);\n  const userService = new UserService(ctx);\n  const [errorPatients, patients] = await to(patientService.index({\n    pageSize: -1\n  }));\n  const filters = JSON.stringify({\n    field: \"position\",\n    operator: \"contains\",\n    value: \"Bác sỹ\"\n  });\n  const [errorUsers, users] = await to(userService.index({\n    pageSize: -1,\n    filters: [filters]\n  }));\n  return {\n    namespacesRequired: ['common', 'pages', 'menu', 'errors'],\n    errorPatients: errorPatients,\n    errorUsers: errorUsers,\n    patients: _.get(patients, \"data\", []),\n    users: _.get(users, \"data\", [])\n  };\n};\n\nCreate.permissions = {\n  \"doctor.healthStatuses\": \"C\"\n};\nexport default Create;","map":{"version":3,"sources":["E:/DATN/nursinghome/pages/admin/healthStatuses/create.tsx"],"names":["React","useState","Layout","Button","Form","Input","Select","InputNumber","DatePicker","PatientService","UserService","HealthService","_","to","useBaseHook","DeleteFilled","LeftCircleFilled","Option","formItemLayout","labelCol","xs","span","sm","wrapperCol","Create","patients","users","t","notify","redirect","setStore","getAuth","getStore","loading","setLoading","form","useForm","healthService","onFinish","values","bloodPressureUpper","bloodPressureLower","otherValues","bloodPressure","toString","error","result","create","Object","assign","code","message","renderOptionPatient","map","item","push","id","fullname","roomCode","bedCode","renderOptionUser","patientId","undefined","date","weight","bloodSugar","heartRate","doctorId","note","required","input","option","children","toLowerCase","indexOf","width","display","padding","fontSize","textAlign","marginRight","getInitialProps","ctx","patientService","userService","errorPatients","index","pageSize","filters","JSON","stringify","field","operator","value","errorUsers","namespacesRequired","get","permissions"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,MAAT,EAA2BC,IAA3B,EAAiCC,KAAjC,EAAwCC,MAAxC,EAAgDC,WAAhD,EAAoEC,UAApE,QAAsF,MAAtF;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,OAAOC,WAAP,MAAwB,iCAAxB;AACA,OAAOC,aAAP,MAA0B,yCAA1B;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,EAAP,MAAe,aAAf;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,SAASC,YAAT,EAAuBC,gBAAvB,QAA+C,mBAA/C;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAaX,MAAnB;AAEA,MAAMY,cAAc,GAAG;AACrBC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,EAAE,EAAE;AAAEC,MAAAA,IAAI,EAAE;AAAR,KADI;AAERC,IAAAA,EAAE,EAAE;AAAED,MAAAA,IAAI,EAAE;AAAR;AAFI,GADW;AAKrBE,EAAAA,UAAU,EAAE;AACVH,IAAAA,EAAE,EAAE;AAAEC,MAAAA,IAAI,EAAE;AAAR,KADM;AAEVC,IAAAA,EAAE,EAAE;AAAED,MAAAA,IAAI,EAAE;AAAR;AAFM;AALS,CAAvB;;AAWA,MAAMG,MAAM,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAAiE;AAC9E,QAAM;AAAEC,IAAAA,CAAF;AAAKC,IAAAA,MAAL;AAAaC,IAAAA,QAAb;AAAuBC,IAAAA,QAAvB;AAAiCC,IAAAA,OAAjC;AAA0CC,IAAAA;AAA1C,MAAuDlB,WAAW,EAAxE;AACA,QAAM;AAAA,OAACmB,OAAD;AAAA,OAAUC;AAAV,MAAwBjC,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACkC,IAAD,IAAS/B,IAAI,CAACgC,OAAL,EAAf;AACA,QAAMC,aAAa,GAAG,IAAI1B,aAAJ,EAAtB,CAJ8E,CAK9E;;AACA,QAAM2B,QAAQ,GAAG,MAAOC,MAAP,IAAsC;AACrDL,IAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,QAAI;AAAEM,MAAAA,kBAAF;AAAsBC,MAAAA;AAAtB,QAA6DF,MAAjE;AAAA,QAAiDG,WAAjD,4BAAiEH,MAAjE;;AACA,QAAII,aAAa,GAAGH,kBAAkB,CAACI,QAAnB,KAAgC,GAAhC,GAAsCH,kBAAkB,CAACG,QAAnB,EAA1D;AACA,QAAI,CAACC,KAAD,EAAQC,MAAR,IAAyB,MAAMjC,EAAE,CAACwB,aAAa,CAACU,MAAd,CAAqBC,MAAM,CAACC,MAAP,CAAcP,WAAd,EAA0B;AAACC,MAAAA,aAAa,EAAEA;AAAhB,KAA1B,CAArB,CAAD,CAArC;AACAT,IAAAA,UAAU,CAAC,KAAD,CAAV;;AAEA,QAAIW,KAAJ,EAAW;AACT,aAAOjB,MAAM,CAACD,CAAC,CAAE,UAASkB,KAAK,CAACK,IAAK,EAAtB,CAAF,EAA4BvB,CAAC,CAACkB,KAAK,CAACM,OAAP,CAA7B,EAA8C,OAA9C,CAAb;AACD;;AACDvB,IAAAA,MAAM,CAACD,CAAC,CAAC,uBAAD,CAAF,CAAN;AACAE,IAAAA,QAAQ,CAAC,qCAAD,CAAR;AACD,GAZD,CAN8E,CAoB9E;;;AACA,QAAMuB,mBAAmB,GAAG,MAAqB;AAC/C,QAAIN,MAAqB,GAAG,EAA5B;AACArB,IAAAA,QAAQ,CAAC4B,GAAT,CAAaC,IAAI,IAAI;AACnBR,MAAAA,MAAM,CAACS,IAAP,CACA,MAAC,MAAD;AAAQ,QAAA,KAAK,EAAED,IAAI,CAACE,EAApB;AAAwB,QAAA,GAAG,EAAEF,IAAI,CAACE,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAuCF,IAAI,CAACJ,IAA5C,SAAqDI,IAAI,CAACG,QAA1D,SAAuEH,IAAI,CAACI,QAA5E,SAAyFJ,IAAI,CAACK,OAA9F,CADA;AAGD,KAJD;AAKA,WAAOb,MAAP;AACD,GARD;;AAUA,QAAMc,gBAAgB,GAAG,MAAqB;AAC5C,QAAId,MAAqB,GAAG,EAA5B;AACApB,IAAAA,KAAK,CAAC2B,GAAN,CAAUC,IAAI,IAAI;AAChBR,MAAAA,MAAM,CAACS,IAAP,CACA,MAAC,MAAD;AAAQ,QAAA,KAAK,EAAED,IAAI,CAACE,EAApB;AAAwB,QAAA,GAAG,EAAEF,IAAI,CAACE,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAuCF,IAAI,CAACJ,IAA5C,SAAqDI,IAAI,CAACG,QAA1D,CADA;AAGD,KAJD;AAKA,WAAOX,MAAP;AACD,GARD;;AAUA,SAAO,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACL;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,eACM5B,cADN;AAEE,IAAA,IAAI,EAAEiB,IAFR;AAGE,IAAA,IAAI,EAAC,cAHP;AAIE,IAAA,aAAa,EAAE;AACb0B,MAAAA,SAAS,EAAEC,SADE;AAEbC,MAAAA,IAAI,EAAE,EAFO;AAGbC,MAAAA,MAAM,EAAE,EAHK;AAIbxB,MAAAA,kBAAkB,EAAE,EAJP;AAKbC,MAAAA,kBAAkB,EAAE,EALP;AAMbwB,MAAAA,UAAU,EAAE,EANC;AAObC,MAAAA,SAAS,EAAE,EAPE;AAQbC,MAAAA,QAAQ,EAAEL,SARG;AASbM,MAAAA,IAAI,EAAE;AATO,KAJjB;AAeE,IAAA,QAAQ,EAAE9B,QAfZ;AAgBE,IAAA,kBAAkB,MAhBpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAkBE,MAAC,IAAD,CAAM,IAAN;AACE,IAAA,KAAK,EAAEX,CAAC,CAAC,SAAD,CADV;AAEE,IAAA,IAAI,EAAC,WAFP;AAGE,IAAA,KAAK,EAAE,CACL;AAAE0C,MAAAA,QAAQ,EAAE,IAAZ;AAAkBlB,MAAAA,OAAO,EAAExB,CAAC,CAAC,eAAD;AAA5B,KADK,CAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE,MAAC,MAAD;AACE,IAAA,UAAU,MADZ;AAEE,IAAA,WAAW,EAAIA,CAAC,CAAC,qBAAD,CAFlB;AAGE,IAAA,YAAY,EAAG,CAAC2C,KAAD,EAAaC,MAAb,KAA6B;AAC1C,aAAOA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmBC,WAAnB,GAAiCC,OAAjC,CAAyCJ,KAAK,CAACG,WAAN,EAAzC,KAAiE,CAAxE;AACD,KALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGrB,mBAAmB,EAPtB,CAPF,CAlBF,EAoCE,MAAC,IAAD,CAAM,IAAN;AACE,IAAA,KAAK,EAAEzB,CAAC,CAAC,qBAAD,CADV;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,KAAK,EAAE,CACL;AAAE0C,MAAAA,QAAQ,EAAE,IAAZ;AAAkBlB,MAAAA,OAAO,EAAExB,CAAC,CAAC,eAAD;AAA5B,KADK,CAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE,MAAC,UAAD;AAAY,IAAA,MAAM,EAAE,YAApB;AAAkC,IAAA,QAAQ,EAAE,KAA5C;AAAmD,IAAA,WAAW,EAAEA,CAAC,CAAC,kBAAD,CAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CApCF,EA8CE,MAAC,IAAD,CAAM,IAAN;AACE,IAAA,KAAK,EAAEA,CAAC,CAAC,uBAAD,CAAD,GAA6B,OADtC;AAEE,IAAA,IAAI,EAAC,QAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,MAAC,WAAD;AAAa,IAAA,GAAG,EAAE,CAAlB;AAAqB,IAAA,GAAG,EAAE,GAA1B;AAA+B,IAAA,IAAI,EAAE,GAArC;AAA2C,IAAA,KAAK,EAAE;AAAEgD,MAAAA,KAAK,EAAC;AAAR,KAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CA9CF,EA4DE,MAAC,IAAD,CAAM,IAAN;AAAW,IAAA,KAAK,EAAEhD,CAAC,CAAC,8BAAD,CAAD,GAAoC,SAAtD;AAAiE,IAAA,KAAK,EAAE;AAAEgD,MAAAA,KAAK,EAAE;AAAT,KAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,IAAN;AACA,IAAA,KAAK,EAAC,GADN;AAEE,IAAA,IAAI,EAAC,oBAFP;AAGE,IAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAE,cAAX;AAA2BD,MAAAA,KAAK,EAAE;AAAlC,KAHT;AAIE,IAAA,KAAK,EAAE,CACL;AAAEN,MAAAA,QAAQ,EAAE,IAAZ;AAAkBlB,MAAAA,OAAO,EAAExB,CAAC,CAAC,eAAD;AAA5B,KADK,CAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF,EAYE;AAAM,IAAA,KAAK,EAAE;AAAEkD,MAAAA,OAAO,EAAC,QAAV;AAAoBC,MAAAA,QAAQ,EAAC;AAA7B,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAZF,EAcE,MAAC,IAAD,CAAM,IAAN;AACE,IAAA,IAAI,EAAC,oBADP;AAEE,IAAA,KAAK,EAAE;AAAEF,MAAAA,OAAO,EAAE,cAAX;AAA2BD,MAAAA,KAAK,EAAE;AAAlC,KAFT;AAGE,IAAA,KAAK,EAAE,CACL;AAAEN,MAAAA,QAAQ,EAAE,IAAZ;AAAkBlB,MAAAA,OAAO,EAAExB,CAAC,CAAC,eAAD;AAA5B,KADK,CAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CAdF,CA5DF,EAqFE,MAAC,IAAD,CAAM,IAAN;AACE,IAAA,KAAK,EAAEA,CAAC,CAAC,2BAAD,CAAD,GAAiC,UAD1C;AAEE,IAAA,IAAI,EAAC,YAFP;AAGE,IAAA,KAAK,EAAE,CACL;AAAE0C,MAAAA,QAAQ,EAAE,IAAZ;AAAkBlB,MAAAA,OAAO,EAAExB,CAAC,CAAC,eAAD;AAA5B,KADK,CAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CArFF,EA+FE,MAAC,IAAD,CAAM,IAAN;AACE,IAAA,KAAK,EAAEA,CAAC,CAAC,0BAAD,CAAD,GAAgC,QADzC;AAEE,IAAA,IAAI,EAAC,WAFP;AAGE,IAAA,KAAK,EAAE,CACL;AAAE0C,MAAAA,QAAQ,EAAE,IAAZ;AAAkBlB,MAAAA,OAAO,EAAExB,CAAC,CAAC,eAAD;AAA5B,KADK,CAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CA/FF,EAyGE,MAAC,IAAD,CAAM,IAAN;AACE,IAAA,KAAK,EAAEA,CAAC,CAAC,QAAD,CADV;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,KAAK,EAAE,CACL;AAAE0C,MAAAA,QAAQ,EAAE,IAAZ;AAAkBlB,MAAAA,OAAO,EAAExB,CAAC,CAAC,eAAD;AAA5B,KADK,CAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE,MAAC,MAAD;AACE,IAAA,UAAU,MADZ;AAEE,IAAA,WAAW,EAAIA,CAAC,CAAC,kBAAD,CAFlB;AAGE,IAAA,YAAY,EAAG,CAAC2C,KAAD,EAAaC,MAAb,KAA6B;AAC1C,aAAOA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmBC,WAAnB,GAAiCC,OAAjC,CAAyCJ,KAAK,CAACG,WAAN,EAAzC,KAAiE,CAAxE;AACD,KALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGb,gBAAgB,EAPnB,CAPF,CAzGF,EA2HE,MAAC,IAAD,CAAM,IAAN;AACE,IAAA,KAAK,EAAEjC,CAAC,CAAC,MAAD,CADV;AAEE,IAAA,IAAI,EAAC,MAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CA3HF,EAkIE,MAAC,IAAD,CAAM,IAAN;AAAW,IAAA,UAAU,EAAE;AAAEN,MAAAA,IAAI,EAAE;AAAR,KAAvB;AAAqC,IAAA,KAAK,EAAE;AAAC0D,MAAAA,SAAS,EAAE;AAAZ,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,MAAMlD,QAAQ,CAAC,qCAAD,CAA/B;AAAwE,IAAA,KAAK,EAAE;AAAEmD,MAAAA,WAAW,EAAE;AAAf,KAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,OACwBrD,CAAC,CAAC,QAAD,CADzB,CADF,EAIE,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,QAAQ,EAAC,QAAhC;AAAyC,IAAA,OAAO,EAAEM,OAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,OACoBN,CAAC,CAAC,QAAD,CADrB,CAJF,CAlIF,CADF,CADK,CAAP;AA+ID,CAxLD;;AA0LAH,MAAM,CAACyD,eAAP,GAAyB,MAAOC,GAAP,IAAoB;AAC3C,QAAMC,cAAc,GAAG,IAAI1E,cAAJ,CAAmByE,GAAnB,CAAvB;AACA,QAAME,WAAW,GAAG,IAAI1E,WAAJ,CAAgBwE,GAAhB,CAApB;AACA,QAAM,CAACG,aAAD,EAAgB5D,QAAhB,IAA4B,MAAMZ,EAAE,CAACsE,cAAc,CAACG,KAAf,CAAqB;AAAEC,IAAAA,QAAQ,EAAE,CAAC;AAAb,GAArB,CAAD,CAA1C;AACA,QAAMC,OAAO,GAAGC,IAAI,CAACC,SAAL,CAAe;AAACC,IAAAA,KAAK,EAAC,UAAP;AAAkBC,IAAAA,QAAQ,EAAC,UAA3B;AAAsCC,IAAAA,KAAK,EAAC;AAA5C,GAAf,CAAhB;AACA,QAAM,CAACC,UAAD,EAAapE,KAAb,IAAsB,MAAMb,EAAE,CAACuE,WAAW,CAACE,KAAZ,CAAkB;AAAEC,IAAAA,QAAQ,EAAE,CAAC,CAAb;AAAgBC,IAAAA,OAAO,EAAE,CAACA,OAAD;AAAzB,GAAlB,CAAD,CAApC;AACA,SAAO;AACLO,IAAAA,kBAAkB,EAAE,CAAC,QAAD,EAAW,OAAX,EAAmB,MAAnB,EAA0B,QAA1B,CADf;AAELV,IAAAA,aAAa,EAAEA,aAFV;AAGLS,IAAAA,UAAU,EAAEA,UAHP;AAILrE,IAAAA,QAAQ,EAAEb,CAAC,CAACoF,GAAF,CAAMvE,QAAN,EAAgB,MAAhB,EAAwB,EAAxB,CAJL;AAKLC,IAAAA,KAAK,EAAEd,CAAC,CAACoF,GAAF,CAAMtE,KAAN,EAAa,MAAb,EAAqB,EAArB;AALF,GAAP;AAOD,CAbD;;AAcAF,MAAM,CAACyE,WAAP,GAAqB;AACnB,2BAAyB;AADN,CAArB;AAGA,eAAezE,MAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport Layout from 'themes/layouts/Admin'\r\nimport { Button, Row, Col, Form, Input, Select, InputNumber, Radio, DatePicker } from 'antd';\r\nimport PatientService from 'themes/services/api/PatientService';\r\nimport UserService from 'themes/services/api/UserService';\r\nimport HealthService from 'themes/services/api/HealthStatusService';\r\nimport _ from 'lodash';\r\nimport to from 'await-to-js'\r\nimport useBaseHook from 'themes/hooks/BaseHooks'\r\nimport { DeleteFilled, LeftCircleFilled } from '@ant-design/icons';\r\n\r\nconst { Option } = Select\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 4 },\r\n  },\r\n  wrapperCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 18 },\r\n  },\r\n};\r\n\r\nconst Create = ({ patients, users }: { patients: Patient[], users: User[] }) => {\r\n  const { t, notify, redirect, setStore, getAuth, getStore } = useBaseHook();\r\n  const [loading, setLoading] = useState(false);\r\n  const [form] = Form.useForm();\r\n  const healthService = new HealthService()\r\n  //submit form\r\n  const onFinish = async (values: any): Promise<void> => {\r\n    setLoading(true)\r\n    let { bloodPressureUpper, bloodPressureLower, ...otherValues } = values;\r\n    let bloodPressure = bloodPressureUpper.toString() + \"/\" + bloodPressureLower.toString()\r\n    let [error, result]: any[] = await to(healthService.create(Object.assign(otherValues,{bloodPressure: bloodPressure})));\r\n    setLoading(false)\r\n\r\n    if (error) {\r\n      return notify(t(`errors:${error.code}`), t(error.message), 'error')\r\n    }\r\n    notify(t(\"message.recordCreated\"))\r\n    redirect(\"frontend.admin.healthStatuses.index\")\r\n  }\r\n\r\n  //render option\r\n  const renderOptionPatient = (): JSX.Element[] => {\r\n    let result: JSX.Element[] = [];\r\n    patients.map(item => {\r\n      result.push(\r\n      <Option value={item.id} key={item.id}>{item.code} - {item.fullname} - {item.roomCode} - {item.bedCode}</Option>\r\n      )\r\n    })\r\n    return result;\r\n  }\r\n\r\n  const renderOptionUser = (): JSX.Element[] => {\r\n    let result: JSX.Element[] = [];\r\n    users.map(item => {\r\n      result.push(\r\n      <Option value={item.id} key={item.id}>{item.code} - {item.fullname}</Option>\r\n      )\r\n    })\r\n    return result;\r\n  }\r\n  \r\n  return <Layout>\r\n    <div className=\"content\">\r\n      <Form\r\n        {...formItemLayout}\r\n        form={form}\r\n        name=\"createHealth\"\r\n        initialValues={{\r\n          patientId: undefined,\r\n          date: \"\",\r\n          weight: \"\",\r\n          bloodPressureUpper: \"\",\r\n          bloodPressureLower: \"\",\r\n          bloodSugar: \"\",\r\n          heartRate: \"\",\r\n          doctorId: undefined,\r\n          note: \"\"\r\n        }}\r\n        onFinish={onFinish}\r\n        scrollToFirstError\r\n      >\r\n        <Form.Item\r\n          label={t(\"patient\")}\r\n          name=\"patientId\"\r\n          rules={[\r\n            { required: true, message: t('form.required') },\r\n          ]}\r\n        >\r\n          <Select \r\n            showSearch\r\n            placeholder = {t('placeholder.patient')}\r\n            filterOption={ (input: any, option: any) => {\r\n              return option.children[0].toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n            } }\r\n          >\r\n            {renderOptionPatient()}\r\n          </Select>\r\n        </Form.Item>\r\n        \r\n        <Form.Item\r\n          label={t(\"healthStatuses.date\")}\r\n          name=\"date\"\r\n          rules={[\r\n            { required: true, message: t('form.required') },\r\n          ]}\r\n        >\r\n          <DatePicker format={'YYYY-MM-DD'} showTime={false} placeholder={t('placeholder.date')} />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={t(\"healthStatuses.weight\") + ' (Kg)'}\r\n          name=\"weight\"\r\n        >\r\n          <InputNumber min={0} max={300} step={0.1}  style={{ width:'100%' }} />\r\n        </Form.Item>\r\n\r\n        {/* <Form.Item\r\n          label={t(\"healthStatuses.bloodPressure\") + \" (mmHg)\"}\r\n          name=\"bloodPressure\"\r\n        >\r\n          <Input />\r\n        </Form.Item> */}\r\n\r\n        <Form.Item label={t(\"healthStatuses.bloodPressure\") + \" (mmHg)\"} style={{ width: 'calc(100% - 0px)' }}>\r\n          <Form.Item\r\n          label=\" \"\r\n            name=\"bloodPressureUpper\"\r\n            style={{ display: 'inline-block', width: 'calc(20% - 0px)' }}\r\n            rules={[\r\n              { required: true, message: t('form.required') },\r\n            ]}\r\n          >\r\n            <InputNumber />\r\n          </Form.Item>\r\n\r\n          <span style={{ padding:\"0 50px\", fontSize:\"25px\"  }}>/</span>\r\n\r\n          <Form.Item\r\n            name=\"bloodPressureLower\"\r\n            style={{ display: 'inline-block', width: 'calc(20% - 0px)' }}\r\n            rules={[\r\n              { required: true, message: t('form.required') },\r\n            ]}\r\n          >\r\n            <InputNumber />\r\n          </Form.Item>\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={t(\"healthStatuses.bloodSugar\") + \" (mg/dL)\"}\r\n          name=\"bloodSugar\"\r\n          rules={[\r\n            { required: true, message: t('form.required') },\r\n          ]}\r\n        >\r\n          <InputNumber />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={t(\"healthStatuses.heartRate\") + \" (BPM)\"}\r\n          name=\"heartRate\"\r\n          rules={[\r\n            { required: true, message: t('form.required') },\r\n          ]}\r\n        >\r\n          <InputNumber />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={t(\"doctor\")}\r\n          name=\"doctorId\"\r\n          rules={[\r\n            { required: true, message: t('form.required') },\r\n          ]}\r\n        >\r\n          <Select\r\n            showSearch\r\n            placeholder = {t('placeholder.user')}\r\n            filterOption={ (input: any, option: any) => {\r\n              return option.children[2].toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n            } }\r\n          >\r\n            {renderOptionUser()}\r\n          </Select>\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={t(\"note\")}\r\n          name=\"note\"\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item wrapperCol={{ span: 24 }} style={{textAlign: \"center\"}}>\r\n          <Button onClick={() => redirect(\"frontend.admin.healthStatuses.index\")} style={{ marginRight: 8}}>\r\n            <LeftCircleFilled /> {t('cancel')}\r\n          </Button>\r\n          <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\r\n            <DeleteFilled /> {t('submit')}\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  </Layout>\r\n}\r\n\r\nCreate.getInitialProps = async (ctx: any) => {\r\n  const patientService = new PatientService(ctx)\r\n  const userService = new UserService(ctx)\r\n  const [errorPatients, patients] = await to(patientService.index({ pageSize: -1 }));\r\n  const filters = JSON.stringify({field:\"position\",operator:\"contains\",value:\"Bác sỹ\"})\r\n  const [errorUsers, users] = await to(userService.index({ pageSize: -1, filters: [filters] }));\r\n  return {\r\n    namespacesRequired: ['common', 'pages','menu','errors'],\r\n    errorPatients: errorPatients,\r\n    errorUsers: errorUsers,\r\n    patients: _.get(patients, \"data\", []),\r\n    users: _.get(users, \"data\", []),\r\n  }\r\n}\r\nCreate.permissions = {\r\n  \"doctor.healthStatuses\": \"C\"\r\n};\r\nexport default Create"]},"metadata":{},"sourceType":"module"}