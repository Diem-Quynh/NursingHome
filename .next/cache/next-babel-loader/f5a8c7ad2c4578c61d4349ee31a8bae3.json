{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport Layout from 'themes/layouts/Admin';\nimport { Button, Form, Input, Select, DatePicker } from 'antd';\nimport RoomService from 'themes/services/api/RoomService';\nimport UserService from 'themes/services/api/UserService';\nimport DoctorAssignService from 'themes/services/api/DoctorAssignmentService';\nimport _ from 'lodash';\nimport to from 'await-to-js';\nimport useBaseHook from 'themes/hooks/BaseHooks';\nimport { DeleteFilled, LeftCircleFilled } from '@ant-design/icons';\nvar Option = Select.Option;\nvar formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 4\n    }\n  },\n  wrapperCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 18\n    }\n  }\n};\n\nvar Create = function Create(_ref) {\n  var rooms = _ref.rooms,\n      users = _ref.users;\n\n  var _useBaseHook = useBaseHook(),\n      t = _useBaseHook.t,\n      notify = _useBaseHook.notify,\n      redirect = _useBaseHook.redirect,\n      setStore = _useBaseHook.setStore,\n      getAuth = _useBaseHook.getAuth,\n      getStore = _useBaseHook.getStore;\n\n  var _useState = useState(false),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  var _Form$useForm = Form.useForm(),\n      _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n      form = _Form$useForm2[0];\n\n  var doctorAssignService = new DoctorAssignService(); //submit form\n\n  var onFinish = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values) {\n      var _yield$to, _yield$to2, error, result;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setLoading(true);\n              _context.next = 3;\n              return to(doctorAssignService.create(values));\n\n            case 3:\n              _yield$to = _context.sent;\n              _yield$to2 = _slicedToArray(_yield$to, 2);\n              error = _yield$to2[0];\n              result = _yield$to2[1];\n              setLoading(false);\n\n              if (!error) {\n                _context.next = 10;\n                break;\n              }\n\n              return _context.abrupt(\"return\", notify(t(\"errors:\".concat(error.code)), t(error.message), 'error'));\n\n            case 10:\n              notify(t(\"message.recordCreated\"));\n              redirect(\"frontend.admin.doctorAssignments.index\");\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onFinish(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }(); //render option\n\n\n  var renderOptionRoom = function renderOptionRoom() {\n    var result = [];\n    rooms.map(function (item) {\n      result.push(__jsx(Option, {\n        value: item.code,\n        key: item.code\n      }, item.code));\n    });\n    return result;\n  };\n\n  var renderOptionUser = function renderOptionUser() {\n    var result = [];\n    users.map(function (item) {\n      result.push(__jsx(Option, {\n        value: item.id,\n        key: item.id\n      }, item.code, \" - \", item.fullname));\n    });\n    return result;\n  }; // filter option\n\n\n  var filterOptionUser = function filterOptionUser(input, option) {\n    return option.children[2].toLowerCase().indexOf(input.toLowerCase()) >= 0;\n  };\n\n  return __jsx(Layout, null, __jsx(\"div\", {\n    className: \"content\"\n  }, __jsx(Form, _extends({}, formItemLayout, {\n    form: form,\n    name: \"createDoctorAssign\",\n    initialValues: {\n      doctorId: undefined,\n      roomCode: undefined,\n      dateBegin: \"\",\n      dateEnd: \"\",\n      note: \"\"\n    },\n    onFinish: onFinish,\n    scrollToFirstError: true\n  }), __jsx(Form.Item, {\n    label: t(\"doctor\"),\n    name: \"doctorId\",\n    rules: [{\n      required: true,\n      message: t('form.required')\n    }]\n  }, __jsx(Select, {\n    showSearch: true,\n    placeholder: t('placeholder.user'),\n    filterOption: filterOptionUser\n  }, renderOptionUser())), __jsx(Form.Item, {\n    label: t(\"room\"),\n    name: \"roomCode\",\n    rules: [{\n      required: true,\n      message: t('form.required')\n    }]\n  }, __jsx(Select, {\n    showSearch: true,\n    placeholder: t('placeholder.room')\n  }, renderOptionRoom())), __jsx(Form.Item, {\n    label: t(\"doctorAssignments.dateBegin\"),\n    name: \"dateBegin\",\n    rules: [{\n      required: true,\n      message: t('form.required')\n    }]\n  }, __jsx(DatePicker, {\n    format: 'YYYY-MM-DD',\n    showTime: false,\n    placeholder: t('placeholder.date')\n  })), __jsx(Form.Item, {\n    label: t(\"doctorAssignments.dateEnd\"),\n    name: \"dateEnd\"\n  }, __jsx(DatePicker, {\n    format: 'YYYY-MM-DD',\n    showTime: false,\n    placeholder: t('placeholder.date')\n  })), __jsx(Form.Item, {\n    label: t(\"note\"),\n    name: \"note\"\n  }, __jsx(Input, null)), __jsx(Form.Item, {\n    wrapperCol: {\n      span: 24\n    },\n    style: {\n      textAlign: \"center\"\n    }\n  }, __jsx(Button, {\n    onClick: function onClick() {\n      return redirect(\"frontend.admin.doctorAssignments.index\");\n    },\n    style: {\n      marginRight: 8\n    }\n  }, __jsx(LeftCircleFilled, null), \" \", t('cancel')), __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: loading\n  }, __jsx(DeleteFilled, null), \" \", t('submit'))))));\n};\n\nCreate.getInitialProps = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(ctx) {\n    var roomService, userService, _yield$to3, _yield$to4, errorRooms, rooms, filters, _yield$to5, _yield$to6, errorUsers, users;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            roomService = new RoomService(ctx);\n            userService = new UserService(ctx);\n            _context2.next = 4;\n            return to(roomService.index({\n              pageSize: -1\n            }));\n\n          case 4:\n            _yield$to3 = _context2.sent;\n            _yield$to4 = _slicedToArray(_yield$to3, 2);\n            errorRooms = _yield$to4[0];\n            rooms = _yield$to4[1];\n            filters = JSON.stringify({\n              field: \"position\",\n              operator: \"contains\",\n              value: \"Bác sỹ\"\n            });\n            _context2.next = 11;\n            return to(userService.index({\n              pageSize: -1,\n              filters: [filters]\n            }));\n\n          case 11:\n            _yield$to5 = _context2.sent;\n            _yield$to6 = _slicedToArray(_yield$to5, 2);\n            errorUsers = _yield$to6[0];\n            users = _yield$to6[1];\n            return _context2.abrupt(\"return\", {\n              namespacesRequired: ['common', 'pages', 'menu', 'errors'],\n              errorRooms: errorRooms,\n              errorUsers: errorUsers,\n              rooms: _.get(rooms, \"data\", []),\n              users: _.get(users, \"data\", [])\n            });\n\n          case 16:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x2) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nCreate.permissions = {\n  \"admin.doctorAssignments\": \"C\"\n};\nexport default Create;","map":{"version":3,"sources":["E:/nursinghome_github/pages/admin/doctorAssignments/create.tsx"],"names":["React","useState","Layout","Button","Form","Input","Select","DatePicker","RoomService","UserService","DoctorAssignService","_","to","useBaseHook","DeleteFilled","LeftCircleFilled","Option","formItemLayout","labelCol","xs","span","sm","wrapperCol","Create","rooms","users","t","notify","redirect","setStore","getAuth","getStore","loading","setLoading","useForm","form","doctorAssignService","onFinish","values","create","error","result","code","message","renderOptionRoom","map","item","push","renderOptionUser","id","fullname","filterOptionUser","input","option","children","toLowerCase","indexOf","doctorId","undefined","roomCode","dateBegin","dateEnd","note","required","textAlign","marginRight","getInitialProps","ctx","roomService","userService","index","pageSize","errorRooms","filters","JSON","stringify","field","operator","value","errorUsers","namespacesRequired","get","permissions"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport Layout from 'themes/layouts/Admin'\r\nimport { Button, Row, Col, Form, Input, Select, InputNumber, Radio, DatePicker } from 'antd';\r\nimport RoomService from 'themes/services/api/RoomService';\r\nimport UserService from 'themes/services/api/UserService';\r\nimport DoctorAssignService from 'themes/services/api/DoctorAssignmentService';\r\nimport _ from 'lodash';\r\nimport to from 'await-to-js'\r\nimport useBaseHook from 'themes/hooks/BaseHooks'\r\nimport { DeleteFilled, LeftCircleFilled } from '@ant-design/icons';\r\n\r\nconst { Option } = Select\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 4 },\r\n  },\r\n  wrapperCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 18 },\r\n  },\r\n};\r\n\r\nconst Create = ({ rooms, users }: { rooms: Room[], users: User[] }) => {\r\n  const { t, notify, redirect, setStore, getAuth, getStore } = useBaseHook();\r\n  const [loading, setLoading] = useState(false);\r\n  const [form] = Form.useForm();\r\n  const doctorAssignService = new DoctorAssignService()\r\n  //submit form\r\n  const onFinish = async (values: any): Promise<void> => {\r\n    setLoading(true)\r\n    let [error, result]: any[] = await to(doctorAssignService.create(values));\r\n    setLoading(false)\r\n\r\n    if (error) {\r\n      return notify(t(`errors:${error.code}`), t(error.message), 'error')\r\n    }\r\n    notify(t(\"message.recordCreated\"))\r\n    redirect(\"frontend.admin.doctorAssignments.index\")\r\n  }\r\n\r\n  //render option\r\n  const renderOptionRoom = (): JSX.Element[] => {\r\n    let result: JSX.Element[] = [];\r\n    rooms.map(item => {\r\n      result.push(\r\n      <Option value={item.code} key={item.code}>{item.code}</Option>\r\n      )\r\n    })\r\n    return result;\r\n  }\r\n\r\n  const renderOptionUser = (): JSX.Element[] => {\r\n    let result: JSX.Element[] = [];\r\n    users.map(item => {\r\n      result.push(\r\n      <Option value={item.id} key={item.id}>{item.code} - {item.fullname}</Option>\r\n      )\r\n    })\r\n    return result;\r\n  }\r\n\r\n  // filter option\r\n  const filterOptionUser = (input: any, option: any) => {\r\n    return option.children[2].toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n  }\r\n  \r\n  return <Layout>\r\n    <div className=\"content\">\r\n      <Form\r\n        {...formItemLayout}\r\n        form={form}\r\n        name=\"createDoctorAssign\"\r\n        initialValues={{\r\n          doctorId: undefined,\r\n          roomCode: undefined,\r\n          dateBegin: \"\",\r\n          dateEnd: \"\",\r\n          note: \"\"\r\n        }}\r\n        onFinish={onFinish}\r\n        scrollToFirstError\r\n      >\r\n        <Form.Item\r\n          label={t(\"doctor\")}\r\n          name=\"doctorId\"\r\n          rules={[\r\n            { required: true, message: t('form.required') },\r\n          ]}\r\n        >\r\n          <Select \r\n            showSearch\r\n            placeholder = {t('placeholder.user')}\r\n            filterOption={ filterOptionUser }\r\n          >\r\n            {renderOptionUser()}\r\n          </Select>\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={t(\"room\")}\r\n          name=\"roomCode\"\r\n          rules={[\r\n            { required: true, message: t('form.required') },\r\n          ]}\r\n        >\r\n          <Select \r\n            showSearch \r\n            placeholder = {t('placeholder.room')}\r\n          >\r\n            {renderOptionRoom()}\r\n          </Select>\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={t(\"doctorAssignments.dateBegin\")}\r\n          name=\"dateBegin\"\r\n          rules={[\r\n            { required: true, message: t('form.required') },\r\n          ]}\r\n        >\r\n          <DatePicker format={'YYYY-MM-DD'} showTime={false} placeholder={t('placeholder.date')} />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={t(\"doctorAssignments.dateEnd\")}\r\n          name=\"dateEnd\"\r\n        >\r\n          <DatePicker format={'YYYY-MM-DD'} showTime={false} placeholder={t('placeholder.date')} />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={t(\"note\")}\r\n          name=\"note\"\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item wrapperCol={{ span: 24 }} style={{textAlign: \"center\"}}>\r\n          <Button onClick={() => redirect(\"frontend.admin.doctorAssignments.index\")} style={{ marginRight: 8}}>\r\n            <LeftCircleFilled /> {t('cancel')}\r\n          </Button>\r\n          <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\r\n            <DeleteFilled /> {t('submit')}\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  </Layout>\r\n}\r\n\r\nCreate.getInitialProps = async (ctx: any) => {\r\n  const roomService = new RoomService(ctx)\r\n  const userService = new UserService(ctx)\r\n  const [errorRooms, rooms] = await to(roomService.index({ pageSize: -1 }));\r\n  const filters = JSON.stringify({field:\"position\",operator:\"contains\",value:\"Bác sỹ\"})\r\n  const [errorUsers, users] = await to(userService.index({ pageSize: -1, filters: [filters] }));\r\n  return {\r\n    namespacesRequired: ['common', 'pages','menu','errors'],\r\n    errorRooms: errorRooms,\r\n    errorUsers: errorUsers,\r\n    rooms: _.get(rooms, \"data\", []),\r\n    users: _.get(users, \"data\", []),\r\n  }\r\n}\r\nCreate.permissions = {\r\n  \"admin.doctorAssignments\": \"C\"\r\n};\r\nexport default Create"]},"metadata":{},"sourceType":"module"}