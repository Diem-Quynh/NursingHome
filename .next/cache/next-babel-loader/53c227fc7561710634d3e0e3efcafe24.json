{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\DATN\\\\nursinghome\\\\pages\\\\admin\\\\patients\\\\edit.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport ConfirmDialog from 'themes/components/Dialogs/ConfirmDialog';\nimport React, { useState } from 'react';\nimport Layout from 'themes/layouts/Admin';\nimport { Button, Form, Input, Select, Radio, DatePicker } from 'antd';\nimport PatientService from 'themes/services/api/PatientService';\nimport BedService from 'themes/services/api/BedService';\nimport _ from 'lodash';\nimport to from 'await-to-js';\nimport useBaseHook from 'themes/hooks/BaseHooks';\nimport { DeleteFilled, SaveFilled, LeftCircleFilled } from '@ant-design/icons';\nimport usePermissionHook from \"themes/hooks/PermissionHook\";\nimport moment from 'moment';\nvar Option = Select.Option;\nvar formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 4\n    }\n  },\n  wrapperCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 18\n    }\n  }\n};\n\nvar Edit = function Edit(_ref) {\n  _s();\n\n  var beds = _ref.beds,\n      patient = _ref.patient;\n\n  var _useBaseHook = useBaseHook(),\n      t = _useBaseHook.t,\n      notify = _useBaseHook.notify,\n      redirect = _useBaseHook.redirect,\n      setStore = _useBaseHook.setStore,\n      getAuth = _useBaseHook.getAuth,\n      getStore = _useBaseHook.getStore;\n\n  var _useState = useState(false),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  var _useState2 = useState(false),\n      modalVisible = _useState2[0],\n      setModalVisible = _useState2[1];\n\n  var _Form$useForm = Form.useForm(),\n      _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n      form = _Form$useForm2[0];\n\n  var patientService = new PatientService();\n  var confirmRef = React.createRef();\n\n  var _usePermissionHook = usePermissionHook(),\n      checkPermission = _usePermissionHook.checkPermission;\n\n  var deletePer = checkPermission({\n    \"admin.patients\": \"D\"\n  }); //submit form\n\n  var onFinish = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values) {\n      var _yield$to, _yield$to2, error, result;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setLoading(true);\n              _context.next = 3;\n              return to(patientService.edit({\n                id: patient.id,\n                values: values\n              }));\n\n            case 3:\n              _yield$to = _context.sent;\n              _yield$to2 = _slicedToArray(_yield$to, 2);\n              error = _yield$to2[0];\n              result = _yield$to2[1];\n              setLoading(false);\n\n              if (!error) {\n                _context.next = 10;\n                break;\n              }\n\n              return _context.abrupt(\"return\", notify(t(\"errors:\".concat(error.code)), t(error.message), 'error'));\n\n            case 10:\n              notify(t(\"message.recordUpdated\"));\n              redirect(\"frontend.admin.patients.index\");\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onFinish(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var onDelete = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var _yield$to3, _yield$to4, error, result;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return to(patientService[\"delete\"]({\n                ids: [patient.id]\n              }));\n\n            case 2:\n              _yield$to3 = _context2.sent;\n              _yield$to4 = _slicedToArray(_yield$to3, 2);\n              error = _yield$to4[0];\n              result = _yield$to4[1];\n\n              if (!error) {\n                _context2.next = 8;\n                break;\n              }\n\n              return _context2.abrupt(\"return\", notify(t(\"errors:\".concat(error.code)), t(\"\".concat(error.message)), 'error'));\n\n            case 8:\n              notify(t('message.recordDeleted'));\n              redirect(\"frontend.admin.patients.index\");\n\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function onDelete() {\n      return _ref3.apply(this, arguments);\n    };\n  }(); //render option\n\n\n  var renderOption = function renderOption() {\n    var result = [];\n    beds.map(function (item) {\n      result.push(__jsx(Option, {\n        value: item.id,\n        key: item.id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }\n      }, item.roomCode, \" - \", item.bedId, \" - \", item.status ? t('beds.full') : t('beds.empty')));\n    });\n    return result;\n  };\n\n  var renderDeleteDialog = function renderDeleteDialog() {\n    return __jsx(ConfirmDialog, {\n      ref: confirmRef,\n      onSubmit: onDelete,\n      title: t('deleteItem'),\n      content: t('message.deleteConfirm'),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }\n    });\n  };\n\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 10\n    }\n  }, __jsx(\"div\", {\n    className: \"content\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }, __jsx(Form, _extends({}, formItemLayout, {\n    form: form,\n    name: \"createPatient\",\n    initialValues: {\n      fullname: patient.fullname,\n      birthday: patient.birthday ? moment(patient.birthday).subtract(7, 'h') : \"\",\n      gender: patient.gender,\n      address: patient.address,\n      cardId: patient.cardId,\n      phone: patient.phone,\n      medicalHistory: patient.medicalHistory,\n      dateIn: patient.dateIn ? moment(patient.dateIn).subtract(7, 'h') : \"\",\n      dateOut: patient.dateOut ? moment(patient.dateOut).subtract(7, 'h') : \"\",\n      bedId: patient.bedId\n    },\n    onFinish: onFinish,\n    scrollToFirstError: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }), __jsx(Form.Item, {\n    label: t(\"fullname\"),\n    name: \"fullname\",\n    rules: [{\n      required: true,\n      message: t('form.required')\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, __jsx(Input, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  })), __jsx(Form.Item, {\n    label: t(\"birthday\"),\n    name: \"birthday\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, __jsx(DatePicker, {\n    format: 'YYYY-MM-DD',\n    showTime: false,\n    placeholder: t('placeholder.date'),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  })), __jsx(Form.Item, {\n    label: t(\"gender\"),\n    name: \"gender\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, __jsx(Radio.Group, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }, __jsx(Radio, {\n    value: 0,\n    key: 0,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }, t(\"male\")), __jsx(Radio, {\n    value: 1,\n    key: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, t(\"female\")))), __jsx(Form.Item, {\n    label: t(\"address\"),\n    name: \"address\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  }, __jsx(Input, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 11\n    }\n  })), __jsx(Form.Item, {\n    label: t(\"cardId\"),\n    name: \"cardId\",\n    rules: [{\n      max: 12,\n      message: t('form.maxLength', {\n        length: 12\n      })\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }, __jsx(Input, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 11\n    }\n  })), __jsx(Form.Item, {\n    label: t(\"phone\"),\n    name: \"phone\",\n    rules: [{\n      max: 12,\n      message: t('form.maxLength', {\n        length: 12\n      })\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }\n  }, __jsx(Input, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 11\n    }\n  })), __jsx(Form.Item, {\n    label: t(\"patients.medicalHistory\"),\n    name: \"medicalHistory\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }\n  }, __jsx(Input, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 11\n    }\n  })), __jsx(Form.Item, {\n    label: t(\"patients.dateIn\"),\n    name: \"dateIn\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }\n  }, __jsx(DatePicker, {\n    format: 'YYYY-MM-DD',\n    showTime: false,\n    placeholder: t('placeholder.date'),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 11\n    }\n  })), __jsx(Form.Item, {\n    label: t(\"patients.dateOut\"),\n    name: \"dateOut\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }\n  }, __jsx(DatePicker, {\n    format: 'YYYY-MM-DD',\n    showTime: false,\n    placeholder: t('placeholder.date'),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 11\n    }\n  })), __jsx(Form.Item, {\n    label: t(\"bed\"),\n    name: \"bedId\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }\n  }, __jsx(Select, {\n    showSearch: true,\n    placeholder: t('placeholder.bed'),\n    filterOption: function filterOption(input, option) {\n      return option.children[0].toLowerCase().indexOf(input.toLowerCase()) >= 0;\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 11\n    }\n  }, renderOption())), __jsx(Form.Item, {\n    wrapperCol: {\n      span: 24\n    },\n    style: {\n      textAlign: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    onClick: function onClick() {\n      return redirect(\"frontend.admin.patients.index\");\n    },\n    style: {\n      marginRight: 8\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 11\n    }\n  }, __jsx(LeftCircleFilled, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 13\n    }\n  }), \" \", t('cancel')), __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: loading,\n    style: {\n      marginRight: 8\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 11\n    }\n  }, __jsx(SaveFilled, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 13\n    }\n  }), \" \", t('submit')), __jsx(Button, {\n    hidden: !deletePer,\n    danger: true,\n    onClick: function onClick() {\n      if (confirmRef.current) confirmRef.current.show(patient.id);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 11\n    }\n  }, __jsx(DeleteFilled, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 13\n    }\n  }), \" \", t('deleteItem')))), renderDeleteDialog()));\n};\n\n_s(Edit, \"iUB1GndivFDhzIDYimUOdud+Mtc=\", false, function () {\n  return [useBaseHook, Form.useForm, usePermissionHook];\n});\n\n_c = Edit;\n\nEdit.getInitialProps = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(ctx) {\n    var patientService, bedService, query, error, _yield$to5, _yield$to6, patientError, patient, _yield$to7, _yield$to8, errorBed, beds;\n\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            patientService = new PatientService(ctx);\n            bedService = new BedService(ctx);\n            query = ctx.query;\n\n            if (!query.id) {\n              //error missing id\n              error = {\n                code: 9996,\n                message: 'missing ID'\n              };\n            }\n\n            _context3.next = 6;\n            return to(patientService.detail({\n              id: query.id\n            }));\n\n          case 6:\n            _yield$to5 = _context3.sent;\n            _yield$to6 = _slicedToArray(_yield$to5, 2);\n            patientError = _yield$to6[0];\n            patient = _yield$to6[1];\n            _context3.next = 12;\n            return to(bedService.index({\n              pageSize: -1\n            }));\n\n          case 12:\n            _yield$to7 = _context3.sent;\n            _yield$to8 = _slicedToArray(_yield$to7, 2);\n            errorBed = _yield$to8[0];\n            beds = _yield$to8[1];\n            return _context3.abrupt(\"return\", {\n              namespacesRequired: ['common', 'pages', 'menu', 'errors'],\n              error: error,\n              patient: patient,\n              beds: _.get(beds, \"data\", [])\n            });\n\n          case 17:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function (_x2) {\n    return _ref4.apply(this, arguments);\n  };\n}();\n\nEdit.permissions = {\n  \"admin.patients\": \"U\"\n};\nexport default Edit;\n\nvar _c;\n\n$RefreshReg$(_c, \"Edit\");","map":{"version":3,"sources":["E:/DATN/nursinghome/pages/admin/patients/edit.tsx"],"names":["ConfirmDialog","React","useState","Layout","Button","Form","Input","Select","Radio","DatePicker","PatientService","BedService","_","to","useBaseHook","DeleteFilled","SaveFilled","LeftCircleFilled","usePermissionHook","moment","Option","formItemLayout","labelCol","xs","span","sm","wrapperCol","Edit","beds","patient","t","notify","redirect","setStore","getAuth","getStore","loading","setLoading","modalVisible","setModalVisible","useForm","form","patientService","confirmRef","createRef","checkPermission","deletePer","onFinish","values","edit","id","error","result","code","message","onDelete","ids","renderOption","map","item","push","roomCode","bedId","status","renderDeleteDialog","fullname","birthday","subtract","gender","address","cardId","phone","medicalHistory","dateIn","dateOut","required","max","length","input","option","children","toLowerCase","indexOf","textAlign","marginRight","current","show","getInitialProps","ctx","bedService","query","detail","patientError","index","pageSize","errorBed","namespacesRequired","get","permissions"],"mappings":"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","sourcesContent":["import ConfirmDialog from 'themes/components/Dialogs/ConfirmDialog';\r\n\r\nimport React, { useState } from 'react'\r\nimport Layout from 'themes/layouts/Admin'\r\nimport { Button, Row, Col, Form, Input, Select, Modal, InputNumber, Radio, DatePicker } from 'antd';\r\nimport PatientService from 'themes/services/api/PatientService';\r\nimport BedService from 'themes/services/api/BedService';\r\nimport _ from 'lodash';\r\nimport to from 'await-to-js'\r\nimport useBaseHook from 'themes/hooks/BaseHooks'\r\nimport { DeleteFilled, SaveFilled, LeftCircleFilled, CopyFilled } from '@ant-design/icons';\r\nimport usePermissionHook from \"themes/hooks/PermissionHook\";\r\nimport moment from 'moment'\r\n\r\nconst { Option } = Select\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 4 },\r\n  },\r\n  wrapperCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 18 },\r\n  },\r\n};\r\n\r\nconst Edit = ({ beds, patient }: { beds: Bed[], patient: Patient }) => {\r\n  const { t, notify, redirect, setStore, getAuth, getStore } = useBaseHook();\r\n  const [loading, setLoading] = useState(false);\r\n  const [modalVisible, setModalVisible] = useState(false)\r\n  const [form] = Form.useForm();\r\n  const patientService = new PatientService()\r\n  const confirmRef = React.createRef<ConfirmDialog>()\r\n\r\n  const { checkPermission } = usePermissionHook();\r\n  const deletePer = checkPermission({\r\n    \"admin.patients\": \"D\"\r\n  })\r\n  //submit form\r\n  const onFinish = async (values: any): Promise<void> => {\r\n    setLoading(true)\r\n    let [error, result]: any[] = await to(patientService.edit({\r\n      id: patient.id,\r\n      values\r\n    }));\r\n    setLoading(false)\r\n\r\n    if (error) {\r\n      return notify(t(`errors:${error.code}`), t(error.message), 'error')\r\n    }\r\n    notify(t(\"message.recordUpdated\"))\r\n    redirect(\"frontend.admin.patients.index\")\r\n  }\r\n\r\n  const onDelete = async (): Promise<void> => {\r\n    let [error, result]: any[] = await to(patientService.delete({ ids: [patient.id] }));\r\n\r\n    if (error) {\r\n      return notify(t(`errors:${error.code}`), t(`${error.message}`), 'error')\r\n    }\r\n    notify(t('message.recordDeleted'))\r\n    redirect(\"frontend.admin.patients.index\")\r\n  }\r\n\r\n  //render option\r\n  const renderOption = (): JSX.Element[] => {\r\n    let result: JSX.Element[] = [];\r\n    beds.map(item => {\r\n      result.push(\r\n        <Option value={item.id} key={item.id}>{item.roomCode} - {item.bedId} - {item.status?t('beds.full'):t('beds.empty')}</Option>\r\n      )\r\n    })\r\n    return result;\r\n  }\r\n  const renderDeleteDialog = () => {\r\n    return (\r\n      <ConfirmDialog\r\n        ref={confirmRef}\r\n        onSubmit={onDelete}\r\n        title={t('deleteItem')}\r\n        content={t('message.deleteConfirm')}\r\n      />\r\n    )\r\n  }\r\n\r\n  return <Layout>\r\n    <div className=\"content\">\r\n      <Form\r\n        {...formItemLayout}\r\n        form={form}\r\n        name=\"createPatient\"\r\n        initialValues={{\r\n          fullname: patient.fullname,\r\n          birthday: patient.birthday ? moment(patient.birthday).subtract(7,'h') : \"\",\r\n          gender: patient.gender,\r\n          address: patient.address,\r\n          cardId: patient.cardId,\r\n          phone: patient.phone,\r\n          medicalHistory: patient.medicalHistory,\r\n          dateIn: patient.dateIn ? moment(patient.dateIn).subtract(7,'h') : \"\",\r\n          dateOut: patient.dateOut ? moment(patient.dateOut).subtract(7,'h') : \"\",\r\n          bedId: patient.bedId\r\n        }}\r\n        onFinish={onFinish}\r\n        scrollToFirstError\r\n      >\r\n        <Form.Item\r\n          label={t(\"fullname\")}\r\n          name=\"fullname\"\r\n          rules={[\r\n            { required: true, message: t('form.required') },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={t(\"birthday\")}\r\n          name=\"birthday\"\r\n        >\r\n          <DatePicker format={'YYYY-MM-DD'} showTime={false} placeholder={t('placeholder.date')} />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={t(\"gender\")}\r\n          name=\"gender\"\r\n        >\r\n          <Radio.Group>\r\n            <Radio value={0} key={0}>{t(\"male\")}</Radio>\r\n            <Radio value={1} key={1}>{t(\"female\")}</Radio>\r\n          </Radio.Group>\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={t(\"address\")}\r\n          name=\"address\"\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={t(\"cardId\")}\r\n          name=\"cardId\"\r\n          rules={[\r\n            { max: 12, message: t('form.maxLength', { length: 12 }) }\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={t(\"phone\")}\r\n          name=\"phone\"\r\n          rules={[\r\n            { max: 12, message: t('form.maxLength', { length: 12 }) }\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={t(\"patients.medicalHistory\")}\r\n          name=\"medicalHistory\"\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={t(\"patients.dateIn\")}\r\n          name=\"dateIn\"\r\n        >\r\n          <DatePicker format={'YYYY-MM-DD'} showTime={false} placeholder={t('placeholder.date')} />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={t(\"patients.dateOut\")}\r\n          name=\"dateOut\"\r\n        >\r\n          <DatePicker format={'YYYY-MM-DD'} showTime={false} placeholder={t('placeholder.date')} />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={t(\"bed\")}\r\n          name=\"bedId\"\r\n        >\r\n          <Select\r\n            showSearch\r\n            placeholder={t('placeholder.bed')}\r\n            filterOption={(input: any, option: any) => {\r\n              return option.children[0].toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n            }}\r\n          >\r\n            {renderOption()}\r\n          </Select>\r\n        </Form.Item>\r\n\r\n        <Form.Item wrapperCol={{ span: 24 }} style={{ textAlign: \"center\" }}>\r\n          <Button onClick={() => redirect(\"frontend.admin.patients.index\")} style={{ marginRight: 8 }}>\r\n            <LeftCircleFilled /> {t('cancel')}\r\n          </Button>\r\n\r\n          <Button type=\"primary\" htmlType=\"submit\" loading={loading} style={{ marginRight: 8 }}>\r\n            <SaveFilled /> {t('submit')}\r\n          </Button>\r\n          \r\n          <Button hidden={!deletePer} danger onClick={() => { \r\n              if (confirmRef.current) confirmRef.current.show(patient.id) \r\n            }}>\r\n            <DeleteFilled /> {t('deleteItem')}\r\n          </Button>\r\n         \r\n        </Form.Item>\r\n      </Form>\r\n      {renderDeleteDialog()}\r\n    </div>\r\n  </Layout>\r\n}\r\n\r\nEdit.getInitialProps = async (ctx: any) => {\r\n  const patientService = new PatientService(ctx)\r\n  const bedService = new BedService(ctx)\r\n  const query = ctx.query;\r\n  let error: any;\r\n\r\n  if (!query.id) {\r\n    //error missing id\r\n    error = {\r\n      code: 9996,\r\n      message: 'missing ID'\r\n    }\r\n  }\r\n\r\n  let [patientError, patient] = await to(patientService.detail({ id: query.id }));\r\n  const [errorBed, beds] = await to(bedService.index({ pageSize: -1 }));\r\n  return {\r\n    namespacesRequired: ['common', 'pages', 'menu','errors'],\r\n    error: error,\r\n    patient: patient,\r\n    beds: _.get(beds, \"data\", []),\r\n  }\r\n}\r\nEdit.permissions = {\r\n  \"admin.patients\": \"U\"\r\n};\r\nexport default Edit"]},"metadata":{},"sourceType":"module"}